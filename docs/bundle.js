(()=>{"use strict";var __webpack_modules__={962:module=>{eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\nfunction toObject(val) {\n    if (val === null || val === undefined) {\n        throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n    return Object(val);\n}\nfunction shouldUseNative() {\n    try {\n        if (!Object.assign) {\n            return false;\n        }\n        // Detect buggy property enumeration order in older V8 versions.\n        // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n        var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n        test1[5] = 'de';\n        if (Object.getOwnPropertyNames(test1)[0] === '5') {\n            return false;\n        }\n        // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n        var test2 = {};\n        for (var i = 0; i < 10; i++) {\n            test2['_' + String.fromCharCode(i)] = i;\n        }\n        var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n            return test2[n];\n        });\n        if (order2.join('') !== '0123456789') {\n            return false;\n        }\n        // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n        var test3 = {};\n        'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n            test3[letter] = letter;\n        });\n        if (Object.keys(Object.assign({}, test3)).join('') !==\n            'abcdefghijklmnopqrst') {\n            return false;\n        }\n        return true;\n    }\n    catch (err) {\n        // We don't expect any of the above to throw, but better to be safe.\n        return false;\n    }\n}\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n    var from;\n    var to = toObject(target);\n    var symbols;\n    for (var s = 1; s < arguments.length; s++) {\n        from = Object(arguments[s]);\n        for (var key in from) {\n            if (hasOwnProperty.call(from, key)) {\n                to[key] = from[key];\n            }\n        }\n        if (getOwnPropertySymbols) {\n            symbols = getOwnPropertySymbols(from);\n            for (var i = 0; i < symbols.length; i++) {\n                if (propIsEnumerable.call(from, symbols[i])) {\n                    to[symbols[i]] = from[symbols[i]];\n                }\n            }\n        }\n    }\n    return to;\n};\n\n\n//# sourceURL=webpack://segu-g.github.io/./node_modules/object-assign/index.js?")},588:(__unused_webpack_module,exports,__webpack_require__)=>{eval('/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n\nvar aa = __webpack_require__(114), m = __webpack_require__(962), r = __webpack_require__(687);\nfunction y(a) { for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)\n    b += "&args[]=" + encodeURIComponent(arguments[c]); return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."; }\nif (!aa)\n    throw Error(y(227));\nvar ba = new Set, ca = {};\nfunction da(a, b) { ea(a, b); ea(a + "Capture", b); }\nfunction ea(a, b) { ca[a] = b; for (a = 0; a < b.length; a++)\n    ba.add(b[a]); }\nvar fa = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), ha = /^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/, ia = Object.prototype.hasOwnProperty, ja = {}, ka = {};\nfunction la(a) { if (ia.call(ka, a))\n    return !0; if (ia.call(ja, a))\n    return !1; if (ha.test(a))\n    return ka[a] = !0; ja[a] = !0; return !1; }\nfunction ma(a, b, c, d) { if (null !== c && 0 === c.type)\n    return !1; switch (typeof b) {\n    case "function":\n    case "symbol": return !0;\n    case "boolean":\n        if (d)\n            return !1;\n        if (null !== c)\n            return !c.acceptsBooleans;\n        a = a.toLowerCase().slice(0, 5);\n        return "data-" !== a && "aria-" !== a;\n    default: return !1;\n} }\nfunction na(a, b, c, d) { if (null === b || "undefined" === typeof b || ma(a, b, c, d))\n    return !0; if (d)\n    return !1; if (null !== c)\n    switch (c.type) {\n        case 3: return !b;\n        case 4: return !1 === b;\n        case 5: return isNaN(b);\n        case 6: return isNaN(b) || 1 > b;\n    } return !1; }\nfunction B(a, b, c, d, e, f, g) { this.acceptsBooleans = 2 === b || 3 === b || 4 === b; this.attributeName = d; this.attributeNamespace = e; this.mustUseProperty = c; this.propertyName = a; this.type = b; this.sanitizeURL = f; this.removeEmptyString = g; }\nvar D = {};\n"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function (a) { D[a] = new B(a, 0, !1, a, null, !1, !1); });\n[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function (a) { var b = a[0]; D[b] = new B(b, 1, !1, a[1], null, !1, !1); });\n["contentEditable", "draggable", "spellCheck", "value"].forEach(function (a) { D[a] = new B(a, 2, !1, a.toLowerCase(), null, !1, !1); });\n["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function (a) { D[a] = new B(a, 2, !1, a, null, !1, !1); });\n"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function (a) { D[a] = new B(a, 3, !1, a.toLowerCase(), null, !1, !1); });\n["checked", "multiple", "muted", "selected"].forEach(function (a) { D[a] = new B(a, 3, !0, a, null, !1, !1); });\n["capture", "download"].forEach(function (a) { D[a] = new B(a, 4, !1, a, null, !1, !1); });\n["cols", "rows", "size", "span"].forEach(function (a) { D[a] = new B(a, 6, !1, a, null, !1, !1); });\n["rowSpan", "start"].forEach(function (a) { D[a] = new B(a, 5, !1, a.toLowerCase(), null, !1, !1); });\nvar oa = /[\\-:]([a-z])/g;\nfunction pa(a) { return a[1].toUpperCase(); }\n"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function (a) {\n    var b = a.replace(oa, pa);\n    D[b] = new B(b, 1, !1, a, null, !1, !1);\n});\n"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function (a) { var b = a.replace(oa, pa); D[b] = new B(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1); });\n["xml:base", "xml:lang", "xml:space"].forEach(function (a) { var b = a.replace(oa, pa); D[b] = new B(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1); });\n["tabIndex", "crossOrigin"].forEach(function (a) { D[a] = new B(a, 1, !1, a.toLowerCase(), null, !1, !1); });\nD.xlinkHref = new B("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);\n["src", "href", "action", "formAction"].forEach(function (a) { D[a] = new B(a, 1, !1, a.toLowerCase(), null, !0, !0); });\nfunction qa(a, b, c, d) { var e = D.hasOwnProperty(b) ? D[b] : null; var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1] ? !1 : !0; f || (na(b, c, e, d) && (c = null), d || null === e ? la(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c)))); }\nvar ra = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, sa = 60103, ta = 60106, ua = 60107, wa = 60108, xa = 60114, ya = 60109, za = 60110, Aa = 60112, Ba = 60113, Ca = 60120, Da = 60115, Ea = 60116, Fa = 60121, Ga = 60128, Ha = 60129, Ia = 60130, Ja = 60131;\nif ("function" === typeof Symbol && Symbol.for) {\n    var E = Symbol.for;\n    sa = E("react.element");\n    ta = E("react.portal");\n    ua = E("react.fragment");\n    wa = E("react.strict_mode");\n    xa = E("react.profiler");\n    ya = E("react.provider");\n    za = E("react.context");\n    Aa = E("react.forward_ref");\n    Ba = E("react.suspense");\n    Ca = E("react.suspense_list");\n    Da = E("react.memo");\n    Ea = E("react.lazy");\n    Fa = E("react.block");\n    E("react.scope");\n    Ga = E("react.opaque.id");\n    Ha = E("react.debug_trace_mode");\n    Ia = E("react.offscreen");\n    Ja = E("react.legacy_hidden");\n}\nvar Ka = "function" === typeof Symbol && Symbol.iterator;\nfunction La(a) { if (null === a || "object" !== typeof a)\n    return null; a = Ka && a[Ka] || a["@@iterator"]; return "function" === typeof a ? a : null; }\nvar Ma;\nfunction Na(a) { if (void 0 === Ma)\n    try {\n        throw Error();\n    }\n    catch (c) {\n        var b = c.stack.trim().match(/\\n( *(at )?)/);\n        Ma = b && b[1] || "";\n    } return "\\n" + Ma + a; }\nvar Oa = !1;\nfunction Pa(a, b) {\n    if (!a || Oa)\n        return "";\n    Oa = !0;\n    var c = Error.prepareStackTrace;\n    Error.prepareStackTrace = void 0;\n    try {\n        if (b)\n            if (b = function () { throw Error(); }, Object.defineProperty(b.prototype, "props", { set: function () { throw Error(); } }), "object" === typeof Reflect && Reflect.construct) {\n                try {\n                    Reflect.construct(b, []);\n                }\n                catch (k) {\n                    var d = k;\n                }\n                Reflect.construct(a, [], b);\n            }\n            else {\n                try {\n                    b.call();\n                }\n                catch (k) {\n                    d = k;\n                }\n                a.call(b.prototype);\n            }\n        else {\n            try {\n                throw Error();\n            }\n            catch (k) {\n                d = k;\n            }\n            a();\n        }\n    }\n    catch (k) {\n        if (k && d && "string" === typeof k.stack) {\n            for (var e = k.stack.split("\\n"), f = d.stack.split("\\n"), g = e.length - 1, h = f.length - 1; 1 <= g && 0 <= h && e[g] !== f[h];)\n                h--;\n            for (; 1 <= g && 0 <= h; g--, h--)\n                if (e[g] !== f[h]) {\n                    if (1 !== g || 1 !== h) {\n                        do\n                            if (g--, h--, 0 > h || e[g] !== f[h])\n                                return "\\n" + e[g].replace(" at new ", " at ");\n                        while (1 <= g && 0 <= h);\n                    }\n                    break;\n                }\n        }\n    }\n    finally {\n        Oa = !1, Error.prepareStackTrace = c;\n    }\n    return (a = a ? a.displayName || a.name : "") ? Na(a) : "";\n}\nfunction Qa(a) { switch (a.tag) {\n    case 5: return Na(a.type);\n    case 16: return Na("Lazy");\n    case 13: return Na("Suspense");\n    case 19: return Na("SuspenseList");\n    case 0:\n    case 2:\n    case 15: return a = Pa(a.type, !1), a;\n    case 11: return a = Pa(a.type.render, !1), a;\n    case 22: return a = Pa(a.type._render, !1), a;\n    case 1: return a = Pa(a.type, !0), a;\n    default: return "";\n} }\nfunction Ra(a) {\n    if (null == a)\n        return null;\n    if ("function" === typeof a)\n        return a.displayName || a.name || null;\n    if ("string" === typeof a)\n        return a;\n    switch (a) {\n        case ua: return "Fragment";\n        case ta: return "Portal";\n        case xa: return "Profiler";\n        case wa: return "StrictMode";\n        case Ba: return "Suspense";\n        case Ca: return "SuspenseList";\n    }\n    if ("object" === typeof a)\n        switch (a.$$typeof) {\n            case za: return (a.displayName || "Context") + ".Consumer";\n            case ya: return (a._context.displayName || "Context") + ".Provider";\n            case Aa:\n                var b = a.render;\n                b = b.displayName || b.name || "";\n                return a.displayName || ("" !== b ? "ForwardRef(" + b + ")" : "ForwardRef");\n            case Da: return Ra(a.type);\n            case Fa: return Ra(a._render);\n            case Ea:\n                b = a._payload;\n                a = a._init;\n                try {\n                    return Ra(a(b));\n                }\n                catch (c) { }\n        }\n    return null;\n}\nfunction Sa(a) { switch (typeof a) {\n    case "boolean":\n    case "number":\n    case "object":\n    case "string":\n    case "undefined": return a;\n    default: return "";\n} }\nfunction Ta(a) { var b = a.type; return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b); }\nfunction Ua(a) {\n    var b = Ta(a) ? "checked" : "value", c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b), d = "" + a[b];\n    if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {\n        var e = c.get, f = c.set;\n        Object.defineProperty(a, b, { configurable: !0, get: function () { return e.call(this); }, set: function (a) { d = "" + a; f.call(this, a); } });\n        Object.defineProperty(a, b, { enumerable: c.enumerable });\n        return { getValue: function () { return d; }, setValue: function (a) { d = "" + a; }, stopTracking: function () {\n                a._valueTracker =\n                    null;\n                delete a[b];\n            } };\n    }\n}\nfunction Va(a) { a._valueTracker || (a._valueTracker = Ua(a)); }\nfunction Wa(a) { if (!a)\n    return !1; var b = a._valueTracker; if (!b)\n    return !0; var c = b.getValue(); var d = ""; a && (d = Ta(a) ? a.checked ? "true" : "false" : a.value); a = d; return a !== c ? (b.setValue(a), !0) : !1; }\nfunction Xa(a) { a = a || ("undefined" !== typeof document ? document : void 0); if ("undefined" === typeof a)\n    return null; try {\n    return a.activeElement || a.body;\n}\ncatch (b) {\n    return a.body;\n} }\nfunction Ya(a, b) { var c = b.checked; return m({}, b, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != c ? c : a._wrapperState.initialChecked }); }\nfunction Za(a, b) { var c = null == b.defaultValue ? "" : b.defaultValue, d = null != b.checked ? b.checked : b.defaultChecked; c = Sa(null != b.value ? b.value : c); a._wrapperState = { initialChecked: d, initialValue: c, controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value }; }\nfunction $a(a, b) { b = b.checked; null != b && qa(a, "checked", b, !1); }\nfunction ab(a, b) { $a(a, b); var c = Sa(b.value), d = b.type; if (null != c)\n    if ("number" === d) {\n        if (0 === c && "" === a.value || a.value != c)\n            a.value = "" + c;\n    }\n    else\n        a.value !== "" + c && (a.value = "" + c);\nelse if ("submit" === d || "reset" === d) {\n    a.removeAttribute("value");\n    return;\n} b.hasOwnProperty("value") ? bb(a, b.type, c) : b.hasOwnProperty("defaultValue") && bb(a, b.type, Sa(b.defaultValue)); null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked); }\nfunction cb(a, b, c) { if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {\n    var d = b.type;\n    if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value))\n        return;\n    b = "" + a._wrapperState.initialValue;\n    c || b === a.value || (a.value = b);\n    a.defaultValue = b;\n} c = a.name; "" !== c && (a.name = ""); a.defaultChecked = !!a._wrapperState.initialChecked; "" !== c && (a.name = c); }\nfunction bb(a, b, c) { if ("number" !== b || Xa(a.ownerDocument) !== a)\n    null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c); }\nfunction db(a) { var b = ""; aa.Children.forEach(a, function (a) { null != a && (b += a); }); return b; }\nfunction eb(a, b) { a = m({ children: void 0 }, b); if (b = db(b.children))\n    a.children = b; return a; }\nfunction fb(a, b, c, d) { a = a.options; if (b) {\n    b = {};\n    for (var e = 0; e < c.length; e++)\n        b["$" + c[e]] = !0;\n    for (c = 0; c < a.length; c++)\n        e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n}\nelse {\n    c = "" + Sa(c);\n    b = null;\n    for (e = 0; e < a.length; e++) {\n        if (a[e].value === c) {\n            a[e].selected = !0;\n            d && (a[e].defaultSelected = !0);\n            return;\n        }\n        null !== b || a[e].disabled || (b = a[e]);\n    }\n    null !== b && (b.selected = !0);\n} }\nfunction gb(a, b) { if (null != b.dangerouslySetInnerHTML)\n    throw Error(y(91)); return m({}, b, { value: void 0, defaultValue: void 0, children: "" + a._wrapperState.initialValue }); }\nfunction hb(a, b) { var c = b.value; if (null == c) {\n    c = b.children;\n    b = b.defaultValue;\n    if (null != c) {\n        if (null != b)\n            throw Error(y(92));\n        if (Array.isArray(c)) {\n            if (!(1 >= c.length))\n                throw Error(y(93));\n            c = c[0];\n        }\n        b = c;\n    }\n    null == b && (b = "");\n    c = b;\n} a._wrapperState = { initialValue: Sa(c) }; }\nfunction ib(a, b) { var c = Sa(b.value), d = Sa(b.defaultValue); null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c)); null != d && (a.defaultValue = "" + d); }\nfunction jb(a) { var b = a.textContent; b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b); }\nvar kb = { html: "http://www.w3.org/1999/xhtml", mathml: "http://www.w3.org/1998/Math/MathML", svg: "http://www.w3.org/2000/svg" };\nfunction lb(a) { switch (a) {\n    case "svg": return "http://www.w3.org/2000/svg";\n    case "math": return "http://www.w3.org/1998/Math/MathML";\n    default: return "http://www.w3.org/1999/xhtml";\n} }\nfunction mb(a, b) { return null == a || "http://www.w3.org/1999/xhtml" === a ? lb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a; }\nvar nb, ob = function (a) { return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) { MSApp.execUnsafeLocalFunction(function () { return a(b, c, d, e); }); } : a; }(function (a, b) { if (a.namespaceURI !== kb.svg || "innerHTML" in a)\n    a.innerHTML = b;\nelse {\n    nb = nb || document.createElement("div");\n    nb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";\n    for (b = nb.firstChild; a.firstChild;)\n        a.removeChild(a.firstChild);\n    for (; b.firstChild;)\n        a.appendChild(b.firstChild);\n} });\nfunction pb(a, b) { if (b) {\n    var c = a.firstChild;\n    if (c && c === a.lastChild && 3 === c.nodeType) {\n        c.nodeValue = b;\n        return;\n    }\n} a.textContent = b; }\nvar qb = { animationIterationCount: !0, borderImageOutset: !0, borderImageSlice: !0, borderImageWidth: !0, boxFlex: !0, boxFlexGroup: !0, boxOrdinalGroup: !0, columnCount: !0, columns: !0, flex: !0, flexGrow: !0, flexPositive: !0, flexShrink: !0, flexNegative: !0, flexOrder: !0, gridArea: !0, gridRow: !0, gridRowEnd: !0, gridRowSpan: !0, gridRowStart: !0, gridColumn: !0, gridColumnEnd: !0, gridColumnSpan: !0, gridColumnStart: !0, fontWeight: !0, lineClamp: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, tabSize: !0, widows: !0, zIndex: !0, zoom: !0, fillOpacity: !0,\n    floodOpacity: !0, stopOpacity: !0, strokeDasharray: !0, strokeDashoffset: !0, strokeMiterlimit: !0, strokeOpacity: !0, strokeWidth: !0 }, rb = ["Webkit", "ms", "Moz", "O"];\nObject.keys(qb).forEach(function (a) { rb.forEach(function (b) { b = b + a.charAt(0).toUpperCase() + a.substring(1); qb[b] = qb[a]; }); });\nfunction sb(a, b, c) { return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || qb.hasOwnProperty(a) && qb[a] ? ("" + b).trim() : b + "px"; }\nfunction tb(a, b) { a = a.style; for (var c in b)\n    if (b.hasOwnProperty(c)) {\n        var d = 0 === c.indexOf("--"), e = sb(c, b[c], d);\n        "float" === c && (c = "cssFloat");\n        d ? a.setProperty(c, e) : a[c] = e;\n    } }\nvar ub = m({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });\nfunction vb(a, b) { if (b) {\n    if (ub[a] && (null != b.children || null != b.dangerouslySetInnerHTML))\n        throw Error(y(137, a));\n    if (null != b.dangerouslySetInnerHTML) {\n        if (null != b.children)\n            throw Error(y(60));\n        if (!("object" === typeof b.dangerouslySetInnerHTML && "__html" in b.dangerouslySetInnerHTML))\n            throw Error(y(61));\n    }\n    if (null != b.style && "object" !== typeof b.style)\n        throw Error(y(62));\n} }\nfunction wb(a, b) { if (-1 === a.indexOf("-"))\n    return "string" === typeof b.is; switch (a) {\n    case "annotation-xml":\n    case "color-profile":\n    case "font-face":\n    case "font-face-src":\n    case "font-face-uri":\n    case "font-face-format":\n    case "font-face-name":\n    case "missing-glyph": return !1;\n    default: return !0;\n} }\nfunction xb(a) { a = a.target || a.srcElement || window; a.correspondingUseElement && (a = a.correspondingUseElement); return 3 === a.nodeType ? a.parentNode : a; }\nvar yb = null, zb = null, Ab = null;\nfunction Bb(a) { if (a = Cb(a)) {\n    if ("function" !== typeof yb)\n        throw Error(y(280));\n    var b = a.stateNode;\n    b && (b = Db(b), yb(a.stateNode, a.type, b));\n} }\nfunction Eb(a) { zb ? Ab ? Ab.push(a) : Ab = [a] : zb = a; }\nfunction Fb() { if (zb) {\n    var a = zb, b = Ab;\n    Ab = zb = null;\n    Bb(a);\n    if (b)\n        for (a = 0; a < b.length; a++)\n            Bb(b[a]);\n} }\nfunction Gb(a, b) { return a(b); }\nfunction Hb(a, b, c, d, e) { return a(b, c, d, e); }\nfunction Ib() { }\nvar Jb = Gb, Kb = !1, Lb = !1;\nfunction Mb() { if (null !== zb || null !== Ab)\n    Ib(), Fb(); }\nfunction Nb(a, b, c) { if (Lb)\n    return a(b, c); Lb = !0; try {\n    return Jb(a, b, c);\n}\nfinally {\n    Lb = !1, Mb();\n} }\nfunction Ob(a, b) {\n    var c = a.stateNode;\n    if (null === c)\n        return null;\n    var d = Db(c);\n    if (null === d)\n        return null;\n    c = d[b];\n    a: switch (b) {\n        case "onClick":\n        case "onClickCapture":\n        case "onDoubleClick":\n        case "onDoubleClickCapture":\n        case "onMouseDown":\n        case "onMouseDownCapture":\n        case "onMouseMove":\n        case "onMouseMoveCapture":\n        case "onMouseUp":\n        case "onMouseUpCapture":\n        case "onMouseEnter":\n            (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));\n            a = !d;\n            break a;\n        default: a = !1;\n    }\n    if (a)\n        return null;\n    if (c && "function" !==\n        typeof c)\n        throw Error(y(231, b, typeof c));\n    return c;\n}\nvar Pb = !1;\nif (fa)\n    try {\n        var Qb = {};\n        Object.defineProperty(Qb, "passive", { get: function () { Pb = !0; } });\n        window.addEventListener("test", Qb, Qb);\n        window.removeEventListener("test", Qb, Qb);\n    }\n    catch (a) {\n        Pb = !1;\n    }\nfunction Rb(a, b, c, d, e, f, g, h, k) { var l = Array.prototype.slice.call(arguments, 3); try {\n    b.apply(c, l);\n}\ncatch (n) {\n    this.onError(n);\n} }\nvar Sb = !1, Tb = null, Ub = !1, Vb = null, Wb = { onError: function (a) { Sb = !0; Tb = a; } };\nfunction Xb(a, b, c, d, e, f, g, h, k) { Sb = !1; Tb = null; Rb.apply(Wb, arguments); }\nfunction Yb(a, b, c, d, e, f, g, h, k) { Xb.apply(this, arguments); if (Sb) {\n    if (Sb) {\n        var l = Tb;\n        Sb = !1;\n        Tb = null;\n    }\n    else\n        throw Error(y(198));\n    Ub || (Ub = !0, Vb = l);\n} }\nfunction Zb(a) { var b = a, c = a; if (a.alternate)\n    for (; b.return;)\n        b = b.return;\nelse {\n    a = b;\n    do\n        b = a, 0 !== (b.flags & 1026) && (c = b.return), a = b.return;\n    while (a);\n} return 3 === b.tag ? c : null; }\nfunction $b(a) { if (13 === a.tag) {\n    var b = a.memoizedState;\n    null === b && (a = a.alternate, null !== a && (b = a.memoizedState));\n    if (null !== b)\n        return b.dehydrated;\n} return null; }\nfunction ac(a) { if (Zb(a) !== a)\n    throw Error(y(188)); }\nfunction bc(a) {\n    var b = a.alternate;\n    if (!b) {\n        b = Zb(a);\n        if (null === b)\n            throw Error(y(188));\n        return b !== a ? null : a;\n    }\n    for (var c = a, d = b;;) {\n        var e = c.return;\n        if (null === e)\n            break;\n        var f = e.alternate;\n        if (null === f) {\n            d = e.return;\n            if (null !== d) {\n                c = d;\n                continue;\n            }\n            break;\n        }\n        if (e.child === f.child) {\n            for (f = e.child; f;) {\n                if (f === c)\n                    return ac(e), a;\n                if (f === d)\n                    return ac(e), b;\n                f = f.sibling;\n            }\n            throw Error(y(188));\n        }\n        if (c.return !== d.return)\n            c = e, d = f;\n        else {\n            for (var g = !1, h = e.child; h;) {\n                if (h === c) {\n                    g = !0;\n                    c = e;\n                    d = f;\n                    break;\n                }\n                if (h === d) {\n                    g = !0;\n                    d = e;\n                    c = f;\n                    break;\n                }\n                h = h.sibling;\n            }\n            if (!g) {\n                for (h = f.child; h;) {\n                    if (h ===\n                        c) {\n                        g = !0;\n                        c = f;\n                        d = e;\n                        break;\n                    }\n                    if (h === d) {\n                        g = !0;\n                        d = f;\n                        c = e;\n                        break;\n                    }\n                    h = h.sibling;\n                }\n                if (!g)\n                    throw Error(y(189));\n            }\n        }\n        if (c.alternate !== d)\n            throw Error(y(190));\n    }\n    if (3 !== c.tag)\n        throw Error(y(188));\n    return c.stateNode.current === c ? a : b;\n}\nfunction cc(a) { a = bc(a); if (!a)\n    return null; for (var b = a;;) {\n    if (5 === b.tag || 6 === b.tag)\n        return b;\n    if (b.child)\n        b.child.return = b, b = b.child;\n    else {\n        if (b === a)\n            break;\n        for (; !b.sibling;) {\n            if (!b.return || b.return === a)\n                return null;\n            b = b.return;\n        }\n        b.sibling.return = b.return;\n        b = b.sibling;\n    }\n} return null; }\nfunction dc(a, b) { for (var c = a.alternate; null !== b;) {\n    if (b === a || b === c)\n        return !0;\n    b = b.return;\n} return !1; }\nvar ec, fc, gc, hc, ic = !1, jc = [], kc = null, lc = null, mc = null, nc = new Map, oc = new Map, pc = [], qc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");\nfunction rc(a, b, c, d, e) { return { blockedOn: a, domEventName: b, eventSystemFlags: c | 16, nativeEvent: e, targetContainers: [d] }; }\nfunction sc(a, b) { switch (a) {\n    case "focusin":\n    case "focusout":\n        kc = null;\n        break;\n    case "dragenter":\n    case "dragleave":\n        lc = null;\n        break;\n    case "mouseover":\n    case "mouseout":\n        mc = null;\n        break;\n    case "pointerover":\n    case "pointerout":\n        nc.delete(b.pointerId);\n        break;\n    case "gotpointercapture":\n    case "lostpointercapture": oc.delete(b.pointerId);\n} }\nfunction tc(a, b, c, d, e, f) { if (null === a || a.nativeEvent !== f)\n    return a = rc(b, c, d, e, f), null !== b && (b = Cb(b), null !== b && fc(b)), a; a.eventSystemFlags |= d; b = a.targetContainers; null !== e && -1 === b.indexOf(e) && b.push(e); return a; }\nfunction uc(a, b, c, d, e) { switch (b) {\n    case "focusin": return kc = tc(kc, a, b, c, d, e), !0;\n    case "dragenter": return lc = tc(lc, a, b, c, d, e), !0;\n    case "mouseover": return mc = tc(mc, a, b, c, d, e), !0;\n    case "pointerover":\n        var f = e.pointerId;\n        nc.set(f, tc(nc.get(f) || null, a, b, c, d, e));\n        return !0;\n    case "gotpointercapture": return f = e.pointerId, oc.set(f, tc(oc.get(f) || null, a, b, c, d, e)), !0;\n} return !1; }\nfunction vc(a) { var b = wc(a.target); if (null !== b) {\n    var c = Zb(b);\n    if (null !== c)\n        if (b = c.tag, 13 === b) {\n            if (b = $b(c), null !== b) {\n                a.blockedOn = b;\n                hc(a.lanePriority, function () { r.unstable_runWithPriority(a.priority, function () { gc(c); }); });\n                return;\n            }\n        }\n        else if (3 === b && c.stateNode.hydrate) {\n            a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;\n            return;\n        }\n} a.blockedOn = null; }\nfunction xc(a) { if (null !== a.blockedOn)\n    return !1; for (var b = a.targetContainers; 0 < b.length;) {\n    var c = yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);\n    if (null !== c)\n        return b = Cb(c), null !== b && fc(b), a.blockedOn = c, !1;\n    b.shift();\n} return !0; }\nfunction zc(a, b, c) { xc(a) && c.delete(b); }\nfunction Ac() { for (ic = !1; 0 < jc.length;) {\n    var a = jc[0];\n    if (null !== a.blockedOn) {\n        a = Cb(a.blockedOn);\n        null !== a && ec(a);\n        break;\n    }\n    for (var b = a.targetContainers; 0 < b.length;) {\n        var c = yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);\n        if (null !== c) {\n            a.blockedOn = c;\n            break;\n        }\n        b.shift();\n    }\n    null === a.blockedOn && jc.shift();\n} null !== kc && xc(kc) && (kc = null); null !== lc && xc(lc) && (lc = null); null !== mc && xc(mc) && (mc = null); nc.forEach(zc); oc.forEach(zc); }\nfunction Bc(a, b) { a.blockedOn === b && (a.blockedOn = null, ic || (ic = !0, r.unstable_scheduleCallback(r.unstable_NormalPriority, Ac))); }\nfunction Cc(a) { function b(b) { return Bc(b, a); } if (0 < jc.length) {\n    Bc(jc[0], a);\n    for (var c = 1; c < jc.length; c++) {\n        var d = jc[c];\n        d.blockedOn === a && (d.blockedOn = null);\n    }\n} null !== kc && Bc(kc, a); null !== lc && Bc(lc, a); null !== mc && Bc(mc, a); nc.forEach(b); oc.forEach(b); for (c = 0; c < pc.length; c++)\n    d = pc[c], d.blockedOn === a && (d.blockedOn = null); for (; 0 < pc.length && (c = pc[0], null === c.blockedOn);)\n    vc(c), null === c.blockedOn && pc.shift(); }\nfunction Dc(a, b) { var c = {}; c[a.toLowerCase()] = b.toLowerCase(); c["Webkit" + a] = "webkit" + b; c["Moz" + a] = "moz" + b; return c; }\nvar Ec = { animationend: Dc("Animation", "AnimationEnd"), animationiteration: Dc("Animation", "AnimationIteration"), animationstart: Dc("Animation", "AnimationStart"), transitionend: Dc("Transition", "TransitionEnd") }, Fc = {}, Gc = {};\nfa && (Gc = document.createElement("div").style, "AnimationEvent" in window || (delete Ec.animationend.animation, delete Ec.animationiteration.animation, delete Ec.animationstart.animation), "TransitionEvent" in window || delete Ec.transitionend.transition);\nfunction Hc(a) { if (Fc[a])\n    return Fc[a]; if (!Ec[a])\n    return a; var b = Ec[a], c; for (c in b)\n    if (b.hasOwnProperty(c) && c in Gc)\n        return Fc[a] = b[c]; return a; }\nvar Ic = Hc("animationend"), Jc = Hc("animationiteration"), Kc = Hc("animationstart"), Lc = Hc("transitionend"), Mc = new Map, Nc = new Map, Oc = ["abort", "abort", Ic, "animationEnd", Jc, "animationIteration", Kc, "animationStart", "canplay", "canPlay", "canplaythrough", "canPlayThrough", "durationchange", "durationChange", "emptied", "emptied", "encrypted", "encrypted", "ended", "ended", "error", "error", "gotpointercapture", "gotPointerCapture", "load", "load", "loadeddata", "loadedData", "loadedmetadata", "loadedMetadata", "loadstart", "loadStart",\n    "lostpointercapture", "lostPointerCapture", "playing", "playing", "progress", "progress", "seeking", "seeking", "stalled", "stalled", "suspend", "suspend", "timeupdate", "timeUpdate", Lc, "transitionEnd", "waiting", "waiting"];\nfunction Pc(a, b) { for (var c = 0; c < a.length; c += 2) {\n    var d = a[c], e = a[c + 1];\n    e = "on" + (e[0].toUpperCase() + e.slice(1));\n    Nc.set(d, b);\n    Mc.set(d, e);\n    da(e, [d]);\n} }\nvar Qc = r.unstable_now;\nQc();\nvar F = 8;\nfunction Rc(a) {\n    if (0 !== (1 & a))\n        return F = 15, 1;\n    if (0 !== (2 & a))\n        return F = 14, 2;\n    if (0 !== (4 & a))\n        return F = 13, 4;\n    var b = 24 & a;\n    if (0 !== b)\n        return F = 12, b;\n    if (0 !== (a & 32))\n        return F = 11, 32;\n    b = 192 & a;\n    if (0 !== b)\n        return F = 10, b;\n    if (0 !== (a & 256))\n        return F = 9, 256;\n    b = 3584 & a;\n    if (0 !== b)\n        return F = 8, b;\n    if (0 !== (a & 4096))\n        return F = 7, 4096;\n    b = 4186112 & a;\n    if (0 !== b)\n        return F = 6, b;\n    b = 62914560 & a;\n    if (0 !== b)\n        return F = 5, b;\n    if (a & 67108864)\n        return F = 4, 67108864;\n    if (0 !== (a & 134217728))\n        return F = 3, 134217728;\n    b = 805306368 & a;\n    if (0 !== b)\n        return F = 2, b;\n    if (0 !== (1073741824 & a))\n        return F = 1, 1073741824;\n    F = 8;\n    return a;\n}\nfunction Sc(a) { switch (a) {\n    case 99: return 15;\n    case 98: return 10;\n    case 97:\n    case 96: return 8;\n    case 95: return 2;\n    default: return 0;\n} }\nfunction Tc(a) { switch (a) {\n    case 15:\n    case 14: return 99;\n    case 13:\n    case 12:\n    case 11:\n    case 10: return 98;\n    case 9:\n    case 8:\n    case 7:\n    case 6:\n    case 4:\n    case 5: return 97;\n    case 3:\n    case 2:\n    case 1: return 95;\n    case 0: return 90;\n    default: throw Error(y(358, a));\n} }\nfunction Uc(a, b) { var c = a.pendingLanes; if (0 === c)\n    return F = 0; var d = 0, e = 0, f = a.expiredLanes, g = a.suspendedLanes, h = a.pingedLanes; if (0 !== f)\n    d = f, e = F = 15;\nelse if (f = c & 134217727, 0 !== f) {\n    var k = f & ~g;\n    0 !== k ? (d = Rc(k), e = F) : (h &= f, 0 !== h && (d = Rc(h), e = F));\n}\nelse\n    f = c & ~g, 0 !== f ? (d = Rc(f), e = F) : 0 !== h && (d = Rc(h), e = F); if (0 === d)\n    return 0; d = 31 - Vc(d); d = c & ((0 > d ? 0 : 1 << d) << 1) - 1; if (0 !== b && b !== d && 0 === (b & g)) {\n    Rc(b);\n    if (e <= F)\n        return b;\n    F = e;\n} b = a.entangledLanes; if (0 !== b)\n    for (a = a.entanglements, b &= d; 0 < b;)\n        c = 31 - Vc(b), e = 1 << c, d |= a[c], b &= ~e; return d; }\nfunction Wc(a) { a = a.pendingLanes & -1073741825; return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0; }\nfunction Xc(a, b) { switch (a) {\n    case 15: return 1;\n    case 14: return 2;\n    case 12: return a = Yc(24 & ~b), 0 === a ? Xc(10, b) : a;\n    case 10: return a = Yc(192 & ~b), 0 === a ? Xc(8, b) : a;\n    case 8: return a = Yc(3584 & ~b), 0 === a && (a = Yc(4186112 & ~b), 0 === a && (a = 512)), a;\n    case 2: return b = Yc(805306368 & ~b), 0 === b && (b = 268435456), b;\n} throw Error(y(358, a)); }\nfunction Yc(a) { return a & -a; }\nfunction Zc(a) { for (var b = [], c = 0; 31 > c; c++)\n    b.push(a); return b; }\nfunction $c(a, b, c) { a.pendingLanes |= b; var d = b - 1; a.suspendedLanes &= d; a.pingedLanes &= d; a = a.eventTimes; b = 31 - Vc(b); a[b] = c; }\nvar Vc = Math.clz32 ? Math.clz32 : ad, bd = Math.log, cd = Math.LN2;\nfunction ad(a) { return 0 === a ? 32 : 31 - (bd(a) / cd | 0) | 0; }\nvar dd = r.unstable_UserBlockingPriority, ed = r.unstable_runWithPriority, fd = !0;\nfunction gd(a, b, c, d) { Kb || Ib(); var e = hd, f = Kb; Kb = !0; try {\n    Hb(e, a, b, c, d);\n}\nfinally {\n    (Kb = f) || Mb();\n} }\nfunction id(a, b, c, d) { ed(dd, hd.bind(null, a, b, c, d)); }\nfunction hd(a, b, c, d) { if (fd) {\n    var e;\n    if ((e = 0 === (b & 4)) && 0 < jc.length && -1 < qc.indexOf(a))\n        a = rc(null, a, b, c, d), jc.push(a);\n    else {\n        var f = yc(a, b, c, d);\n        if (null === f)\n            e && sc(a, d);\n        else {\n            if (e) {\n                if (-1 < qc.indexOf(a)) {\n                    a = rc(f, a, b, c, d);\n                    jc.push(a);\n                    return;\n                }\n                if (uc(f, a, b, c, d))\n                    return;\n                sc(a, d);\n            }\n            jd(a, b, d, null, c);\n        }\n    }\n} }\nfunction yc(a, b, c, d) { var e = xb(d); e = wc(e); if (null !== e) {\n    var f = Zb(e);\n    if (null === f)\n        e = null;\n    else {\n        var g = f.tag;\n        if (13 === g) {\n            e = $b(f);\n            if (null !== e)\n                return e;\n            e = null;\n        }\n        else if (3 === g) {\n            if (f.stateNode.hydrate)\n                return 3 === f.tag ? f.stateNode.containerInfo : null;\n            e = null;\n        }\n        else\n            f !== e && (e = null);\n    }\n} jd(a, b, d, e, c); return null; }\nvar kd = null, ld = null, md = null;\nfunction nd() { if (md)\n    return md; var a, b = ld, c = b.length, d, e = "value" in kd ? kd.value : kd.textContent, f = e.length; for (a = 0; a < c && b[a] === e[a]; a++)\n    ; var g = c - a; for (d = 1; d <= g && b[c - d] === e[f - d]; d++)\n    ; return md = e.slice(a, 1 < d ? 1 - d : void 0); }\nfunction od(a) { var b = a.keyCode; "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b; 10 === a && (a = 13); return 32 <= a || 13 === a ? a : 0; }\nfunction pd() { return !0; }\nfunction qd() { return !1; }\nfunction rd(a) {\n    function b(b, d, e, f, g) { this._reactName = b; this._targetInst = e; this.type = d; this.nativeEvent = f; this.target = g; this.currentTarget = null; for (var c in a)\n        a.hasOwnProperty(c) && (b = a[c], this[c] = b ? b(f) : f[c]); this.isDefaultPrevented = (null != f.defaultPrevented ? f.defaultPrevented : !1 === f.returnValue) ? pd : qd; this.isPropagationStopped = qd; return this; }\n    m(b.prototype, { preventDefault: function () {\n            this.defaultPrevented = !0;\n            var a = this.nativeEvent;\n            a && (a.preventDefault ? a.preventDefault() : "unknown" !== typeof a.returnValue &&\n                (a.returnValue = !1), this.isDefaultPrevented = pd);\n        }, stopPropagation: function () { var a = this.nativeEvent; a && (a.stopPropagation ? a.stopPropagation() : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = pd); }, persist: function () { }, isPersistent: pd });\n    return b;\n}\nvar sd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function (a) { return a.timeStamp || Date.now(); }, defaultPrevented: 0, isTrusted: 0 }, td = rd(sd), ud = m({}, sd, { view: 0, detail: 0 }), vd = rd(ud), wd, xd, yd, Ad = m({}, ud, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function (a) { return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget; }, movementX: function (a) {\n        if ("movementX" in\n            a)\n            return a.movementX;\n        a !== yd && (yd && "mousemove" === a.type ? (wd = a.screenX - yd.screenX, xd = a.screenY - yd.screenY) : xd = wd = 0, yd = a);\n        return wd;\n    }, movementY: function (a) { return "movementY" in a ? a.movementY : xd; } }), Bd = rd(Ad), Cd = m({}, Ad, { dataTransfer: 0 }), Dd = rd(Cd), Ed = m({}, ud, { relatedTarget: 0 }), Fd = rd(Ed), Gd = m({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Hd = rd(Gd), Id = m({}, sd, { clipboardData: function (a) { return "clipboardData" in a ? a.clipboardData : window.clipboardData; } }), Jd = rd(Id), Kd = m({}, sd, { data: 0 }), Ld = rd(Kd), Md = { Esc: "Escape",\n    Spacebar: " ", Left: "ArrowLeft", Up: "ArrowUp", Right: "ArrowRight", Down: "ArrowDown", Del: "Delete", Win: "OS", Menu: "ContextMenu", Apps: "ContextMenu", Scroll: "ScrollLock", MozPrintableKey: "Unidentified" }, Nd = { 8: "Backspace", 9: "Tab", 12: "Clear", 13: "Enter", 16: "Shift", 17: "Control", 18: "Alt", 19: "Pause", 20: "CapsLock", 27: "Escape", 32: " ", 33: "PageUp", 34: "PageDown", 35: "End", 36: "Home", 37: "ArrowLeft", 38: "ArrowUp", 39: "ArrowRight", 40: "ArrowDown", 45: "Insert", 46: "Delete", 112: "F1", 113: "F2", 114: "F3", 115: "F4", 116: "F5", 117: "F6", 118: "F7",\n    119: "F8", 120: "F9", 121: "F10", 122: "F11", 123: "F12", 144: "NumLock", 145: "ScrollLock", 224: "Meta" }, Od = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };\nfunction Pd(a) { var b = this.nativeEvent; return b.getModifierState ? b.getModifierState(a) : (a = Od[a]) ? !!b[a] : !1; }\nfunction zd() { return Pd; }\nvar Qd = m({}, ud, { key: function (a) { if (a.key) {\n        var b = Md[a.key] || a.key;\n        if ("Unidentified" !== b)\n            return b;\n    } return "keypress" === a.type ? (a = od(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? Nd[a.keyCode] || "Unidentified" : ""; }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function (a) { return "keypress" === a.type ? od(a) : 0; }, keyCode: function (a) { return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0; }, which: function (a) {\n        return "keypress" ===\n            a.type ? od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;\n    } }), Rd = rd(Qd), Sd = m({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Td = rd(Sd), Ud = m({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }), Vd = rd(Ud), Wd = m({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Xd = rd(Wd), Yd = m({}, Ad, { deltaX: function (a) { return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0; },\n    deltaY: function (a) { return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0; }, deltaZ: 0, deltaMode: 0 }), Zd = rd(Yd), $d = [9, 13, 27, 32], ae = fa && "CompositionEvent" in window, be = null;\nfa && "documentMode" in document && (be = document.documentMode);\nvar ce = fa && "TextEvent" in window && !be, de = fa && (!ae || be && 8 < be && 11 >= be), ee = String.fromCharCode(32), fe = !1;\nfunction ge(a, b) { switch (a) {\n    case "keyup": return -1 !== $d.indexOf(b.keyCode);\n    case "keydown": return 229 !== b.keyCode;\n    case "keypress":\n    case "mousedown":\n    case "focusout": return !0;\n    default: return !1;\n} }\nfunction he(a) { a = a.detail; return "object" === typeof a && "data" in a ? a.data : null; }\nvar ie = !1;\nfunction je(a, b) { switch (a) {\n    case "compositionend": return he(b);\n    case "keypress":\n        if (32 !== b.which)\n            return null;\n        fe = !0;\n        return ee;\n    case "textInput": return a = b.data, a === ee && fe ? null : a;\n    default: return null;\n} }\nfunction ke(a, b) { if (ie)\n    return "compositionend" === a || !ae && ge(a, b) ? (a = nd(), md = ld = kd = null, ie = !1, a) : null; switch (a) {\n    case "paste": return null;\n    case "keypress":\n        if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n            if (b.char && 1 < b.char.length)\n                return b.char;\n            if (b.which)\n                return String.fromCharCode(b.which);\n        }\n        return null;\n    case "compositionend": return de && "ko" !== b.locale ? null : b.data;\n    default: return null;\n} }\nvar le = { color: !0, date: !0, datetime: !0, "datetime-local": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };\nfunction me(a) { var b = a && a.nodeName && a.nodeName.toLowerCase(); return "input" === b ? !!le[a.type] : "textarea" === b ? !0 : !1; }\nfunction ne(a, b, c, d) { Eb(d); b = oe(b, "onChange"); 0 < b.length && (c = new td("onChange", "change", null, c, d), a.push({ event: c, listeners: b })); }\nvar pe = null, qe = null;\nfunction re(a) { se(a, 0); }\nfunction te(a) { var b = ue(a); if (Wa(b))\n    return a; }\nfunction ve(a, b) { if ("change" === a)\n    return b; }\nvar we = !1;\nif (fa) {\n    var xe;\n    if (fa) {\n        var ye = "oninput" in document;\n        if (!ye) {\n            var ze = document.createElement("div");\n            ze.setAttribute("oninput", "return;");\n            ye = "function" === typeof ze.oninput;\n        }\n        xe = ye;\n    }\n    else\n        xe = !1;\n    we = xe && (!document.documentMode || 9 < document.documentMode);\n}\nfunction Ae() { pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null); }\nfunction Be(a) { if ("value" === a.propertyName && te(qe)) {\n    var b = [];\n    ne(b, qe, a, xb(a));\n    a = re;\n    if (Kb)\n        a(b);\n    else {\n        Kb = !0;\n        try {\n            Gb(a, b);\n        }\n        finally {\n            Kb = !1, Mb();\n        }\n    }\n} }\nfunction Ce(a, b, c) { "focusin" === a ? (Ae(), pe = b, qe = c, pe.attachEvent("onpropertychange", Be)) : "focusout" === a && Ae(); }\nfunction De(a) { if ("selectionchange" === a || "keyup" === a || "keydown" === a)\n    return te(qe); }\nfunction Ee(a, b) { if ("click" === a)\n    return te(b); }\nfunction Fe(a, b) { if ("input" === a || "change" === a)\n    return te(b); }\nfunction Ge(a, b) { return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b; }\nvar He = "function" === typeof Object.is ? Object.is : Ge, Ie = Object.prototype.hasOwnProperty;\nfunction Je(a, b) { if (He(a, b))\n    return !0; if ("object" !== typeof a || null === a || "object" !== typeof b || null === b)\n    return !1; var c = Object.keys(a), d = Object.keys(b); if (c.length !== d.length)\n    return !1; for (d = 0; d < c.length; d++)\n    if (!Ie.call(b, c[d]) || !He(a[c[d]], b[c[d]]))\n        return !1; return !0; }\nfunction Ke(a) { for (; a && a.firstChild;)\n    a = a.firstChild; return a; }\nfunction Le(a, b) { var c = Ke(a); a = 0; for (var d; c;) {\n    if (3 === c.nodeType) {\n        d = a + c.textContent.length;\n        if (a <= b && d >= b)\n            return { node: c, offset: b - a };\n        a = d;\n    }\n    a: {\n        for (; c;) {\n            if (c.nextSibling) {\n                c = c.nextSibling;\n                break a;\n            }\n            c = c.parentNode;\n        }\n        c = void 0;\n    }\n    c = Ke(c);\n} }\nfunction Me(a, b) { return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Me(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1; }\nfunction Ne() { for (var a = window, b = Xa(); b instanceof a.HTMLIFrameElement;) {\n    try {\n        var c = "string" === typeof b.contentWindow.location.href;\n    }\n    catch (d) {\n        c = !1;\n    }\n    if (c)\n        a = b.contentWindow;\n    else\n        break;\n    b = Xa(a.document);\n} return b; }\nfunction Oe(a) { var b = a && a.nodeName && a.nodeName.toLowerCase(); return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable); }\nvar Pe = fa && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re = null, Se = null, Te = !1;\nfunction Ue(a, b, c) { var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument; Te || null == Qe || Qe !== Xa(d) || (d = Qe, "selectionStart" in d && Oe(d) ? d = { start: d.selectionStart, end: d.selectionEnd } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = { anchorNode: d.anchorNode, anchorOffset: d.anchorOffset, focusNode: d.focusNode, focusOffset: d.focusOffset }), Se && Je(Se, d) || (Se = d, d = oe(Re, "onSelect"), 0 < d.length && (b = new td("onSelect", "select", null, b, c), a.push({ event: b, listeners: d }), b.target = Qe))); }\nPc("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "), 0);\nPc("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "), 1);\nPc(Oc, 2);\nfor (var Ve = "change selectionchange textInput compositionstart compositionend compositionupdate".split(" "), We = 0; We < Ve.length; We++)\n    Nc.set(Ve[We], 0);\nea("onMouseEnter", ["mouseout", "mouseover"]);\nea("onMouseLeave", ["mouseout", "mouseover"]);\nea("onPointerEnter", ["pointerout", "pointerover"]);\nea("onPointerLeave", ["pointerout", "pointerover"]);\nda("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));\nda("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));\nda("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);\nda("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));\nda("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));\nda("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));\nvar Xe = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), Ye = new Set("cancel close invalid load scroll toggle".split(" ").concat(Xe));\nfunction Ze(a, b, c) { var d = a.type || "unknown-event"; a.currentTarget = c; Yb(d, b, void 0, a); a.currentTarget = null; }\nfunction se(a, b) { b = 0 !== (b & 4); for (var c = 0; c < a.length; c++) {\n    var d = a[c], e = d.event;\n    d = d.listeners;\n    a: {\n        var f = void 0;\n        if (b)\n            for (var g = d.length - 1; 0 <= g; g--) {\n                var h = d[g], k = h.instance, l = h.currentTarget;\n                h = h.listener;\n                if (k !== f && e.isPropagationStopped())\n                    break a;\n                Ze(e, h, l);\n                f = k;\n            }\n        else\n            for (g = 0; g < d.length; g++) {\n                h = d[g];\n                k = h.instance;\n                l = h.currentTarget;\n                h = h.listener;\n                if (k !== f && e.isPropagationStopped())\n                    break a;\n                Ze(e, h, l);\n                f = k;\n            }\n    }\n} if (Ub)\n    throw a = Vb, Ub = !1, Vb = null, a; }\nfunction G(a, b) { var c = $e(b), d = a + "__bubble"; c.has(d) || (af(b, a, 2, !1), c.add(d)); }\nvar bf = "_reactListening" + Math.random().toString(36).slice(2);\nfunction cf(a) { a[bf] || (a[bf] = !0, ba.forEach(function (b) { Ye.has(b) || df(b, !1, a, null); df(b, !0, a, null); })); }\nfunction df(a, b, c, d) { var e = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 0, f = c; "selectionchange" === a && 9 !== c.nodeType && (f = c.ownerDocument); if (null !== d && !b && Ye.has(a)) {\n    if ("scroll" !== a)\n        return;\n    e |= 2;\n    f = d;\n} var g = $e(f), h = a + "__" + (b ? "capture" : "bubble"); g.has(h) || (b && (e |= 4), af(f, a, e, b), g.add(h)); }\nfunction af(a, b, c, d) { var e = Nc.get(b); switch (void 0 === e ? 2 : e) {\n    case 0:\n        e = gd;\n        break;\n    case 1:\n        e = id;\n        break;\n    default: e = hd;\n} c = e.bind(null, b, c, a); e = void 0; !Pb || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e = !0); d ? void 0 !== e ? a.addEventListener(b, c, { capture: !0, passive: e }) : a.addEventListener(b, c, !0) : void 0 !== e ? a.addEventListener(b, c, { passive: e }) : a.addEventListener(b, c, !1); }\nfunction jd(a, b, c, d, e) {\n    var f = d;\n    if (0 === (b & 1) && 0 === (b & 2) && null !== d)\n        a: for (;;) {\n            if (null === d)\n                return;\n            var g = d.tag;\n            if (3 === g || 4 === g) {\n                var h = d.stateNode.containerInfo;\n                if (h === e || 8 === h.nodeType && h.parentNode === e)\n                    break;\n                if (4 === g)\n                    for (g = d.return; null !== g;) {\n                        var k = g.tag;\n                        if (3 === k || 4 === k)\n                            if (k = g.stateNode.containerInfo, k === e || 8 === k.nodeType && k.parentNode === e)\n                                return;\n                        g = g.return;\n                    }\n                for (; null !== h;) {\n                    g = wc(h);\n                    if (null === g)\n                        return;\n                    k = g.tag;\n                    if (5 === k || 6 === k) {\n                        d = f = g;\n                        continue a;\n                    }\n                    h = h.parentNode;\n                }\n            }\n            d = d.return;\n        }\n    Nb(function () {\n        var d = f, e = xb(c), g = [];\n        a: {\n            var h = Mc.get(a);\n            if (void 0 !== h) {\n                var k = td, x = a;\n                switch (a) {\n                    case "keypress": if (0 === od(c))\n                        break a;\n                    case "keydown":\n                    case "keyup":\n                        k = Rd;\n                        break;\n                    case "focusin":\n                        x = "focus";\n                        k = Fd;\n                        break;\n                    case "focusout":\n                        x = "blur";\n                        k = Fd;\n                        break;\n                    case "beforeblur":\n                    case "afterblur":\n                        k = Fd;\n                        break;\n                    case "click": if (2 === c.button)\n                        break a;\n                    case "auxclick":\n                    case "dblclick":\n                    case "mousedown":\n                    case "mousemove":\n                    case "mouseup":\n                    case "mouseout":\n                    case "mouseover":\n                    case "contextmenu":\n                        k = Bd;\n                        break;\n                    case "drag":\n                    case "dragend":\n                    case "dragenter":\n                    case "dragexit":\n                    case "dragleave":\n                    case "dragover":\n                    case "dragstart":\n                    case "drop":\n                        k =\n                            Dd;\n                        break;\n                    case "touchcancel":\n                    case "touchend":\n                    case "touchmove":\n                    case "touchstart":\n                        k = Vd;\n                        break;\n                    case Ic:\n                    case Jc:\n                    case Kc:\n                        k = Hd;\n                        break;\n                    case Lc:\n                        k = Xd;\n                        break;\n                    case "scroll":\n                        k = vd;\n                        break;\n                    case "wheel":\n                        k = Zd;\n                        break;\n                    case "copy":\n                    case "cut":\n                    case "paste":\n                        k = Jd;\n                        break;\n                    case "gotpointercapture":\n                    case "lostpointercapture":\n                    case "pointercancel":\n                    case "pointerdown":\n                    case "pointermove":\n                    case "pointerout":\n                    case "pointerover":\n                    case "pointerup": k = Td;\n                }\n                var w = 0 !== (b & 4), z = !w && "scroll" === a, u = w ? null !== h ? h + "Capture" : null : h;\n                w = [];\n                for (var t = d, q; null !==\n                    t;) {\n                    q = t;\n                    var v = q.stateNode;\n                    5 === q.tag && null !== v && (q = v, null !== u && (v = Ob(t, u), null != v && w.push(ef(t, v, q))));\n                    if (z)\n                        break;\n                    t = t.return;\n                }\n                0 < w.length && (h = new k(h, x, null, c, e), g.push({ event: h, listeners: w }));\n            }\n        }\n        if (0 === (b & 7)) {\n            a: {\n                h = "mouseover" === a || "pointerover" === a;\n                k = "mouseout" === a || "pointerout" === a;\n                if (h && 0 === (b & 16) && (x = c.relatedTarget || c.fromElement) && (wc(x) || x[ff]))\n                    break a;\n                if (k || h) {\n                    h = e.window === e ? e : (h = e.ownerDocument) ? h.defaultView || h.parentWindow : window;\n                    if (k) {\n                        if (x = c.relatedTarget || c.toElement, k = d, x = x ? wc(x) : null, null !==\n                            x && (z = Zb(x), x !== z || 5 !== x.tag && 6 !== x.tag))\n                            x = null;\n                    }\n                    else\n                        k = null, x = d;\n                    if (k !== x) {\n                        w = Bd;\n                        v = "onMouseLeave";\n                        u = "onMouseEnter";\n                        t = "mouse";\n                        if ("pointerout" === a || "pointerover" === a)\n                            w = Td, v = "onPointerLeave", u = "onPointerEnter", t = "pointer";\n                        z = null == k ? h : ue(k);\n                        q = null == x ? h : ue(x);\n                        h = new w(v, t + "leave", k, c, e);\n                        h.target = z;\n                        h.relatedTarget = q;\n                        v = null;\n                        wc(e) === d && (w = new w(u, t + "enter", x, c, e), w.target = q, w.relatedTarget = z, v = w);\n                        z = v;\n                        if (k && x)\n                            b: {\n                                w = k;\n                                u = x;\n                                t = 0;\n                                for (q = w; q; q = gf(q))\n                                    t++;\n                                q = 0;\n                                for (v = u; v; v = gf(v))\n                                    q++;\n                                for (; 0 < t - q;)\n                                    w = gf(w), t--;\n                                for (; 0 < q - t;)\n                                    u =\n                                        gf(u), q--;\n                                for (; t--;) {\n                                    if (w === u || null !== u && w === u.alternate)\n                                        break b;\n                                    w = gf(w);\n                                    u = gf(u);\n                                }\n                                w = null;\n                            }\n                        else\n                            w = null;\n                        null !== k && hf(g, h, k, w, !1);\n                        null !== x && null !== z && hf(g, z, x, w, !0);\n                    }\n                }\n            }\n            a: {\n                h = d ? ue(d) : window;\n                k = h.nodeName && h.nodeName.toLowerCase();\n                if ("select" === k || "input" === k && "file" === h.type)\n                    var J = ve;\n                else if (me(h))\n                    if (we)\n                        J = Fe;\n                    else {\n                        J = De;\n                        var K = Ce;\n                    }\n                else\n                    (k = h.nodeName) && "input" === k.toLowerCase() && ("checkbox" === h.type || "radio" === h.type) && (J = Ee);\n                if (J && (J = J(a, d))) {\n                    ne(g, J, c, e);\n                    break a;\n                }\n                K && K(a, h, d);\n                "focusout" === a && (K = h._wrapperState) &&\n                    K.controlled && "number" === h.type && bb(h, "number", h.value);\n            }\n            K = d ? ue(d) : window;\n            switch (a) {\n                case "focusin":\n                    if (me(K) || "true" === K.contentEditable)\n                        Qe = K, Re = d, Se = null;\n                    break;\n                case "focusout":\n                    Se = Re = Qe = null;\n                    break;\n                case "mousedown":\n                    Te = !0;\n                    break;\n                case "contextmenu":\n                case "mouseup":\n                case "dragend":\n                    Te = !1;\n                    Ue(g, c, e);\n                    break;\n                case "selectionchange": if (Pe)\n                    break;\n                case "keydown":\n                case "keyup": Ue(g, c, e);\n            }\n            var Q;\n            if (ae)\n                b: {\n                    switch (a) {\n                        case "compositionstart":\n                            var L = "onCompositionStart";\n                            break b;\n                        case "compositionend":\n                            L = "onCompositionEnd";\n                            break b;\n                        case "compositionupdate":\n                            L = "onCompositionUpdate";\n                            break b;\n                    }\n                    L = void 0;\n                }\n            else\n                ie ? ge(a, c) && (L = "onCompositionEnd") : "keydown" === a && 229 === c.keyCode && (L = "onCompositionStart");\n            L && (de && "ko" !== c.locale && (ie || "onCompositionStart" !== L ? "onCompositionEnd" === L && ie && (Q = nd()) : (kd = e, ld = "value" in kd ? kd.value : kd.textContent, ie = !0)), K = oe(d, L), 0 < K.length && (L = new Ld(L, a, null, c, e), g.push({ event: L, listeners: K }), Q ? L.data = Q : (Q = he(c), null !== Q && (L.data = Q))));\n            if (Q = ce ? je(a, c) : ke(a, c))\n                d = oe(d, "onBeforeInput"), 0 < d.length && (e = new Ld("onBeforeInput", "beforeinput", null, c, e), g.push({ event: e, listeners: d }), e.data = Q);\n        }\n        se(g, b);\n    });\n}\nfunction ef(a, b, c) { return { instance: a, listener: b, currentTarget: c }; }\nfunction oe(a, b) { for (var c = b + "Capture", d = []; null !== a;) {\n    var e = a, f = e.stateNode;\n    5 === e.tag && null !== f && (e = f, f = Ob(a, c), null != f && d.unshift(ef(a, f, e)), f = Ob(a, b), null != f && d.push(ef(a, f, e)));\n    a = a.return;\n} return d; }\nfunction gf(a) { if (null === a)\n    return null; do\n    a = a.return;\nwhile (a && 5 !== a.tag); return a ? a : null; }\nfunction hf(a, b, c, d, e) { for (var f = b._reactName, g = []; null !== c && c !== d;) {\n    var h = c, k = h.alternate, l = h.stateNode;\n    if (null !== k && k === d)\n        break;\n    5 === h.tag && null !== l && (h = l, e ? (k = Ob(c, f), null != k && g.unshift(ef(c, k, h))) : e || (k = Ob(c, f), null != k && g.push(ef(c, k, h))));\n    c = c.return;\n} 0 !== g.length && a.push({ event: b, listeners: g }); }\nfunction jf() { }\nvar kf = null, lf = null;\nfunction mf(a, b) { switch (a) {\n    case "button":\n    case "input":\n    case "select":\n    case "textarea": return !!b.autoFocus;\n} return !1; }\nfunction nf(a, b) { return "textarea" === a || "option" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html; }\nvar of = "function" === typeof setTimeout ? setTimeout : void 0, pf = "function" === typeof clearTimeout ? clearTimeout : void 0;\nfunction qf(a) { 1 === a.nodeType ? a.textContent = "" : 9 === a.nodeType && (a = a.body, null != a && (a.textContent = "")); }\nfunction rf(a) { for (; null != a; a = a.nextSibling) {\n    var b = a.nodeType;\n    if (1 === b || 3 === b)\n        break;\n} return a; }\nfunction sf(a) { a = a.previousSibling; for (var b = 0; a;) {\n    if (8 === a.nodeType) {\n        var c = a.data;\n        if ("$" === c || "$!" === c || "$?" === c) {\n            if (0 === b)\n                return a;\n            b--;\n        }\n        else\n            "/$" === c && b++;\n    }\n    a = a.previousSibling;\n} return null; }\nvar tf = 0;\nfunction uf(a) { return { $$typeof: Ga, toString: a, valueOf: a }; }\nvar vf = Math.random().toString(36).slice(2), wf = "__reactFiber$" + vf, xf = "__reactProps$" + vf, ff = "__reactContainer$" + vf, yf = "__reactEvents$" + vf;\nfunction wc(a) { var b = a[wf]; if (b)\n    return b; for (var c = a.parentNode; c;) {\n    if (b = c[ff] || c[wf]) {\n        c = b.alternate;\n        if (null !== b.child || null !== c && null !== c.child)\n            for (a = sf(a); null !== a;) {\n                if (c = a[wf])\n                    return c;\n                a = sf(a);\n            }\n        return b;\n    }\n    a = c;\n    c = a.parentNode;\n} return null; }\nfunction Cb(a) { a = a[wf] || a[ff]; return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a; }\nfunction ue(a) { if (5 === a.tag || 6 === a.tag)\n    return a.stateNode; throw Error(y(33)); }\nfunction Db(a) { return a[xf] || null; }\nfunction $e(a) { var b = a[yf]; void 0 === b && (b = a[yf] = new Set); return b; }\nvar zf = [], Af = -1;\nfunction Bf(a) { return { current: a }; }\nfunction H(a) { 0 > Af || (a.current = zf[Af], zf[Af] = null, Af--); }\nfunction I(a, b) { Af++; zf[Af] = a.current; a.current = b; }\nvar Cf = {}, M = Bf(Cf), N = Bf(!1), Df = Cf;\nfunction Ef(a, b) { var c = a.type.contextTypes; if (!c)\n    return Cf; var d = a.stateNode; if (d && d.__reactInternalMemoizedUnmaskedChildContext === b)\n    return d.__reactInternalMemoizedMaskedChildContext; var e = {}, f; for (f in c)\n    e[f] = b[f]; d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e); return e; }\nfunction Ff(a) { a = a.childContextTypes; return null !== a && void 0 !== a; }\nfunction Gf() { H(N); H(M); }\nfunction Hf(a, b, c) { if (M.current !== Cf)\n    throw Error(y(168)); I(M, b); I(N, c); }\nfunction If(a, b, c) { var d = a.stateNode; a = b.childContextTypes; if ("function" !== typeof d.getChildContext)\n    return c; d = d.getChildContext(); for (var e in d)\n    if (!(e in a))\n        throw Error(y(108, Ra(b) || "Unknown", e)); return m({}, c, d); }\nfunction Jf(a) { a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Cf; Df = M.current; I(M, a); I(N, N.current); return !0; }\nfunction Kf(a, b, c) { var d = a.stateNode; if (!d)\n    throw Error(y(169)); c ? (a = If(a, b, Df), d.__reactInternalMemoizedMergedChildContext = a, H(N), H(M), I(M, a)) : H(N); I(N, c); }\nvar Lf = null, Mf = null, Nf = r.unstable_runWithPriority, Of = r.unstable_scheduleCallback, Pf = r.unstable_cancelCallback, Qf = r.unstable_shouldYield, Rf = r.unstable_requestPaint, Sf = r.unstable_now, Tf = r.unstable_getCurrentPriorityLevel, Uf = r.unstable_ImmediatePriority, Vf = r.unstable_UserBlockingPriority, Wf = r.unstable_NormalPriority, Xf = r.unstable_LowPriority, Yf = r.unstable_IdlePriority, Zf = {}, $f = void 0 !== Rf ? Rf : function () { }, ag = null, bg = null, cg = !1, dg = Sf(), O = 1E4 > dg ? Sf : function () { return Sf() - dg; };\nfunction eg() { switch (Tf()) {\n    case Uf: return 99;\n    case Vf: return 98;\n    case Wf: return 97;\n    case Xf: return 96;\n    case Yf: return 95;\n    default: throw Error(y(332));\n} }\nfunction fg(a) { switch (a) {\n    case 99: return Uf;\n    case 98: return Vf;\n    case 97: return Wf;\n    case 96: return Xf;\n    case 95: return Yf;\n    default: throw Error(y(332));\n} }\nfunction gg(a, b) { a = fg(a); return Nf(a, b); }\nfunction hg(a, b, c) { a = fg(a); return Of(a, b, c); }\nfunction ig() { if (null !== bg) {\n    var a = bg;\n    bg = null;\n    Pf(a);\n} jg(); }\nfunction jg() { if (!cg && null !== ag) {\n    cg = !0;\n    var a = 0;\n    try {\n        var b = ag;\n        gg(99, function () { for (; a < b.length; a++) {\n            var c = b[a];\n            do\n                c = c(!0);\n            while (null !== c);\n        } });\n        ag = null;\n    }\n    catch (c) {\n        throw null !== ag && (ag = ag.slice(a + 1)), Of(Uf, ig), c;\n    }\n    finally {\n        cg = !1;\n    }\n} }\nvar kg = ra.ReactCurrentBatchConfig;\nfunction lg(a, b) { if (a && a.defaultProps) {\n    b = m({}, b);\n    a = a.defaultProps;\n    for (var c in a)\n        void 0 === b[c] && (b[c] = a[c]);\n    return b;\n} return b; }\nvar mg = Bf(null), ng = null, og = null, pg = null;\nfunction qg() { pg = og = ng = null; }\nfunction rg(a) { var b = mg.current; H(mg); a.type._context._currentValue = b; }\nfunction sg(a, b) { for (; null !== a;) {\n    var c = a.alternate;\n    if ((a.childLanes & b) === b)\n        if (null === c || (c.childLanes & b) === b)\n            break;\n        else\n            c.childLanes |= b;\n    else\n        a.childLanes |= b, null !== c && (c.childLanes |= b);\n    a = a.return;\n} }\nfunction tg(a, b) { ng = a; pg = og = null; a = a.dependencies; null !== a && null !== a.firstContext && (0 !== (a.lanes & b) && (ug = !0), a.firstContext = null); }\nfunction vg(a, b) { if (pg !== a && !1 !== b && 0 !== b) {\n    if ("number" !== typeof b || 1073741823 === b)\n        pg = a, b = 1073741823;\n    b = { context: a, observedBits: b, next: null };\n    if (null === og) {\n        if (null === ng)\n            throw Error(y(308));\n        og = b;\n        ng.dependencies = { lanes: 0, firstContext: b, responders: null };\n    }\n    else\n        og = og.next = b;\n} return a._currentValue; }\nvar wg = !1;\nfunction xg(a) { a.updateQueue = { baseState: a.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null }, effects: null }; }\nfunction yg(a, b) { a = a.updateQueue; b.updateQueue === a && (b.updateQueue = { baseState: a.baseState, firstBaseUpdate: a.firstBaseUpdate, lastBaseUpdate: a.lastBaseUpdate, shared: a.shared, effects: a.effects }); }\nfunction zg(a, b) { return { eventTime: a, lane: b, tag: 0, payload: null, callback: null, next: null }; }\nfunction Ag(a, b) { a = a.updateQueue; if (null !== a) {\n    a = a.shared;\n    var c = a.pending;\n    null === c ? b.next = b : (b.next = c.next, c.next = b);\n    a.pending = b;\n} }\nfunction Bg(a, b) {\n    var c = a.updateQueue, d = a.alternate;\n    if (null !== d && (d = d.updateQueue, c === d)) {\n        var e = null, f = null;\n        c = c.firstBaseUpdate;\n        if (null !== c) {\n            do {\n                var g = { eventTime: c.eventTime, lane: c.lane, tag: c.tag, payload: c.payload, callback: c.callback, next: null };\n                null === f ? e = f = g : f = f.next = g;\n                c = c.next;\n            } while (null !== c);\n            null === f ? e = f = b : f = f.next = b;\n        }\n        else\n            e = f = b;\n        c = { baseState: d.baseState, firstBaseUpdate: e, lastBaseUpdate: f, shared: d.shared, effects: d.effects };\n        a.updateQueue = c;\n        return;\n    }\n    a = c.lastBaseUpdate;\n    null === a ? c.firstBaseUpdate = b : a.next =\n        b;\n    c.lastBaseUpdate = b;\n}\nfunction Cg(a, b, c, d) {\n    var e = a.updateQueue;\n    wg = !1;\n    var f = e.firstBaseUpdate, g = e.lastBaseUpdate, h = e.shared.pending;\n    if (null !== h) {\n        e.shared.pending = null;\n        var k = h, l = k.next;\n        k.next = null;\n        null === g ? f = l : g.next = l;\n        g = k;\n        var n = a.alternate;\n        if (null !== n) {\n            n = n.updateQueue;\n            var A = n.lastBaseUpdate;\n            A !== g && (null === A ? n.firstBaseUpdate = l : A.next = l, n.lastBaseUpdate = k);\n        }\n    }\n    if (null !== f) {\n        A = e.baseState;\n        g = 0;\n        n = l = k = null;\n        do {\n            h = f.lane;\n            var p = f.eventTime;\n            if ((d & h) === h) {\n                null !== n && (n = n.next = { eventTime: p, lane: 0, tag: f.tag, payload: f.payload, callback: f.callback,\n                    next: null });\n                a: {\n                    var C = a, x = f;\n                    h = b;\n                    p = c;\n                    switch (x.tag) {\n                        case 1:\n                            C = x.payload;\n                            if ("function" === typeof C) {\n                                A = C.call(p, A, h);\n                                break a;\n                            }\n                            A = C;\n                            break a;\n                        case 3: C.flags = C.flags & -4097 | 64;\n                        case 0:\n                            C = x.payload;\n                            h = "function" === typeof C ? C.call(p, A, h) : C;\n                            if (null === h || void 0 === h)\n                                break a;\n                            A = m({}, A, h);\n                            break a;\n                        case 2: wg = !0;\n                    }\n                }\n                null !== f.callback && (a.flags |= 32, h = e.effects, null === h ? e.effects = [f] : h.push(f));\n            }\n            else\n                p = { eventTime: p, lane: h, tag: f.tag, payload: f.payload, callback: f.callback, next: null }, null === n ? (l = n = p, k = A) : n = n.next = p, g |= h;\n            f = f.next;\n            if (null ===\n                f)\n                if (h = e.shared.pending, null === h)\n                    break;\n                else\n                    f = h.next, h.next = null, e.lastBaseUpdate = h, e.shared.pending = null;\n        } while (1);\n        null === n && (k = A);\n        e.baseState = k;\n        e.firstBaseUpdate = l;\n        e.lastBaseUpdate = n;\n        Dg |= g;\n        a.lanes = g;\n        a.memoizedState = A;\n    }\n}\nfunction Eg(a, b, c) { a = b.effects; b.effects = null; if (null !== a)\n    for (b = 0; b < a.length; b++) {\n        var d = a[b], e = d.callback;\n        if (null !== e) {\n            d.callback = null;\n            d = c;\n            if ("function" !== typeof e)\n                throw Error(y(191, e));\n            e.call(d);\n        }\n    } }\nvar Fg = (new aa.Component).refs;\nfunction Gg(a, b, c, d) { b = a.memoizedState; c = c(d, b); c = null === c || void 0 === c ? b : m({}, b, c); a.memoizedState = c; 0 === a.lanes && (a.updateQueue.baseState = c); }\nvar Kg = { isMounted: function (a) { return (a = a._reactInternals) ? Zb(a) === a : !1; }, enqueueSetState: function (a, b, c) { a = a._reactInternals; var d = Hg(), e = Ig(a), f = zg(d, e); f.payload = b; void 0 !== c && null !== c && (f.callback = c); Ag(a, f); Jg(a, e, d); }, enqueueReplaceState: function (a, b, c) { a = a._reactInternals; var d = Hg(), e = Ig(a), f = zg(d, e); f.tag = 1; f.payload = b; void 0 !== c && null !== c && (f.callback = c); Ag(a, f); Jg(a, e, d); }, enqueueForceUpdate: function (a, b) {\n        a = a._reactInternals;\n        var c = Hg(), d = Ig(a), e = zg(c, d);\n        e.tag = 2;\n        void 0 !== b && null !== b && (e.callback =\n            b);\n        Ag(a, e);\n        Jg(a, d, c);\n    } };\nfunction Lg(a, b, c, d, e, f, g) { a = a.stateNode; return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !Je(c, d) || !Je(e, f) : !0; }\nfunction Mg(a, b, c) { var d = !1, e = Cf; var f = b.contextType; "object" === typeof f && null !== f ? f = vg(f) : (e = Ff(b) ? Df : M.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Ef(a, e) : Cf); b = new b(c, f); a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null; b.updater = Kg; a.stateNode = b; b._reactInternals = a; d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f); return b; }\nfunction Ng(a, b, c, d) { a = b.state; "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d); "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d); b.state !== a && Kg.enqueueReplaceState(b, b.state, null); }\nfunction Og(a, b, c, d) {\n    var e = a.stateNode;\n    e.props = c;\n    e.state = a.memoizedState;\n    e.refs = Fg;\n    xg(a);\n    var f = b.contextType;\n    "object" === typeof f && null !== f ? e.context = vg(f) : (f = Ff(b) ? Df : M.current, e.context = Ef(a, f));\n    Cg(a, c, e, d);\n    e.state = a.memoizedState;\n    f = b.getDerivedStateFromProps;\n    "function" === typeof f && (Gg(a, b, f, c), e.state = a.memoizedState);\n    "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount ||\n        (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && Kg.enqueueReplaceState(e, e.state, null), Cg(a, c, e, d), e.state = a.memoizedState);\n    "function" === typeof e.componentDidMount && (a.flags |= 4);\n}\nvar Pg = Array.isArray;\nfunction Qg(a, b, c) { a = c.ref; if (null !== a && "function" !== typeof a && "object" !== typeof a) {\n    if (c._owner) {\n        c = c._owner;\n        if (c) {\n            if (1 !== c.tag)\n                throw Error(y(309));\n            var d = c.stateNode;\n        }\n        if (!d)\n            throw Error(y(147, a));\n        var e = "" + a;\n        if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === e)\n            return b.ref;\n        b = function (a) { var b = d.refs; b === Fg && (b = d.refs = {}); null === a ? delete b[e] : b[e] = a; };\n        b._stringRef = e;\n        return b;\n    }\n    if ("string" !== typeof a)\n        throw Error(y(284));\n    if (!c._owner)\n        throw Error(y(290, a));\n} return a; }\nfunction Rg(a, b) { if ("textarea" !== a.type)\n    throw Error(y(31, "[object Object]" === Object.prototype.toString.call(b) ? "object with keys {" + Object.keys(b).join(", ") + "}" : b)); }\nfunction Sg(a) {\n    function b(b, c) { if (a) {\n        var d = b.lastEffect;\n        null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;\n        c.nextEffect = null;\n        c.flags = 8;\n    } }\n    function c(c, d) { if (!a)\n        return null; for (; null !== d;)\n        b(c, d), d = d.sibling; return null; }\n    function d(a, b) { for (a = new Map; null !== b;)\n        null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling; return a; }\n    function e(a, b) { a = Tg(a, b); a.index = 0; a.sibling = null; return a; }\n    function f(b, c, d) {\n        b.index = d;\n        if (!a)\n            return c;\n        d = b.alternate;\n        if (null !== d)\n            return d = d.index, d < c ? (b.flags = 2,\n                c) : d;\n        b.flags = 2;\n        return c;\n    }\n    function g(b) { a && null === b.alternate && (b.flags = 2); return b; }\n    function h(a, b, c, d) { if (null === b || 6 !== b.tag)\n        return b = Ug(c, a.mode, d), b.return = a, b; b = e(b, c); b.return = a; return b; }\n    function k(a, b, c, d) { if (null !== b && b.elementType === c.type)\n        return d = e(b, c.props), d.ref = Qg(a, b, c), d.return = a, d; d = Vg(c.type, c.key, c.props, null, a.mode, d); d.ref = Qg(a, b, c); d.return = a; return d; }\n    function l(a, b, c, d) {\n        if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation)\n            return b =\n                Wg(c, a.mode, d), b.return = a, b;\n        b = e(b, c.children || []);\n        b.return = a;\n        return b;\n    }\n    function n(a, b, c, d, f) { if (null === b || 7 !== b.tag)\n        return b = Xg(c, a.mode, d, f), b.return = a, b; b = e(b, c); b.return = a; return b; }\n    function A(a, b, c) {\n        if ("string" === typeof b || "number" === typeof b)\n            return b = Ug("" + b, a.mode, c), b.return = a, b;\n        if ("object" === typeof b && null !== b) {\n            switch (b.$$typeof) {\n                case sa: return c = Vg(b.type, b.key, b.props, null, a.mode, c), c.ref = Qg(a, null, b), c.return = a, c;\n                case ta: return b = Wg(b, a.mode, c), b.return = a, b;\n            }\n            if (Pg(b) || La(b))\n                return b = Xg(b, a.mode, c, null), b.return = a, b;\n            Rg(a, b);\n        }\n        return null;\n    }\n    function p(a, b, c, d) { var e = null !== b ? b.key : null; if ("string" === typeof c || "number" === typeof c)\n        return null !== e ? null : h(a, b, "" + c, d); if ("object" === typeof c && null !== c) {\n        switch (c.$$typeof) {\n            case sa: return c.key === e ? c.type === ua ? n(a, b, c.props.children, d, e) : k(a, b, c, d) : null;\n            case ta: return c.key === e ? l(a, b, c, d) : null;\n        }\n        if (Pg(c) || La(c))\n            return null !== e ? null : n(a, b, c, d, null);\n        Rg(a, c);\n    } return null; }\n    function C(a, b, c, d, e) {\n        if ("string" === typeof d || "number" === typeof d)\n            return a = a.get(c) ||\n                null, h(b, a, "" + d, e);\n        if ("object" === typeof d && null !== d) {\n            switch (d.$$typeof) {\n                case sa: return a = a.get(null === d.key ? c : d.key) || null, d.type === ua ? n(b, a, d.props.children, e, d.key) : k(b, a, d, e);\n                case ta: return a = a.get(null === d.key ? c : d.key) || null, l(b, a, d, e);\n            }\n            if (Pg(d) || La(d))\n                return a = a.get(c) || null, n(b, a, d, e, null);\n            Rg(b, d);\n        }\n        return null;\n    }\n    function x(e, g, h, k) {\n        for (var l = null, t = null, u = g, z = g = 0, q = null; null !== u && z < h.length; z++) {\n            u.index > z ? (q = u, u = null) : q = u.sibling;\n            var n = p(e, u, h[z], k);\n            if (null === n) {\n                null === u && (u = q);\n                break;\n            }\n            a && u && null ===\n                n.alternate && b(e, u);\n            g = f(n, g, z);\n            null === t ? l = n : t.sibling = n;\n            t = n;\n            u = q;\n        }\n        if (z === h.length)\n            return c(e, u), l;\n        if (null === u) {\n            for (; z < h.length; z++)\n                u = A(e, h[z], k), null !== u && (g = f(u, g, z), null === t ? l = u : t.sibling = u, t = u);\n            return l;\n        }\n        for (u = d(e, u); z < h.length; z++)\n            q = C(u, e, z, h[z], k), null !== q && (a && null !== q.alternate && u.delete(null === q.key ? z : q.key), g = f(q, g, z), null === t ? l = q : t.sibling = q, t = q);\n        a && u.forEach(function (a) { return b(e, a); });\n        return l;\n    }\n    function w(e, g, h, k) {\n        var l = La(h);\n        if ("function" !== typeof l)\n            throw Error(y(150));\n        h = l.call(h);\n        if (null ==\n            h)\n            throw Error(y(151));\n        for (var t = l = null, u = g, z = g = 0, q = null, n = h.next(); null !== u && !n.done; z++, n = h.next()) {\n            u.index > z ? (q = u, u = null) : q = u.sibling;\n            var w = p(e, u, n.value, k);\n            if (null === w) {\n                null === u && (u = q);\n                break;\n            }\n            a && u && null === w.alternate && b(e, u);\n            g = f(w, g, z);\n            null === t ? l = w : t.sibling = w;\n            t = w;\n            u = q;\n        }\n        if (n.done)\n            return c(e, u), l;\n        if (null === u) {\n            for (; !n.done; z++, n = h.next())\n                n = A(e, n.value, k), null !== n && (g = f(n, g, z), null === t ? l = n : t.sibling = n, t = n);\n            return l;\n        }\n        for (u = d(e, u); !n.done; z++, n = h.next())\n            n = C(u, e, z, n.value, k), null !== n && (a && null !== n.alternate &&\n                u.delete(null === n.key ? z : n.key), g = f(n, g, z), null === t ? l = n : t.sibling = n, t = n);\n        a && u.forEach(function (a) { return b(e, a); });\n        return l;\n    }\n    return function (a, d, f, h) {\n        var k = "object" === typeof f && null !== f && f.type === ua && null === f.key;\n        k && (f = f.props.children);\n        var l = "object" === typeof f && null !== f;\n        if (l)\n            switch (f.$$typeof) {\n                case sa:\n                    a: {\n                        l = f.key;\n                        for (k = d; null !== k;) {\n                            if (k.key === l) {\n                                switch (k.tag) {\n                                    case 7:\n                                        if (f.type === ua) {\n                                            c(a, k.sibling);\n                                            d = e(k, f.props.children);\n                                            d.return = a;\n                                            a = d;\n                                            break a;\n                                        }\n                                        break;\n                                    default: if (k.elementType === f.type) {\n                                        c(a, k.sibling);\n                                        d = e(k, f.props);\n                                        d.ref = Qg(a, k, f);\n                                        d.return = a;\n                                        a = d;\n                                        break a;\n                                    }\n                                }\n                                c(a, k);\n                                break;\n                            }\n                            else\n                                b(a, k);\n                            k = k.sibling;\n                        }\n                        f.type === ua ? (d = Xg(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = Vg(f.type, f.key, f.props, null, a.mode, h), h.ref = Qg(a, d, f), h.return = a, a = h);\n                    }\n                    return g(a);\n                case ta:\n                    a: {\n                        for (k = f.key; null !== d;) {\n                            if (d.key === k)\n                                if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                                    c(a, d.sibling);\n                                    d = e(d, f.children || []);\n                                    d.return = a;\n                                    a = d;\n                                    break a;\n                                }\n                                else {\n                                    c(a, d);\n                                    break;\n                                }\n                            else\n                                b(a, d);\n                            d = d.sibling;\n                        }\n                        d =\n                            Wg(f, a.mode, h);\n                        d.return = a;\n                        a = d;\n                    }\n                    return g(a);\n            }\n        if ("string" === typeof f || "number" === typeof f)\n            return f = "" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f), d.return = a, a = d) : (c(a, d), d = Ug(f, a.mode, h), d.return = a, a = d), g(a);\n        if (Pg(f))\n            return x(a, d, f, h);\n        if (La(f))\n            return w(a, d, f, h);\n        l && Rg(a, f);\n        if ("undefined" === typeof f && !k)\n            switch (a.tag) {\n                case 1:\n                case 22:\n                case 0:\n                case 11:\n                case 15: throw Error(y(152, Ra(a.type) || "Component"));\n            }\n        return c(a, d);\n    };\n}\nvar Yg = Sg(!0), Zg = Sg(!1), $g = {}, ah = Bf($g), bh = Bf($g), ch = Bf($g);\nfunction dh(a) { if (a === $g)\n    throw Error(y(174)); return a; }\nfunction eh(a, b) { I(ch, b); I(bh, a); I(ah, $g); a = b.nodeType; switch (a) {\n    case 9:\n    case 11:\n        b = (b = b.documentElement) ? b.namespaceURI : mb(null, "");\n        break;\n    default: a = 8 === a ? b.parentNode : b, b = a.namespaceURI || null, a = a.tagName, b = mb(b, a);\n} H(ah); I(ah, b); }\nfunction fh() { H(ah); H(bh); H(ch); }\nfunction gh(a) { dh(ch.current); var b = dh(ah.current); var c = mb(b, a.type); b !== c && (I(bh, a), I(ah, c)); }\nfunction hh(a) { bh.current === a && (H(ah), H(bh)); }\nvar P = Bf(0);\nfunction ih(a) { for (var b = a; null !== b;) {\n    if (13 === b.tag) {\n        var c = b.memoizedState;\n        if (null !== c && (c = c.dehydrated, null === c || "$?" === c.data || "$!" === c.data))\n            return b;\n    }\n    else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {\n        if (0 !== (b.flags & 64))\n            return b;\n    }\n    else if (null !== b.child) {\n        b.child.return = b;\n        b = b.child;\n        continue;\n    }\n    if (b === a)\n        break;\n    for (; null === b.sibling;) {\n        if (null === b.return || b.return === a)\n            return null;\n        b = b.return;\n    }\n    b.sibling.return = b.return;\n    b = b.sibling;\n} return null; }\nvar jh = null, kh = null, lh = !1;\nfunction mh(a, b) { var c = nh(5, null, null, 0); c.elementType = "DELETED"; c.type = "DELETED"; c.stateNode = b; c.return = a; c.flags = 8; null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c; }\nfunction oh(a, b) { switch (a.tag) {\n    case 5:\n        var c = a.type;\n        b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;\n        return null !== b ? (a.stateNode = b, !0) : !1;\n    case 6: return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;\n    case 13: return !1;\n    default: return !1;\n} }\nfunction ph(a) { if (lh) {\n    var b = kh;\n    if (b) {\n        var c = b;\n        if (!oh(a, b)) {\n            b = rf(c.nextSibling);\n            if (!b || !oh(a, b)) {\n                a.flags = a.flags & -1025 | 2;\n                lh = !1;\n                jh = a;\n                return;\n            }\n            mh(jh, c);\n        }\n        jh = a;\n        kh = rf(b.firstChild);\n    }\n    else\n        a.flags = a.flags & -1025 | 2, lh = !1, jh = a;\n} }\nfunction qh(a) { for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag;)\n    a = a.return; jh = a; }\nfunction rh(a) { if (a !== jh)\n    return !1; if (!lh)\n    return qh(a), lh = !0, !1; var b = a.type; if (5 !== a.tag || "head" !== b && "body" !== b && !nf(b, a.memoizedProps))\n    for (b = kh; b;)\n        mh(a, b), b = rf(b.nextSibling); qh(a); if (13 === a.tag) {\n    a = a.memoizedState;\n    a = null !== a ? a.dehydrated : null;\n    if (!a)\n        throw Error(y(317));\n    a: {\n        a = a.nextSibling;\n        for (b = 0; a;) {\n            if (8 === a.nodeType) {\n                var c = a.data;\n                if ("/$" === c) {\n                    if (0 === b) {\n                        kh = rf(a.nextSibling);\n                        break a;\n                    }\n                    b--;\n                }\n                else\n                    "$" !== c && "$!" !== c && "$?" !== c || b++;\n            }\n            a = a.nextSibling;\n        }\n        kh = null;\n    }\n}\nelse\n    kh = jh ? rf(a.stateNode.nextSibling) : null; return !0; }\nfunction sh() { kh = jh = null; lh = !1; }\nvar th = [];\nfunction uh() { for (var a = 0; a < th.length; a++)\n    th[a]._workInProgressVersionPrimary = null; th.length = 0; }\nvar vh = ra.ReactCurrentDispatcher, wh = ra.ReactCurrentBatchConfig, xh = 0, R = null, S = null, T = null, yh = !1, zh = !1;\nfunction Ah() { throw Error(y(321)); }\nfunction Bh(a, b) { if (null === b)\n    return !1; for (var c = 0; c < b.length && c < a.length; c++)\n    if (!He(a[c], b[c]))\n        return !1; return !0; }\nfunction Ch(a, b, c, d, e, f) { xh = f; R = b; b.memoizedState = null; b.updateQueue = null; b.lanes = 0; vh.current = null === a || null === a.memoizedState ? Dh : Eh; a = c(d, e); if (zh) {\n    f = 0;\n    do {\n        zh = !1;\n        if (!(25 > f))\n            throw Error(y(301));\n        f += 1;\n        T = S = null;\n        b.updateQueue = null;\n        vh.current = Fh;\n        a = c(d, e);\n    } while (zh);\n} vh.current = Gh; b = null !== S && null !== S.next; xh = 0; T = S = R = null; yh = !1; if (b)\n    throw Error(y(300)); return a; }\nfunction Hh() { var a = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null }; null === T ? R.memoizedState = T = a : T = T.next = a; return T; }\nfunction Ih() { if (null === S) {\n    var a = R.alternate;\n    a = null !== a ? a.memoizedState : null;\n}\nelse\n    a = S.next; var b = null === T ? R.memoizedState : T.next; if (null !== b)\n    T = b, S = a;\nelse {\n    if (null === a)\n        throw Error(y(310));\n    S = a;\n    a = { memoizedState: S.memoizedState, baseState: S.baseState, baseQueue: S.baseQueue, queue: S.queue, next: null };\n    null === T ? R.memoizedState = T = a : T = T.next = a;\n} return T; }\nfunction Jh(a, b) { return "function" === typeof b ? b(a) : b; }\nfunction Kh(a) {\n    var b = Ih(), c = b.queue;\n    if (null === c)\n        throw Error(y(311));\n    c.lastRenderedReducer = a;\n    var d = S, e = d.baseQueue, f = c.pending;\n    if (null !== f) {\n        if (null !== e) {\n            var g = e.next;\n            e.next = f.next;\n            f.next = g;\n        }\n        d.baseQueue = e = f;\n        c.pending = null;\n    }\n    if (null !== e) {\n        e = e.next;\n        d = d.baseState;\n        var h = g = f = null, k = e;\n        do {\n            var l = k.lane;\n            if ((xh & l) === l)\n                null !== h && (h = h.next = { lane: 0, action: k.action, eagerReducer: k.eagerReducer, eagerState: k.eagerState, next: null }), d = k.eagerReducer === a ? k.eagerState : a(d, k.action);\n            else {\n                var n = { lane: l, action: k.action, eagerReducer: k.eagerReducer,\n                    eagerState: k.eagerState, next: null };\n                null === h ? (g = h = n, f = d) : h = h.next = n;\n                R.lanes |= l;\n                Dg |= l;\n            }\n            k = k.next;\n        } while (null !== k && k !== e);\n        null === h ? f = d : h.next = g;\n        He(d, b.memoizedState) || (ug = !0);\n        b.memoizedState = d;\n        b.baseState = f;\n        b.baseQueue = h;\n        c.lastRenderedState = d;\n    }\n    return [b.memoizedState, c.dispatch];\n}\nfunction Lh(a) { var b = Ih(), c = b.queue; if (null === c)\n    throw Error(y(311)); c.lastRenderedReducer = a; var d = c.dispatch, e = c.pending, f = b.memoizedState; if (null !== e) {\n    c.pending = null;\n    var g = e = e.next;\n    do\n        f = a(f, g.action), g = g.next;\n    while (g !== e);\n    He(f, b.memoizedState) || (ug = !0);\n    b.memoizedState = f;\n    null === b.baseQueue && (b.baseState = f);\n    c.lastRenderedState = f;\n} return [f, d]; }\nfunction Mh(a, b, c) { var d = b._getVersion; d = d(b._source); var e = b._workInProgressVersionPrimary; if (null !== e)\n    a = e === d;\nelse if (a = a.mutableReadLanes, a = (xh & a) === a)\n    b._workInProgressVersionPrimary = d, th.push(b); if (a)\n    return c(b._source); th.push(b); throw Error(y(350)); }\nfunction Nh(a, b, c, d) {\n    var e = U;\n    if (null === e)\n        throw Error(y(349));\n    var f = b._getVersion, g = f(b._source), h = vh.current, k = h.useState(function () { return Mh(e, b, c); }), l = k[1], n = k[0];\n    k = T;\n    var A = a.memoizedState, p = A.refs, C = p.getSnapshot, x = A.source;\n    A = A.subscribe;\n    var w = R;\n    a.memoizedState = { refs: p, source: b, subscribe: d };\n    h.useEffect(function () {\n        p.getSnapshot = c;\n        p.setSnapshot = l;\n        var a = f(b._source);\n        if (!He(g, a)) {\n            a = c(b._source);\n            He(n, a) || (l(a), a = Ig(w), e.mutableReadLanes |= a & e.pendingLanes);\n            a = e.mutableReadLanes;\n            e.entangledLanes |= a;\n            for (var d = e.entanglements, h = a; 0 < h;) {\n                var k = 31 - Vc(h), v = 1 << k;\n                d[k] |= a;\n                h &= ~v;\n            }\n        }\n    }, [c, b, d]);\n    h.useEffect(function () { return d(b._source, function () { var a = p.getSnapshot, c = p.setSnapshot; try {\n        c(a(b._source));\n        var d = Ig(w);\n        e.mutableReadLanes |= d & e.pendingLanes;\n    }\n    catch (q) {\n        c(function () { throw q; });\n    } }); }, [b, d]);\n    He(C, c) && He(x, b) && He(A, d) || (a = { pending: null, dispatch: null, lastRenderedReducer: Jh, lastRenderedState: n }, a.dispatch = l = Oh.bind(null, R, a), k.queue = a, k.baseQueue = null, n = Mh(e, b, c), k.memoizedState = k.baseState = n);\n    return n;\n}\nfunction Ph(a, b, c) { var d = Ih(); return Nh(d, a, b, c); }\nfunction Qh(a) { var b = Hh(); "function" === typeof a && (a = a()); b.memoizedState = b.baseState = a; a = b.queue = { pending: null, dispatch: null, lastRenderedReducer: Jh, lastRenderedState: a }; a = a.dispatch = Oh.bind(null, R, a); return [b.memoizedState, a]; }\nfunction Rh(a, b, c, d) { a = { tag: a, create: b, destroy: c, deps: d, next: null }; b = R.updateQueue; null === b ? (b = { lastEffect: null }, R.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, null === c ? b.lastEffect = a.next = a : (d = c.next, c.next = a, a.next = d, b.lastEffect = a)); return a; }\nfunction Sh(a) { var b = Hh(); a = { current: a }; return b.memoizedState = a; }\nfunction Th() { return Ih().memoizedState; }\nfunction Uh(a, b, c, d) { var e = Hh(); R.flags |= a; e.memoizedState = Rh(1 | b, c, void 0, void 0 === d ? null : d); }\nfunction Vh(a, b, c, d) { var e = Ih(); d = void 0 === d ? null : d; var f = void 0; if (null !== S) {\n    var g = S.memoizedState;\n    f = g.destroy;\n    if (null !== d && Bh(d, g.deps)) {\n        Rh(b, c, f, d);\n        return;\n    }\n} R.flags |= a; e.memoizedState = Rh(1 | b, c, f, d); }\nfunction Wh(a, b) { return Uh(516, 4, a, b); }\nfunction Xh(a, b) { return Vh(516, 4, a, b); }\nfunction Yh(a, b) { return Vh(4, 2, a, b); }\nfunction Zh(a, b) { if ("function" === typeof b)\n    return a = a(), b(a), function () { b(null); }; if (null !== b && void 0 !== b)\n    return a = a(), b.current = a, function () { b.current = null; }; }\nfunction $h(a, b, c) { c = null !== c && void 0 !== c ? c.concat([a]) : null; return Vh(4, 2, Zh.bind(null, b, a), c); }\nfunction ai() { }\nfunction bi(a, b) { var c = Ih(); b = void 0 === b ? null : b; var d = c.memoizedState; if (null !== d && null !== b && Bh(b, d[1]))\n    return d[0]; c.memoizedState = [a, b]; return a; }\nfunction ci(a, b) { var c = Ih(); b = void 0 === b ? null : b; var d = c.memoizedState; if (null !== d && null !== b && Bh(b, d[1]))\n    return d[0]; a = a(); c.memoizedState = [a, b]; return a; }\nfunction di(a, b) { var c = eg(); gg(98 > c ? 98 : c, function () { a(!0); }); gg(97 < c ? 97 : c, function () { var c = wh.transition; wh.transition = 1; try {\n    a(!1), b();\n}\nfinally {\n    wh.transition = c;\n} }); }\nfunction Oh(a, b, c) { var d = Hg(), e = Ig(a), f = { lane: e, action: c, eagerReducer: null, eagerState: null, next: null }, g = b.pending; null === g ? f.next = f : (f.next = g.next, g.next = f); b.pending = f; g = a.alternate; if (a === R || null !== g && g === R)\n    zh = yh = !0;\nelse {\n    if (0 === a.lanes && (null === g || 0 === g.lanes) && (g = b.lastRenderedReducer, null !== g))\n        try {\n            var h = b.lastRenderedState, k = g(h, c);\n            f.eagerReducer = g;\n            f.eagerState = k;\n            if (He(k, h))\n                return;\n        }\n        catch (l) { }\n        finally { }\n    Jg(a, e, d);\n} }\nvar Gh = { readContext: vg, useCallback: Ah, useContext: Ah, useEffect: Ah, useImperativeHandle: Ah, useLayoutEffect: Ah, useMemo: Ah, useReducer: Ah, useRef: Ah, useState: Ah, useDebugValue: Ah, useDeferredValue: Ah, useTransition: Ah, useMutableSource: Ah, useOpaqueIdentifier: Ah, unstable_isNewReconciler: !1 }, Dh = { readContext: vg, useCallback: function (a, b) { Hh().memoizedState = [a, void 0 === b ? null : b]; return a; }, useContext: vg, useEffect: Wh, useImperativeHandle: function (a, b, c) {\n        c = null !== c && void 0 !== c ? c.concat([a]) : null;\n        return Uh(4, 2, Zh.bind(null, b, a), c);\n    }, useLayoutEffect: function (a, b) { return Uh(4, 2, a, b); }, useMemo: function (a, b) { var c = Hh(); b = void 0 === b ? null : b; a = a(); c.memoizedState = [a, b]; return a; }, useReducer: function (a, b, c) { var d = Hh(); b = void 0 !== c ? c(b) : b; d.memoizedState = d.baseState = b; a = d.queue = { pending: null, dispatch: null, lastRenderedReducer: a, lastRenderedState: b }; a = a.dispatch = Oh.bind(null, R, a); return [d.memoizedState, a]; }, useRef: Sh, useState: Qh, useDebugValue: ai, useDeferredValue: function (a) {\n        var b = Qh(a), c = b[0], d = b[1];\n        Wh(function () {\n            var b = wh.transition;\n            wh.transition = 1;\n            try {\n                d(a);\n            }\n            finally {\n                wh.transition = b;\n            }\n        }, [a]);\n        return c;\n    }, useTransition: function () { var a = Qh(!1), b = a[0]; a = di.bind(null, a[1]); Sh(a); return [a, b]; }, useMutableSource: function (a, b, c) { var d = Hh(); d.memoizedState = { refs: { getSnapshot: b, setSnapshot: null }, source: a, subscribe: c }; return Nh(d, a, b, c); }, useOpaqueIdentifier: function () {\n        if (lh) {\n            var a = !1, b = uf(function () { a || (a = !0, c("r:" + (tf++).toString(36))); throw Error(y(355)); }), c = Qh(b)[1];\n            0 === (R.mode & 2) && (R.flags |= 516, Rh(5, function () { c("r:" + (tf++).toString(36)); }, void 0, null));\n            return b;\n        }\n        b = "r:" + (tf++).toString(36);\n        Qh(b);\n        return b;\n    }, unstable_isNewReconciler: !1 }, Eh = { readContext: vg, useCallback: bi, useContext: vg, useEffect: Xh, useImperativeHandle: $h, useLayoutEffect: Yh, useMemo: ci, useReducer: Kh, useRef: Th, useState: function () { return Kh(Jh); }, useDebugValue: ai, useDeferredValue: function (a) { var b = Kh(Jh), c = b[0], d = b[1]; Xh(function () { var b = wh.transition; wh.transition = 1; try {\n        d(a);\n    }\n    finally {\n        wh.transition = b;\n    } }, [a]); return c; }, useTransition: function () {\n        var a = Kh(Jh)[0];\n        return [Th().current,\n            a];\n    }, useMutableSource: Ph, useOpaqueIdentifier: function () { return Kh(Jh)[0]; }, unstable_isNewReconciler: !1 }, Fh = { readContext: vg, useCallback: bi, useContext: vg, useEffect: Xh, useImperativeHandle: $h, useLayoutEffect: Yh, useMemo: ci, useReducer: Lh, useRef: Th, useState: function () { return Lh(Jh); }, useDebugValue: ai, useDeferredValue: function (a) { var b = Lh(Jh), c = b[0], d = b[1]; Xh(function () { var b = wh.transition; wh.transition = 1; try {\n        d(a);\n    }\n    finally {\n        wh.transition = b;\n    } }, [a]); return c; }, useTransition: function () {\n        var a = Lh(Jh)[0];\n        return [Th().current,\n            a];\n    }, useMutableSource: Ph, useOpaqueIdentifier: function () { return Lh(Jh)[0]; }, unstable_isNewReconciler: !1 }, ei = ra.ReactCurrentOwner, ug = !1;\nfunction fi(a, b, c, d) { b.child = null === a ? Zg(b, null, c, d) : Yg(b, a.child, c, d); }\nfunction gi(a, b, c, d, e) { c = c.render; var f = b.ref; tg(b, e); d = Ch(a, b, c, d, f, e); if (null !== a && !ug)\n    return b.updateQueue = a.updateQueue, b.flags &= -517, a.lanes &= ~e, hi(a, b, e); b.flags |= 1; fi(a, b, d, e); return b.child; }\nfunction ii(a, b, c, d, e, f) { if (null === a) {\n    var g = c.type;\n    if ("function" === typeof g && !ji(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps)\n        return b.tag = 15, b.type = g, ki(a, b, g, d, e, f);\n    a = Vg(c.type, null, d, b, b.mode, f);\n    a.ref = b.ref;\n    a.return = b;\n    return b.child = a;\n} g = a.child; if (0 === (e & f) && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : Je, c(e, d) && a.ref === b.ref))\n    return hi(a, b, f); b.flags |= 1; a = Tg(g, d); a.ref = b.ref; a.return = b; return b.child = a; }\nfunction ki(a, b, c, d, e, f) { if (null !== a && Je(a.memoizedProps, d) && a.ref === b.ref)\n    if (ug = !1, 0 !== (f & e))\n        0 !== (a.flags & 16384) && (ug = !0);\n    else\n        return b.lanes = a.lanes, hi(a, b, f); return li(a, b, c, d, f); }\nfunction mi(a, b, c) { var d = b.pendingProps, e = d.children, f = null !== a ? a.memoizedState : null; if ("hidden" === d.mode || "unstable-defer-without-hiding" === d.mode)\n    if (0 === (b.mode & 4))\n        b.memoizedState = { baseLanes: 0 }, ni(b, c);\n    else if (0 !== (c & 1073741824))\n        b.memoizedState = { baseLanes: 0 }, ni(b, null !== f ? f.baseLanes : c);\n    else\n        return a = null !== f ? f.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = { baseLanes: a }, ni(b, a), null;\nelse\n    null !== f ? (d = f.baseLanes | c, b.memoizedState = null) : d = c, ni(b, d); fi(a, b, e, c); return b.child; }\nfunction oi(a, b) { var c = b.ref; if (null === a && null !== c || null !== a && a.ref !== c)\n    b.flags |= 128; }\nfunction li(a, b, c, d, e) { var f = Ff(c) ? Df : M.current; f = Ef(b, f); tg(b, e); c = Ch(a, b, c, d, f, e); if (null !== a && !ug)\n    return b.updateQueue = a.updateQueue, b.flags &= -517, a.lanes &= ~e, hi(a, b, e); b.flags |= 1; fi(a, b, c, e); return b.child; }\nfunction pi(a, b, c, d, e) {\n    if (Ff(c)) {\n        var f = !0;\n        Jf(b);\n    }\n    else\n        f = !1;\n    tg(b, e);\n    if (null === b.stateNode)\n        null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2), Mg(b, c, d), Og(b, c, d, e), d = !0;\n    else if (null === a) {\n        var g = b.stateNode, h = b.memoizedProps;\n        g.props = h;\n        var k = g.context, l = c.contextType;\n        "object" === typeof l && null !== l ? l = vg(l) : (l = Ff(c) ? Df : M.current, l = Ef(b, l));\n        var n = c.getDerivedStateFromProps, A = "function" === typeof n || "function" === typeof g.getSnapshotBeforeUpdate;\n        A || "function" !== typeof g.UNSAFE_componentWillReceiveProps &&\n            "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && Ng(b, g, d, l);\n        wg = !1;\n        var p = b.memoizedState;\n        g.state = p;\n        Cg(b, d, g, e);\n        k = b.memoizedState;\n        h !== d || p !== k || N.current || wg ? ("function" === typeof n && (Gg(b, c, n, d), k = b.memoizedState), (h = wg || Lg(b, c, h, d, p, k, l)) ? (A || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" ===\n            typeof g.componentDidMount && (b.flags |= 4)) : ("function" === typeof g.componentDidMount && (b.flags |= 4), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, d = h) : ("function" === typeof g.componentDidMount && (b.flags |= 4), d = !1);\n    }\n    else {\n        g = b.stateNode;\n        yg(a, b);\n        h = b.memoizedProps;\n        l = b.type === b.elementType ? h : lg(b.type, h);\n        g.props = l;\n        A = b.pendingProps;\n        p = g.context;\n        k = c.contextType;\n        "object" === typeof k && null !== k ? k = vg(k) : (k = Ff(c) ? Df : M.current, k = Ef(b, k));\n        var C = c.getDerivedStateFromProps;\n        (n = "function" === typeof C ||\n            "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== A || p !== k) && Ng(b, g, d, k);\n        wg = !1;\n        p = b.memoizedState;\n        g.state = p;\n        Cg(b, d, g, e);\n        var x = b.memoizedState;\n        h !== A || p !== x || N.current || wg ? ("function" === typeof C && (Gg(b, c, C, d), x = b.memoizedState), (l = wg || Lg(b, c, l, d, p, x, k)) ? (n || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, x, k), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, x, k)), "function" === typeof g.componentDidUpdate && (b.flags |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.flags |= 256)) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && p === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && p === a.memoizedState || (b.flags |= 256), b.memoizedProps = d, b.memoizedState = x), g.props = d, g.state = x, g.context = k, d = l) : ("function" !== typeof g.componentDidUpdate ||\n            h === a.memoizedProps && p === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && p === a.memoizedState || (b.flags |= 256), d = !1);\n    }\n    return qi(a, b, c, d, f, e);\n}\nfunction qi(a, b, c, d, e, f) { oi(a, b); var g = 0 !== (b.flags & 64); if (!d && !g)\n    return e && Kf(b, c, !1), hi(a, b, f); d = b.stateNode; ei.current = b; var h = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render(); b.flags |= 1; null !== a && g ? (b.child = Yg(b, a.child, null, f), b.child = Yg(b, null, h, f)) : fi(a, b, h, f); b.memoizedState = d.state; e && Kf(b, c, !0); return b.child; }\nfunction ri(a) { var b = a.stateNode; b.pendingContext ? Hf(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Hf(a, b.context, !1); eh(a, b.containerInfo); }\nvar si = { dehydrated: null, retryLane: 0 };\nfunction ti(a, b, c) {\n    var d = b.pendingProps, e = P.current, f = !1, g;\n    (g = 0 !== (b.flags & 64)) || (g = null !== a && null === a.memoizedState ? !1 : 0 !== (e & 2));\n    g ? (f = !0, b.flags &= -65) : null !== a && null === a.memoizedState || void 0 === d.fallback || !0 === d.unstable_avoidThisFallback || (e |= 1);\n    I(P, e & 1);\n    if (null === a) {\n        void 0 !== d.fallback && ph(b);\n        a = d.children;\n        e = d.fallback;\n        if (f)\n            return a = ui(b, a, e, c), b.child.memoizedState = { baseLanes: c }, b.memoizedState = si, a;\n        if ("number" === typeof d.unstable_expectedLoadTime)\n            return a = ui(b, a, e, c), b.child.memoizedState = { baseLanes: c },\n                b.memoizedState = si, b.lanes = 33554432, a;\n        c = vi({ mode: "visible", children: a }, b.mode, c, null);\n        c.return = b;\n        return b.child = c;\n    }\n    if (null !== a.memoizedState) {\n        if (f)\n            return d = wi(a, b, d.children, d.fallback, c), f = b.child, e = a.child.memoizedState, f.memoizedState = null === e ? { baseLanes: c } : { baseLanes: e.baseLanes | c }, f.childLanes = a.childLanes & ~c, b.memoizedState = si, d;\n        c = xi(a, b, d.children, c);\n        b.memoizedState = null;\n        return c;\n    }\n    if (f)\n        return d = wi(a, b, d.children, d.fallback, c), f = b.child, e = a.child.memoizedState, f.memoizedState = null === e ? { baseLanes: c } :\n            { baseLanes: e.baseLanes | c }, f.childLanes = a.childLanes & ~c, b.memoizedState = si, d;\n    c = xi(a, b, d.children, c);\n    b.memoizedState = null;\n    return c;\n}\nfunction ui(a, b, c, d) { var e = a.mode, f = a.child; b = { mode: "hidden", children: b }; 0 === (e & 2) && null !== f ? (f.childLanes = 0, f.pendingProps = b) : f = vi(b, e, 0, null); c = Xg(c, e, d, null); f.return = a; c.return = a; f.sibling = c; a.child = f; return c; }\nfunction xi(a, b, c, d) { var e = a.child; a = e.sibling; c = Tg(e, { mode: "visible", children: c }); 0 === (b.mode & 2) && (c.lanes = d); c.return = b; c.sibling = null; null !== a && (a.nextEffect = null, a.flags = 8, b.firstEffect = b.lastEffect = a); return b.child = c; }\nfunction wi(a, b, c, d, e) { var f = b.mode, g = a.child; a = g.sibling; var h = { mode: "hidden", children: c }; 0 === (f & 2) && b.child !== g ? (c = b.child, c.childLanes = 0, c.pendingProps = h, g = c.lastEffect, null !== g ? (b.firstEffect = c.firstEffect, b.lastEffect = g, g.nextEffect = null) : b.firstEffect = b.lastEffect = null) : c = Tg(g, h); null !== a ? d = Tg(a, d) : (d = Xg(d, f, e, null), d.flags |= 2); d.return = b; c.return = b; c.sibling = d; b.child = c; return d; }\nfunction yi(a, b) { a.lanes |= b; var c = a.alternate; null !== c && (c.lanes |= b); sg(a.return, b); }\nfunction zi(a, b, c, d, e, f) { var g = a.memoizedState; null === g ? a.memoizedState = { isBackwards: b, rendering: null, renderingStartTime: 0, last: d, tail: c, tailMode: e, lastEffect: f } : (g.isBackwards = b, g.rendering = null, g.renderingStartTime = 0, g.last = d, g.tail = c, g.tailMode = e, g.lastEffect = f); }\nfunction Ai(a, b, c) {\n    var d = b.pendingProps, e = d.revealOrder, f = d.tail;\n    fi(a, b, d.children, c);\n    d = P.current;\n    if (0 !== (d & 2))\n        d = d & 1 | 2, b.flags |= 64;\n    else {\n        if (null !== a && 0 !== (a.flags & 64))\n            a: for (a = b.child; null !== a;) {\n                if (13 === a.tag)\n                    null !== a.memoizedState && yi(a, c);\n                else if (19 === a.tag)\n                    yi(a, c);\n                else if (null !== a.child) {\n                    a.child.return = a;\n                    a = a.child;\n                    continue;\n                }\n                if (a === b)\n                    break a;\n                for (; null === a.sibling;) {\n                    if (null === a.return || a.return === b)\n                        break a;\n                    a = a.return;\n                }\n                a.sibling.return = a.return;\n                a = a.sibling;\n            }\n        d &= 1;\n    }\n    I(P, d);\n    if (0 === (b.mode & 2))\n        b.memoizedState =\n            null;\n    else\n        switch (e) {\n            case "forwards":\n                c = b.child;\n                for (e = null; null !== c;)\n                    a = c.alternate, null !== a && null === ih(a) && (e = c), c = c.sibling;\n                c = e;\n                null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);\n                zi(b, !1, e, c, f, b.lastEffect);\n                break;\n            case "backwards":\n                c = null;\n                e = b.child;\n                for (b.child = null; null !== e;) {\n                    a = e.alternate;\n                    if (null !== a && null === ih(a)) {\n                        b.child = e;\n                        break;\n                    }\n                    a = e.sibling;\n                    e.sibling = c;\n                    c = e;\n                    e = a;\n                }\n                zi(b, !0, c, null, f, b.lastEffect);\n                break;\n            case "together":\n                zi(b, !1, null, null, void 0, b.lastEffect);\n                break;\n            default: b.memoizedState = null;\n        }\n    return b.child;\n}\nfunction hi(a, b, c) { null !== a && (b.dependencies = a.dependencies); Dg |= b.lanes; if (0 !== (c & b.childLanes)) {\n    if (null !== a && b.child !== a.child)\n        throw Error(y(153));\n    if (null !== b.child) {\n        a = b.child;\n        c = Tg(a, a.pendingProps);\n        b.child = c;\n        for (c.return = b; null !== a.sibling;)\n            a = a.sibling, c = c.sibling = Tg(a, a.pendingProps), c.return = b;\n        c.sibling = null;\n    }\n    return b.child;\n} return null; }\nvar Bi, Ci, Di, Ei;\nBi = function (a, b) { for (var c = b.child; null !== c;) {\n    if (5 === c.tag || 6 === c.tag)\n        a.appendChild(c.stateNode);\n    else if (4 !== c.tag && null !== c.child) {\n        c.child.return = c;\n        c = c.child;\n        continue;\n    }\n    if (c === b)\n        break;\n    for (; null === c.sibling;) {\n        if (null === c.return || c.return === b)\n            return;\n        c = c.return;\n    }\n    c.sibling.return = c.return;\n    c = c.sibling;\n} };\nCi = function () { };\nDi = function (a, b, c, d) {\n    var e = a.memoizedProps;\n    if (e !== d) {\n        a = b.stateNode;\n        dh(ah.current);\n        var f = null;\n        switch (c) {\n            case "input":\n                e = Ya(a, e);\n                d = Ya(a, d);\n                f = [];\n                break;\n            case "option":\n                e = eb(a, e);\n                d = eb(a, d);\n                f = [];\n                break;\n            case "select":\n                e = m({}, e, { value: void 0 });\n                d = m({}, d, { value: void 0 });\n                f = [];\n                break;\n            case "textarea":\n                e = gb(a, e);\n                d = gb(a, d);\n                f = [];\n                break;\n            default: "function" !== typeof e.onClick && "function" === typeof d.onClick && (a.onclick = jf);\n        }\n        vb(c, d);\n        var g;\n        c = null;\n        for (l in e)\n            if (!d.hasOwnProperty(l) && e.hasOwnProperty(l) && null != e[l])\n                if ("style" ===\n                    l) {\n                    var h = e[l];\n                    for (g in h)\n                        h.hasOwnProperty(g) && (c || (c = {}), c[g] = "");\n                }\n                else\n                    "dangerouslySetInnerHTML" !== l && "children" !== l && "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && "autoFocus" !== l && (ca.hasOwnProperty(l) ? f || (f = []) : (f = f || []).push(l, null));\n        for (l in d) {\n            var k = d[l];\n            h = null != e ? e[l] : void 0;\n            if (d.hasOwnProperty(l) && k !== h && (null != k || null != h))\n                if ("style" === l)\n                    if (h) {\n                        for (g in h)\n                            !h.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (c || (c = {}), c[g] = "");\n                        for (g in k)\n                            k.hasOwnProperty(g) && h[g] !== k[g] && (c ||\n                                (c = {}), c[g] = k[g]);\n                    }\n                    else\n                        c || (f || (f = []), f.push(l, c)), c = k;\n                else\n                    "dangerouslySetInnerHTML" === l ? (k = k ? k.__html : void 0, h = h ? h.__html : void 0, null != k && h !== k && (f = f || []).push(l, k)) : "children" === l ? "string" !== typeof k && "number" !== typeof k || (f = f || []).push(l, "" + k) : "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && (ca.hasOwnProperty(l) ? (null != k && "onScroll" === l && G("scroll", a), f || h === k || (f = [])) : "object" === typeof k && null !== k && k.$$typeof === Ga ? k.toString() : (f = f || []).push(l, k));\n        }\n        c && (f = f || []).push("style", c);\n        var l = f;\n        if (b.updateQueue = l)\n            b.flags |= 4;\n    }\n};\nEi = function (a, b, c, d) { c !== d && (b.flags |= 4); };\nfunction Fi(a, b) { if (!lh)\n    switch (a.tailMode) {\n        case "hidden":\n            b = a.tail;\n            for (var c = null; null !== b;)\n                null !== b.alternate && (c = b), b = b.sibling;\n            null === c ? a.tail = null : c.sibling = null;\n            break;\n        case "collapsed":\n            c = a.tail;\n            for (var d = null; null !== c;)\n                null !== c.alternate && (d = c), c = c.sibling;\n            null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;\n    } }\nfunction Gi(a, b, c) {\n    var d = b.pendingProps;\n    switch (b.tag) {\n        case 2:\n        case 16:\n        case 15:\n        case 0:\n        case 11:\n        case 7:\n        case 8:\n        case 12:\n        case 9:\n        case 14: return null;\n        case 1: return Ff(b.type) && Gf(), null;\n        case 3:\n            fh();\n            H(N);\n            H(M);\n            uh();\n            d = b.stateNode;\n            d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);\n            if (null === a || null === a.child)\n                rh(b) ? b.flags |= 4 : d.hydrate || (b.flags |= 256);\n            Ci(b);\n            return null;\n        case 5:\n            hh(b);\n            var e = dh(ch.current);\n            c = b.type;\n            if (null !== a && null != b.stateNode)\n                Di(a, b, c, d, e), a.ref !== b.ref && (b.flags |= 128);\n            else {\n                if (!d) {\n                    if (null ===\n                        b.stateNode)\n                        throw Error(y(166));\n                    return null;\n                }\n                a = dh(ah.current);\n                if (rh(b)) {\n                    d = b.stateNode;\n                    c = b.type;\n                    var f = b.memoizedProps;\n                    d[wf] = b;\n                    d[xf] = f;\n                    switch (c) {\n                        case "dialog":\n                            G("cancel", d);\n                            G("close", d);\n                            break;\n                        case "iframe":\n                        case "object":\n                        case "embed":\n                            G("load", d);\n                            break;\n                        case "video":\n                        case "audio":\n                            for (a = 0; a < Xe.length; a++)\n                                G(Xe[a], d);\n                            break;\n                        case "source":\n                            G("error", d);\n                            break;\n                        case "img":\n                        case "image":\n                        case "link":\n                            G("error", d);\n                            G("load", d);\n                            break;\n                        case "details":\n                            G("toggle", d);\n                            break;\n                        case "input":\n                            Za(d, f);\n                            G("invalid", d);\n                            break;\n                        case "select":\n                            d._wrapperState =\n                                { wasMultiple: !!f.multiple };\n                            G("invalid", d);\n                            break;\n                        case "textarea": hb(d, f), G("invalid", d);\n                    }\n                    vb(c, f);\n                    a = null;\n                    for (var g in f)\n                        f.hasOwnProperty(g) && (e = f[g], "children" === g ? "string" === typeof e ? d.textContent !== e && (a = ["children", e]) : "number" === typeof e && d.textContent !== "" + e && (a = ["children", "" + e]) : ca.hasOwnProperty(g) && null != e && "onScroll" === g && G("scroll", d));\n                    switch (c) {\n                        case "input":\n                            Va(d);\n                            cb(d, f, !0);\n                            break;\n                        case "textarea":\n                            Va(d);\n                            jb(d);\n                            break;\n                        case "select":\n                        case "option": break;\n                        default: "function" === typeof f.onClick && (d.onclick =\n                            jf);\n                    }\n                    d = a;\n                    b.updateQueue = d;\n                    null !== d && (b.flags |= 4);\n                }\n                else {\n                    g = 9 === e.nodeType ? e : e.ownerDocument;\n                    a === kb.html && (a = lb(c));\n                    a === kb.html ? "script" === c ? (a = g.createElement("div"), a.innerHTML = "<script>\\x3c/script>", a = a.removeChild(a.firstChild)) : "string" === typeof d.is ? a = g.createElement(c, { is: d.is }) : (a = g.createElement(c), "select" === c && (g = a, d.multiple ? g.multiple = !0 : d.size && (g.size = d.size))) : a = g.createElementNS(a, c);\n                    a[wf] = b;\n                    a[xf] = d;\n                    Bi(a, b, !1, !1);\n                    b.stateNode = a;\n                    g = wb(c, d);\n                    switch (c) {\n                        case "dialog":\n                            G("cancel", a);\n                            G("close", a);\n                            e = d;\n                            break;\n                        case "iframe":\n                        case "object":\n                        case "embed":\n                            G("load", a);\n                            e = d;\n                            break;\n                        case "video":\n                        case "audio":\n                            for (e = 0; e < Xe.length; e++)\n                                G(Xe[e], a);\n                            e = d;\n                            break;\n                        case "source":\n                            G("error", a);\n                            e = d;\n                            break;\n                        case "img":\n                        case "image":\n                        case "link":\n                            G("error", a);\n                            G("load", a);\n                            e = d;\n                            break;\n                        case "details":\n                            G("toggle", a);\n                            e = d;\n                            break;\n                        case "input":\n                            Za(a, d);\n                            e = Ya(a, d);\n                            G("invalid", a);\n                            break;\n                        case "option":\n                            e = eb(a, d);\n                            break;\n                        case "select":\n                            a._wrapperState = { wasMultiple: !!d.multiple };\n                            e = m({}, d, { value: void 0 });\n                            G("invalid", a);\n                            break;\n                        case "textarea":\n                            hb(a, d);\n                            e =\n                                gb(a, d);\n                            G("invalid", a);\n                            break;\n                        default: e = d;\n                    }\n                    vb(c, e);\n                    var h = e;\n                    for (f in h)\n                        if (h.hasOwnProperty(f)) {\n                            var k = h[f];\n                            "style" === f ? tb(a, k) : "dangerouslySetInnerHTML" === f ? (k = k ? k.__html : void 0, null != k && ob(a, k)) : "children" === f ? "string" === typeof k ? ("textarea" !== c || "" !== k) && pb(a, k) : "number" === typeof k && pb(a, "" + k) : "suppressContentEditableWarning" !== f && "suppressHydrationWarning" !== f && "autoFocus" !== f && (ca.hasOwnProperty(f) ? null != k && "onScroll" === f && G("scroll", a) : null != k && qa(a, f, k, g));\n                        }\n                    switch (c) {\n                        case "input":\n                            Va(a);\n                            cb(a, d, !1);\n                            break;\n                        case "textarea":\n                            Va(a);\n                            jb(a);\n                            break;\n                        case "option":\n                            null != d.value && a.setAttribute("value", "" + Sa(d.value));\n                            break;\n                        case "select":\n                            a.multiple = !!d.multiple;\n                            f = d.value;\n                            null != f ? fb(a, !!d.multiple, f, !1) : null != d.defaultValue && fb(a, !!d.multiple, d.defaultValue, !0);\n                            break;\n                        default: "function" === typeof e.onClick && (a.onclick = jf);\n                    }\n                    mf(c, d) && (b.flags |= 4);\n                }\n                null !== b.ref && (b.flags |= 128);\n            }\n            return null;\n        case 6:\n            if (a && null != b.stateNode)\n                Ei(a, b, a.memoizedProps, d);\n            else {\n                if ("string" !== typeof d && null === b.stateNode)\n                    throw Error(y(166));\n                c = dh(ch.current);\n                dh(ah.current);\n                rh(b) ? (d = b.stateNode, c = b.memoizedProps, d[wf] = b, d.nodeValue !== c && (b.flags |= 4)) : (d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d), d[wf] = b, b.stateNode = d);\n            }\n            return null;\n        case 13:\n            H(P);\n            d = b.memoizedState;\n            if (0 !== (b.flags & 64))\n                return b.lanes = c, b;\n            d = null !== d;\n            c = !1;\n            null === a ? void 0 !== b.memoizedProps.fallback && rh(b) : c = null !== a.memoizedState;\n            if (d && !c && 0 !== (b.mode & 2))\n                if (null === a && !0 !== b.memoizedProps.unstable_avoidThisFallback || 0 !== (P.current & 1))\n                    0 === V && (V = 3);\n                else {\n                    if (0 === V || 3 === V)\n                        V =\n                            4;\n                    null === U || 0 === (Dg & 134217727) && 0 === (Hi & 134217727) || Ii(U, W);\n                }\n            if (d || c)\n                b.flags |= 4;\n            return null;\n        case 4: return fh(), Ci(b), null === a && cf(b.stateNode.containerInfo), null;\n        case 10: return rg(b), null;\n        case 17: return Ff(b.type) && Gf(), null;\n        case 19:\n            H(P);\n            d = b.memoizedState;\n            if (null === d)\n                return null;\n            f = 0 !== (b.flags & 64);\n            g = d.rendering;\n            if (null === g)\n                if (f)\n                    Fi(d, !1);\n                else {\n                    if (0 !== V || null !== a && 0 !== (a.flags & 64))\n                        for (a = b.child; null !== a;) {\n                            g = ih(a);\n                            if (null !== g) {\n                                b.flags |= 64;\n                                Fi(d, !1);\n                                f = g.updateQueue;\n                                null !== f && (b.updateQueue = f, b.flags |= 4);\n                                null === d.lastEffect && (b.firstEffect = null);\n                                b.lastEffect = d.lastEffect;\n                                d = c;\n                                for (c = b.child; null !== c;)\n                                    f = c, a = d, f.flags &= 2, f.nextEffect = null, f.firstEffect = null, f.lastEffect = null, g = f.alternate, null === g ? (f.childLanes = 0, f.lanes = a, f.child = null, f.memoizedProps = null, f.memoizedState = null, f.updateQueue = null, f.dependencies = null, f.stateNode = null) : (f.childLanes = g.childLanes, f.lanes = g.lanes, f.child = g.child, f.memoizedProps = g.memoizedProps, f.memoizedState = g.memoizedState, f.updateQueue = g.updateQueue, f.type = g.type, a = g.dependencies,\n                                        f.dependencies = null === a ? null : { lanes: a.lanes, firstContext: a.firstContext }), c = c.sibling;\n                                I(P, P.current & 1 | 2);\n                                return b.child;\n                            }\n                            a = a.sibling;\n                        }\n                    null !== d.tail && O() > Ji && (b.flags |= 64, f = !0, Fi(d, !1), b.lanes = 33554432);\n                }\n            else {\n                if (!f)\n                    if (a = ih(g), null !== a) {\n                        if (b.flags |= 64, f = !0, c = a.updateQueue, null !== c && (b.updateQueue = c, b.flags |= 4), Fi(d, !0), null === d.tail && "hidden" === d.tailMode && !g.alternate && !lh)\n                            return b = b.lastEffect = d.lastEffect, null !== b && (b.nextEffect = null), null;\n                    }\n                    else\n                        2 * O() - d.renderingStartTime > Ji && 1073741824 !== c && (b.flags |=\n                            64, f = !0, Fi(d, !1), b.lanes = 33554432);\n                d.isBackwards ? (g.sibling = b.child, b.child = g) : (c = d.last, null !== c ? c.sibling = g : b.child = g, d.last = g);\n            }\n            return null !== d.tail ? (c = d.tail, d.rendering = c, d.tail = c.sibling, d.lastEffect = b.lastEffect, d.renderingStartTime = O(), c.sibling = null, b = P.current, I(P, f ? b & 1 | 2 : b & 1), c) : null;\n        case 23:\n        case 24: return Ki(), null !== a && null !== a.memoizedState !== (null !== b.memoizedState) && "unstable-defer-without-hiding" !== d.mode && (b.flags |= 4), null;\n    }\n    throw Error(y(156, b.tag));\n}\nfunction Li(a) { switch (a.tag) {\n    case 1:\n        Ff(a.type) && Gf();\n        var b = a.flags;\n        return b & 4096 ? (a.flags = b & -4097 | 64, a) : null;\n    case 3:\n        fh();\n        H(N);\n        H(M);\n        uh();\n        b = a.flags;\n        if (0 !== (b & 64))\n            throw Error(y(285));\n        a.flags = b & -4097 | 64;\n        return a;\n    case 5: return hh(a), null;\n    case 13: return H(P), b = a.flags, b & 4096 ? (a.flags = b & -4097 | 64, a) : null;\n    case 19: return H(P), null;\n    case 4: return fh(), null;\n    case 10: return rg(a), null;\n    case 23:\n    case 24: return Ki(), null;\n    default: return null;\n} }\nfunction Mi(a, b) { try {\n    var c = "", d = b;\n    do\n        c += Qa(d), d = d.return;\n    while (d);\n    var e = c;\n}\ncatch (f) {\n    e = "\\nError generating stack: " + f.message + "\\n" + f.stack;\n} return { value: a, source: b, stack: e }; }\nfunction Ni(a, b) { try {\n    console.error(b.value);\n}\ncatch (c) {\n    setTimeout(function () { throw c; });\n} }\nvar Oi = "function" === typeof WeakMap ? WeakMap : Map;\nfunction Pi(a, b, c) { c = zg(-1, c); c.tag = 3; c.payload = { element: null }; var d = b.value; c.callback = function () { Qi || (Qi = !0, Ri = d); Ni(a, b); }; return c; }\nfunction Si(a, b, c) { c = zg(-1, c); c.tag = 3; var d = a.type.getDerivedStateFromError; if ("function" === typeof d) {\n    var e = b.value;\n    c.payload = function () { Ni(a, b); return d(e); };\n} var f = a.stateNode; null !== f && "function" === typeof f.componentDidCatch && (c.callback = function () { "function" !== typeof d && (null === Ti ? Ti = new Set([this]) : Ti.add(this), Ni(a, b)); var c = b.stack; this.componentDidCatch(b.value, { componentStack: null !== c ? c : "" }); }); return c; }\nvar Ui = "function" === typeof WeakSet ? WeakSet : Set;\nfunction Vi(a) { var b = a.ref; if (null !== b)\n    if ("function" === typeof b)\n        try {\n            b(null);\n        }\n        catch (c) {\n            Wi(a, c);\n        }\n    else\n        b.current = null; }\nfunction Xi(a, b) { switch (b.tag) {\n    case 0:\n    case 11:\n    case 15:\n    case 22: return;\n    case 1:\n        if (b.flags & 256 && null !== a) {\n            var c = a.memoizedProps, d = a.memoizedState;\n            a = b.stateNode;\n            b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : lg(b.type, c), d);\n            a.__reactInternalSnapshotBeforeUpdate = b;\n        }\n        return;\n    case 3:\n        b.flags & 256 && qf(b.stateNode.containerInfo);\n        return;\n    case 5:\n    case 6:\n    case 4:\n    case 17: return;\n} throw Error(y(163)); }\nfunction Yi(a, b, c) {\n    switch (c.tag) {\n        case 0:\n        case 11:\n        case 15:\n        case 22:\n            b = c.updateQueue;\n            b = null !== b ? b.lastEffect : null;\n            if (null !== b) {\n                a = b = b.next;\n                do {\n                    if (3 === (a.tag & 3)) {\n                        var d = a.create;\n                        a.destroy = d();\n                    }\n                    a = a.next;\n                } while (a !== b);\n            }\n            b = c.updateQueue;\n            b = null !== b ? b.lastEffect : null;\n            if (null !== b) {\n                a = b = b.next;\n                do {\n                    var e = a;\n                    d = e.next;\n                    e = e.tag;\n                    0 !== (e & 4) && 0 !== (e & 1) && (Zi(c, a), $i(c, a));\n                    a = d;\n                } while (a !== b);\n            }\n            return;\n        case 1:\n            a = c.stateNode;\n            c.flags & 4 && (null === b ? a.componentDidMount() : (d = c.elementType === c.type ? b.memoizedProps : lg(c.type, b.memoizedProps), a.componentDidUpdate(d, b.memoizedState, a.__reactInternalSnapshotBeforeUpdate)));\n            b = c.updateQueue;\n            null !== b && Eg(c, b, a);\n            return;\n        case 3:\n            b = c.updateQueue;\n            if (null !== b) {\n                a = null;\n                if (null !== c.child)\n                    switch (c.child.tag) {\n                        case 5:\n                            a = c.child.stateNode;\n                            break;\n                        case 1: a = c.child.stateNode;\n                    }\n                Eg(c, b, a);\n            }\n            return;\n        case 5:\n            a = c.stateNode;\n            null === b && c.flags & 4 && mf(c.type, c.memoizedProps) && a.focus();\n            return;\n        case 6: return;\n        case 4: return;\n        case 12: return;\n        case 13:\n            null === c.memoizedState && (c = c.alternate, null !== c && (c = c.memoizedState, null !== c && (c = c.dehydrated, null !== c && Cc(c))));\n            return;\n        case 19:\n        case 17:\n        case 20:\n        case 21:\n        case 23:\n        case 24: return;\n    }\n    throw Error(y(163));\n}\nfunction aj(a, b) {\n    for (var c = a;;) {\n        if (5 === c.tag) {\n            var d = c.stateNode;\n            if (b)\n                d = d.style, "function" === typeof d.setProperty ? d.setProperty("display", "none", "important") : d.display = "none";\n            else {\n                d = c.stateNode;\n                var e = c.memoizedProps.style;\n                e = void 0 !== e && null !== e && e.hasOwnProperty("display") ? e.display : null;\n                d.style.display = sb("display", e);\n            }\n        }\n        else if (6 === c.tag)\n            c.stateNode.nodeValue = b ? "" : c.memoizedProps;\n        else if ((23 !== c.tag && 24 !== c.tag || null === c.memoizedState || c === a) && null !== c.child) {\n            c.child.return = c;\n            c = c.child;\n            continue;\n        }\n        if (c ===\n            a)\n            break;\n        for (; null === c.sibling;) {\n            if (null === c.return || c.return === a)\n                return;\n            c = c.return;\n        }\n        c.sibling.return = c.return;\n        c = c.sibling;\n    }\n}\nfunction bj(a, b) {\n    if (Mf && "function" === typeof Mf.onCommitFiberUnmount)\n        try {\n            Mf.onCommitFiberUnmount(Lf, b);\n        }\n        catch (f) { }\n    switch (b.tag) {\n        case 0:\n        case 11:\n        case 14:\n        case 15:\n        case 22:\n            a = b.updateQueue;\n            if (null !== a && (a = a.lastEffect, null !== a)) {\n                var c = a = a.next;\n                do {\n                    var d = c, e = d.destroy;\n                    d = d.tag;\n                    if (void 0 !== e)\n                        if (0 !== (d & 4))\n                            Zi(b, c);\n                        else {\n                            d = b;\n                            try {\n                                e();\n                            }\n                            catch (f) {\n                                Wi(d, f);\n                            }\n                        }\n                    c = c.next;\n                } while (c !== a);\n            }\n            break;\n        case 1:\n            Vi(b);\n            a = b.stateNode;\n            if ("function" === typeof a.componentWillUnmount)\n                try {\n                    a.props = b.memoizedProps, a.state = b.memoizedState, a.componentWillUnmount();\n                }\n                catch (f) {\n                    Wi(b, f);\n                }\n            break;\n        case 5:\n            Vi(b);\n            break;\n        case 4: cj(a, b);\n    }\n}\nfunction dj(a) { a.alternate = null; a.child = null; a.dependencies = null; a.firstEffect = null; a.lastEffect = null; a.memoizedProps = null; a.memoizedState = null; a.pendingProps = null; a.return = null; a.updateQueue = null; }\nfunction ej(a) { return 5 === a.tag || 3 === a.tag || 4 === a.tag; }\nfunction fj(a) {\n    a: {\n        for (var b = a.return; null !== b;) {\n            if (ej(b))\n                break a;\n            b = b.return;\n        }\n        throw Error(y(160));\n    }\n    var c = b;\n    b = c.stateNode;\n    switch (c.tag) {\n        case 5:\n            var d = !1;\n            break;\n        case 3:\n            b = b.containerInfo;\n            d = !0;\n            break;\n        case 4:\n            b = b.containerInfo;\n            d = !0;\n            break;\n        default: throw Error(y(161));\n    }\n    c.flags & 16 && (pb(b, ""), c.flags &= -17);\n    a: b: for (c = a;;) {\n        for (; null === c.sibling;) {\n            if (null === c.return || ej(c.return)) {\n                c = null;\n                break a;\n            }\n            c = c.return;\n        }\n        c.sibling.return = c.return;\n        for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag;) {\n            if (c.flags & 2)\n                continue b;\n            if (null ===\n                c.child || 4 === c.tag)\n                continue b;\n            else\n                c.child.return = c, c = c.child;\n        }\n        if (!(c.flags & 2)) {\n            c = c.stateNode;\n            break a;\n        }\n    }\n    d ? gj(a, c, b) : hj(a, c, b);\n}\nfunction gj(a, b, c) { var d = a.tag, e = 5 === d || 6 === d; if (e)\n    a = e ? a.stateNode : a.stateNode.instance, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (8 === c.nodeType ? (b = c.parentNode, b.insertBefore(a, c)) : (b = c, b.appendChild(a)), c = c._reactRootContainer, null !== c && void 0 !== c || null !== b.onclick || (b.onclick = jf));\nelse if (4 !== d && (a = a.child, null !== a))\n    for (gj(a, b, c), a = a.sibling; null !== a;)\n        gj(a, b, c), a = a.sibling; }\nfunction hj(a, b, c) { var d = a.tag, e = 5 === d || 6 === d; if (e)\n    a = e ? a.stateNode : a.stateNode.instance, b ? c.insertBefore(a, b) : c.appendChild(a);\nelse if (4 !== d && (a = a.child, null !== a))\n    for (hj(a, b, c), a = a.sibling; null !== a;)\n        hj(a, b, c), a = a.sibling; }\nfunction cj(a, b) {\n    for (var c = b, d = !1, e, f;;) {\n        if (!d) {\n            d = c.return;\n            a: for (;;) {\n                if (null === d)\n                    throw Error(y(160));\n                e = d.stateNode;\n                switch (d.tag) {\n                    case 5:\n                        f = !1;\n                        break a;\n                    case 3:\n                        e = e.containerInfo;\n                        f = !0;\n                        break a;\n                    case 4:\n                        e = e.containerInfo;\n                        f = !0;\n                        break a;\n                }\n                d = d.return;\n            }\n            d = !0;\n        }\n        if (5 === c.tag || 6 === c.tag) {\n            a: for (var g = a, h = c, k = h;;)\n                if (bj(g, k), null !== k.child && 4 !== k.tag)\n                    k.child.return = k, k = k.child;\n                else {\n                    if (k === h)\n                        break a;\n                    for (; null === k.sibling;) {\n                        if (null === k.return || k.return === h)\n                            break a;\n                        k = k.return;\n                    }\n                    k.sibling.return = k.return;\n                    k = k.sibling;\n                }\n            f ? (g = e, h = c.stateNode,\n                8 === g.nodeType ? g.parentNode.removeChild(h) : g.removeChild(h)) : e.removeChild(c.stateNode);\n        }\n        else if (4 === c.tag) {\n            if (null !== c.child) {\n                e = c.stateNode.containerInfo;\n                f = !0;\n                c.child.return = c;\n                c = c.child;\n                continue;\n            }\n        }\n        else if (bj(a, c), null !== c.child) {\n            c.child.return = c;\n            c = c.child;\n            continue;\n        }\n        if (c === b)\n            break;\n        for (; null === c.sibling;) {\n            if (null === c.return || c.return === b)\n                return;\n            c = c.return;\n            4 === c.tag && (d = !1);\n        }\n        c.sibling.return = c.return;\n        c = c.sibling;\n    }\n}\nfunction ij(a, b) {\n    switch (b.tag) {\n        case 0:\n        case 11:\n        case 14:\n        case 15:\n        case 22:\n            var c = b.updateQueue;\n            c = null !== c ? c.lastEffect : null;\n            if (null !== c) {\n                var d = c = c.next;\n                do\n                    3 === (d.tag & 3) && (a = d.destroy, d.destroy = void 0, void 0 !== a && a()), d = d.next;\n                while (d !== c);\n            }\n            return;\n        case 1: return;\n        case 5:\n            c = b.stateNode;\n            if (null != c) {\n                d = b.memoizedProps;\n                var e = null !== a ? a.memoizedProps : d;\n                a = b.type;\n                var f = b.updateQueue;\n                b.updateQueue = null;\n                if (null !== f) {\n                    c[xf] = d;\n                    "input" === a && "radio" === d.type && null != d.name && $a(c, d);\n                    wb(a, e);\n                    b = wb(a, d);\n                    for (e = 0; e < f.length; e +=\n                        2) {\n                        var g = f[e], h = f[e + 1];\n                        "style" === g ? tb(c, h) : "dangerouslySetInnerHTML" === g ? ob(c, h) : "children" === g ? pb(c, h) : qa(c, g, h, b);\n                    }\n                    switch (a) {\n                        case "input":\n                            ab(c, d);\n                            break;\n                        case "textarea":\n                            ib(c, d);\n                            break;\n                        case "select": a = c._wrapperState.wasMultiple, c._wrapperState.wasMultiple = !!d.multiple, f = d.value, null != f ? fb(c, !!d.multiple, f, !1) : a !== !!d.multiple && (null != d.defaultValue ? fb(c, !!d.multiple, d.defaultValue, !0) : fb(c, !!d.multiple, d.multiple ? [] : "", !1));\n                    }\n                }\n            }\n            return;\n        case 6:\n            if (null === b.stateNode)\n                throw Error(y(162));\n            b.stateNode.nodeValue =\n                b.memoizedProps;\n            return;\n        case 3:\n            c = b.stateNode;\n            c.hydrate && (c.hydrate = !1, Cc(c.containerInfo));\n            return;\n        case 12: return;\n        case 13:\n            null !== b.memoizedState && (jj = O(), aj(b.child, !0));\n            kj(b);\n            return;\n        case 19:\n            kj(b);\n            return;\n        case 17: return;\n        case 23:\n        case 24:\n            aj(b, null !== b.memoizedState);\n            return;\n    }\n    throw Error(y(163));\n}\nfunction kj(a) { var b = a.updateQueue; if (null !== b) {\n    a.updateQueue = null;\n    var c = a.stateNode;\n    null === c && (c = a.stateNode = new Ui);\n    b.forEach(function (b) { var d = lj.bind(null, a, b); c.has(b) || (c.add(b), b.then(d, d)); });\n} }\nfunction mj(a, b) { return null !== a && (a = a.memoizedState, null === a || null !== a.dehydrated) ? (b = b.memoizedState, null !== b && null === b.dehydrated) : !1; }\nvar nj = Math.ceil, oj = ra.ReactCurrentDispatcher, pj = ra.ReactCurrentOwner, X = 0, U = null, Y = null, W = 0, qj = 0, rj = Bf(0), V = 0, sj = null, tj = 0, Dg = 0, Hi = 0, uj = 0, vj = null, jj = 0, Ji = Infinity;\nfunction wj() { Ji = O() + 500; }\nvar Z = null, Qi = !1, Ri = null, Ti = null, xj = !1, yj = null, zj = 90, Aj = [], Bj = [], Cj = null, Dj = 0, Ej = null, Fj = -1, Gj = 0, Hj = 0, Ij = null, Jj = !1;\nfunction Hg() { return 0 !== (X & 48) ? O() : -1 !== Fj ? Fj : Fj = O(); }\nfunction Ig(a) { a = a.mode; if (0 === (a & 2))\n    return 1; if (0 === (a & 4))\n    return 99 === eg() ? 1 : 2; 0 === Gj && (Gj = tj); if (0 !== kg.transition) {\n    0 !== Hj && (Hj = null !== vj ? vj.pendingLanes : 0);\n    a = Gj;\n    var b = 4186112 & ~Hj;\n    b &= -b;\n    0 === b && (a = 4186112 & ~a, b = a & -a, 0 === b && (b = 8192));\n    return b;\n} a = eg(); 0 !== (X & 4) && 98 === a ? a = Xc(12, Gj) : (a = Sc(a), a = Xc(a, Gj)); return a; }\nfunction Jg(a, b, c) { if (50 < Dj)\n    throw Dj = 0, Ej = null, Error(y(185)); a = Kj(a, b); if (null === a)\n    return null; $c(a, b, c); a === U && (Hi |= b, 4 === V && Ii(a, W)); var d = eg(); 1 === b ? 0 !== (X & 8) && 0 === (X & 48) ? Lj(a) : (Mj(a, c), 0 === X && (wj(), ig())) : (0 === (X & 4) || 98 !== d && 99 !== d || (null === Cj ? Cj = new Set([a]) : Cj.add(a)), Mj(a, c)); vj = a; }\nfunction Kj(a, b) { a.lanes |= b; var c = a.alternate; null !== c && (c.lanes |= b); c = a; for (a = a.return; null !== a;)\n    a.childLanes |= b, c = a.alternate, null !== c && (c.childLanes |= b), c = a, a = a.return; return 3 === c.tag ? c.stateNode : null; }\nfunction Mj(a, b) {\n    for (var c = a.callbackNode, d = a.suspendedLanes, e = a.pingedLanes, f = a.expirationTimes, g = a.pendingLanes; 0 < g;) {\n        var h = 31 - Vc(g), k = 1 << h, l = f[h];\n        if (-1 === l) {\n            if (0 === (k & d) || 0 !== (k & e)) {\n                l = b;\n                Rc(k);\n                var n = F;\n                f[h] = 10 <= n ? l + 250 : 6 <= n ? l + 5E3 : -1;\n            }\n        }\n        else\n            l <= b && (a.expiredLanes |= k);\n        g &= ~k;\n    }\n    d = Uc(a, a === U ? W : 0);\n    b = F;\n    if (0 === d)\n        null !== c && (c !== Zf && Pf(c), a.callbackNode = null, a.callbackPriority = 0);\n    else {\n        if (null !== c) {\n            if (a.callbackPriority === b)\n                return;\n            c !== Zf && Pf(c);\n        }\n        15 === b ? (c = Lj.bind(null, a), null === ag ? (ag = [c], bg = Of(Uf, jg)) : ag.push(c),\n            c = Zf) : 14 === b ? c = hg(99, Lj.bind(null, a)) : (c = Tc(b), c = hg(c, Nj.bind(null, a)));\n        a.callbackPriority = b;\n        a.callbackNode = c;\n    }\n}\nfunction Nj(a) {\n    Fj = -1;\n    Hj = Gj = 0;\n    if (0 !== (X & 48))\n        throw Error(y(327));\n    var b = a.callbackNode;\n    if (Oj() && a.callbackNode !== b)\n        return null;\n    var c = Uc(a, a === U ? W : 0);\n    if (0 === c)\n        return null;\n    var d = c;\n    var e = X;\n    X |= 16;\n    var f = Pj();\n    if (U !== a || W !== d)\n        wj(), Qj(a, d);\n    do\n        try {\n            Rj();\n            break;\n        }\n        catch (h) {\n            Sj(a, h);\n        }\n    while (1);\n    qg();\n    oj.current = f;\n    X = e;\n    null !== Y ? d = 0 : (U = null, W = 0, d = V);\n    if (0 !== (tj & Hi))\n        Qj(a, 0);\n    else if (0 !== d) {\n        2 === d && (X |= 64, a.hydrate && (a.hydrate = !1, qf(a.containerInfo)), c = Wc(a), 0 !== c && (d = Tj(a, c)));\n        if (1 === d)\n            throw b = sj, Qj(a, 0), Ii(a, c), Mj(a, O()), b;\n        a.finishedWork =\n            a.current.alternate;\n        a.finishedLanes = c;\n        switch (d) {\n            case 0:\n            case 1: throw Error(y(345));\n            case 2:\n                Uj(a);\n                break;\n            case 3:\n                Ii(a, c);\n                if ((c & 62914560) === c && (d = jj + 500 - O(), 10 < d)) {\n                    if (0 !== Uc(a, 0))\n                        break;\n                    e = a.suspendedLanes;\n                    if ((e & c) !== c) {\n                        Hg();\n                        a.pingedLanes |= a.suspendedLanes & e;\n                        break;\n                    }\n                    a.timeoutHandle = of(Uj.bind(null, a), d);\n                    break;\n                }\n                Uj(a);\n                break;\n            case 4:\n                Ii(a, c);\n                if ((c & 4186112) === c)\n                    break;\n                d = a.eventTimes;\n                for (e = -1; 0 < c;) {\n                    var g = 31 - Vc(c);\n                    f = 1 << g;\n                    g = d[g];\n                    g > e && (e = g);\n                    c &= ~f;\n                }\n                c = e;\n                c = O() - c;\n                c = (120 > c ? 120 : 480 > c ? 480 : 1080 > c ? 1080 : 1920 > c ? 1920 : 3E3 > c ? 3E3 : 4320 >\n                    c ? 4320 : 1960 * nj(c / 1960)) - c;\n                if (10 < c) {\n                    a.timeoutHandle = of(Uj.bind(null, a), c);\n                    break;\n                }\n                Uj(a);\n                break;\n            case 5:\n                Uj(a);\n                break;\n            default: throw Error(y(329));\n        }\n    }\n    Mj(a, O());\n    return a.callbackNode === b ? Nj.bind(null, a) : null;\n}\nfunction Ii(a, b) { b &= ~uj; b &= ~Hi; a.suspendedLanes |= b; a.pingedLanes &= ~b; for (a = a.expirationTimes; 0 < b;) {\n    var c = 31 - Vc(b), d = 1 << c;\n    a[c] = -1;\n    b &= ~d;\n} }\nfunction Lj(a) { if (0 !== (X & 48))\n    throw Error(y(327)); Oj(); if (a === U && 0 !== (a.expiredLanes & W)) {\n    var b = W;\n    var c = Tj(a, b);\n    0 !== (tj & Hi) && (b = Uc(a, b), c = Tj(a, b));\n}\nelse\n    b = Uc(a, 0), c = Tj(a, b); 0 !== a.tag && 2 === c && (X |= 64, a.hydrate && (a.hydrate = !1, qf(a.containerInfo)), b = Wc(a), 0 !== b && (c = Tj(a, b))); if (1 === c)\n    throw c = sj, Qj(a, 0), Ii(a, b), Mj(a, O()), c; a.finishedWork = a.current.alternate; a.finishedLanes = b; Uj(a); Mj(a, O()); return null; }\nfunction Vj() { if (null !== Cj) {\n    var a = Cj;\n    Cj = null;\n    a.forEach(function (a) { a.expiredLanes |= 24 & a.pendingLanes; Mj(a, O()); });\n} ig(); }\nfunction Wj(a, b) { var c = X; X |= 1; try {\n    return a(b);\n}\nfinally {\n    X = c, 0 === X && (wj(), ig());\n} }\nfunction Xj(a, b) { var c = X; X &= -2; X |= 8; try {\n    return a(b);\n}\nfinally {\n    X = c, 0 === X && (wj(), ig());\n} }\nfunction ni(a, b) { I(rj, qj); qj |= b; tj |= b; }\nfunction Ki() { qj = rj.current; H(rj); }\nfunction Qj(a, b) { a.finishedWork = null; a.finishedLanes = 0; var c = a.timeoutHandle; -1 !== c && (a.timeoutHandle = -1, pf(c)); if (null !== Y)\n    for (c = Y.return; null !== c;) {\n        var d = c;\n        switch (d.tag) {\n            case 1:\n                d = d.type.childContextTypes;\n                null !== d && void 0 !== d && Gf();\n                break;\n            case 3:\n                fh();\n                H(N);\n                H(M);\n                uh();\n                break;\n            case 5:\n                hh(d);\n                break;\n            case 4:\n                fh();\n                break;\n            case 13:\n                H(P);\n                break;\n            case 19:\n                H(P);\n                break;\n            case 10:\n                rg(d);\n                break;\n            case 23:\n            case 24: Ki();\n        }\n        c = c.return;\n    } U = a; Y = Tg(a.current, null); W = qj = tj = b; V = 0; sj = null; uj = Hi = Dg = 0; }\nfunction Sj(a, b) {\n    do {\n        var c = Y;\n        try {\n            qg();\n            vh.current = Gh;\n            if (yh) {\n                for (var d = R.memoizedState; null !== d;) {\n                    var e = d.queue;\n                    null !== e && (e.pending = null);\n                    d = d.next;\n                }\n                yh = !1;\n            }\n            xh = 0;\n            T = S = R = null;\n            zh = !1;\n            pj.current = null;\n            if (null === c || null === c.return) {\n                V = 1;\n                sj = b;\n                Y = null;\n                break;\n            }\n            a: {\n                var f = a, g = c.return, h = c, k = b;\n                b = W;\n                h.flags |= 2048;\n                h.firstEffect = h.lastEffect = null;\n                if (null !== k && "object" === typeof k && "function" === typeof k.then) {\n                    var l = k;\n                    if (0 === (h.mode & 2)) {\n                        var n = h.alternate;\n                        n ? (h.updateQueue = n.updateQueue, h.memoizedState = n.memoizedState, h.lanes = n.lanes) :\n                            (h.updateQueue = null, h.memoizedState = null);\n                    }\n                    var A = 0 !== (P.current & 1), p = g;\n                    do {\n                        var C;\n                        if (C = 13 === p.tag) {\n                            var x = p.memoizedState;\n                            if (null !== x)\n                                C = null !== x.dehydrated ? !0 : !1;\n                            else {\n                                var w = p.memoizedProps;\n                                C = void 0 === w.fallback ? !1 : !0 !== w.unstable_avoidThisFallback ? !0 : A ? !1 : !0;\n                            }\n                        }\n                        if (C) {\n                            var z = p.updateQueue;\n                            if (null === z) {\n                                var u = new Set;\n                                u.add(l);\n                                p.updateQueue = u;\n                            }\n                            else\n                                z.add(l);\n                            if (0 === (p.mode & 2)) {\n                                p.flags |= 64;\n                                h.flags |= 16384;\n                                h.flags &= -2981;\n                                if (1 === h.tag)\n                                    if (null === h.alternate)\n                                        h.tag = 17;\n                                    else {\n                                        var t = zg(-1, 1);\n                                        t.tag = 2;\n                                        Ag(h, t);\n                                    }\n                                h.lanes |= 1;\n                                break a;\n                            }\n                            k =\n                                void 0;\n                            h = b;\n                            var q = f.pingCache;\n                            null === q ? (q = f.pingCache = new Oi, k = new Set, q.set(l, k)) : (k = q.get(l), void 0 === k && (k = new Set, q.set(l, k)));\n                            if (!k.has(h)) {\n                                k.add(h);\n                                var v = Yj.bind(null, f, l, h);\n                                l.then(v, v);\n                            }\n                            p.flags |= 4096;\n                            p.lanes = b;\n                            break a;\n                        }\n                        p = p.return;\n                    } while (null !== p);\n                    k = Error((Ra(h.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.");\n                }\n                5 !== V && (V = 2);\n                k = Mi(k, h);\n                p =\n                    g;\n                do {\n                    switch (p.tag) {\n                        case 3:\n                            f = k;\n                            p.flags |= 4096;\n                            b &= -b;\n                            p.lanes |= b;\n                            var J = Pi(p, f, b);\n                            Bg(p, J);\n                            break a;\n                        case 1:\n                            f = k;\n                            var K = p.type, Q = p.stateNode;\n                            if (0 === (p.flags & 64) && ("function" === typeof K.getDerivedStateFromError || null !== Q && "function" === typeof Q.componentDidCatch && (null === Ti || !Ti.has(Q)))) {\n                                p.flags |= 4096;\n                                b &= -b;\n                                p.lanes |= b;\n                                var L = Si(p, f, b);\n                                Bg(p, L);\n                                break a;\n                            }\n                    }\n                    p = p.return;\n                } while (null !== p);\n            }\n            Zj(c);\n        }\n        catch (va) {\n            b = va;\n            Y === c && null !== c && (Y = c = c.return);\n            continue;\n        }\n        break;\n    } while (1);\n}\nfunction Pj() { var a = oj.current; oj.current = Gh; return null === a ? Gh : a; }\nfunction Tj(a, b) { var c = X; X |= 16; var d = Pj(); U === a && W === b || Qj(a, b); do\n    try {\n        ak();\n        break;\n    }\n    catch (e) {\n        Sj(a, e);\n    }\nwhile (1); qg(); X = c; oj.current = d; if (null !== Y)\n    throw Error(y(261)); U = null; W = 0; return V; }\nfunction ak() { for (; null !== Y;)\n    bk(Y); }\nfunction Rj() { for (; null !== Y && !Qf();)\n    bk(Y); }\nfunction bk(a) { var b = ck(a.alternate, a, qj); a.memoizedProps = a.pendingProps; null === b ? Zj(a) : Y = b; pj.current = null; }\nfunction Zj(a) {\n    var b = a;\n    do {\n        var c = b.alternate;\n        a = b.return;\n        if (0 === (b.flags & 2048)) {\n            c = Gi(c, b, qj);\n            if (null !== c) {\n                Y = c;\n                return;\n            }\n            c = b;\n            if (24 !== c.tag && 23 !== c.tag || null === c.memoizedState || 0 !== (qj & 1073741824) || 0 === (c.mode & 4)) {\n                for (var d = 0, e = c.child; null !== e;)\n                    d |= e.lanes | e.childLanes, e = e.sibling;\n                c.childLanes = d;\n            }\n            null !== a && 0 === (a.flags & 2048) && (null === a.firstEffect && (a.firstEffect = b.firstEffect), null !== b.lastEffect && (null !== a.lastEffect && (a.lastEffect.nextEffect = b.firstEffect), a.lastEffect = b.lastEffect), 1 < b.flags && (null !==\n                a.lastEffect ? a.lastEffect.nextEffect = b : a.firstEffect = b, a.lastEffect = b));\n        }\n        else {\n            c = Li(b);\n            if (null !== c) {\n                c.flags &= 2047;\n                Y = c;\n                return;\n            }\n            null !== a && (a.firstEffect = a.lastEffect = null, a.flags |= 2048);\n        }\n        b = b.sibling;\n        if (null !== b) {\n            Y = b;\n            return;\n        }\n        Y = b = a;\n    } while (null !== b);\n    0 === V && (V = 5);\n}\nfunction Uj(a) { var b = eg(); gg(99, dk.bind(null, a, b)); return null; }\nfunction dk(a, b) {\n    do\n        Oj();\n    while (null !== yj);\n    if (0 !== (X & 48))\n        throw Error(y(327));\n    var c = a.finishedWork;\n    if (null === c)\n        return null;\n    a.finishedWork = null;\n    a.finishedLanes = 0;\n    if (c === a.current)\n        throw Error(y(177));\n    a.callbackNode = null;\n    var d = c.lanes | c.childLanes, e = d, f = a.pendingLanes & ~e;\n    a.pendingLanes = e;\n    a.suspendedLanes = 0;\n    a.pingedLanes = 0;\n    a.expiredLanes &= e;\n    a.mutableReadLanes &= e;\n    a.entangledLanes &= e;\n    e = a.entanglements;\n    for (var g = a.eventTimes, h = a.expirationTimes; 0 < f;) {\n        var k = 31 - Vc(f), l = 1 << k;\n        e[k] = 0;\n        g[k] = -1;\n        h[k] = -1;\n        f &= ~l;\n    }\n    null !==\n        Cj && 0 === (d & 24) && Cj.has(a) && Cj.delete(a);\n    a === U && (Y = U = null, W = 0);\n    1 < c.flags ? null !== c.lastEffect ? (c.lastEffect.nextEffect = c, d = c.firstEffect) : d = c : d = c.firstEffect;\n    if (null !== d) {\n        e = X;\n        X |= 32;\n        pj.current = null;\n        kf = fd;\n        g = Ne();\n        if (Oe(g)) {\n            if ("selectionStart" in g)\n                h = { start: g.selectionStart, end: g.selectionEnd };\n            else\n                a: if (h = (h = g.ownerDocument) && h.defaultView || window, (l = h.getSelection && h.getSelection()) && 0 !== l.rangeCount) {\n                    h = l.anchorNode;\n                    f = l.anchorOffset;\n                    k = l.focusNode;\n                    l = l.focusOffset;\n                    try {\n                        h.nodeType, k.nodeType;\n                    }\n                    catch (va) {\n                        h = null;\n                        break a;\n                    }\n                    var n = 0, A = -1, p = -1, C = 0, x = 0, w = g, z = null;\n                    b: for (;;) {\n                        for (var u;;) {\n                            w !== h || 0 !== f && 3 !== w.nodeType || (A = n + f);\n                            w !== k || 0 !== l && 3 !== w.nodeType || (p = n + l);\n                            3 === w.nodeType && (n += w.nodeValue.length);\n                            if (null === (u = w.firstChild))\n                                break;\n                            z = w;\n                            w = u;\n                        }\n                        for (;;) {\n                            if (w === g)\n                                break b;\n                            z === h && ++C === f && (A = n);\n                            z === k && ++x === l && (p = n);\n                            if (null !== (u = w.nextSibling))\n                                break;\n                            w = z;\n                            z = w.parentNode;\n                        }\n                        w = u;\n                    }\n                    h = -1 === A || -1 === p ? null : { start: A, end: p };\n                }\n                else\n                    h = null;\n            h = h || { start: 0, end: 0 };\n        }\n        else\n            h = null;\n        lf = { focusedElem: g, selectionRange: h };\n        fd = !1;\n        Ij = null;\n        Jj = !1;\n        Z = d;\n        do\n            try {\n                ek();\n            }\n            catch (va) {\n                if (null ===\n                    Z)\n                    throw Error(y(330));\n                Wi(Z, va);\n                Z = Z.nextEffect;\n            }\n        while (null !== Z);\n        Ij = null;\n        Z = d;\n        do\n            try {\n                for (g = a; null !== Z;) {\n                    var t = Z.flags;\n                    t & 16 && pb(Z.stateNode, "");\n                    if (t & 128) {\n                        var q = Z.alternate;\n                        if (null !== q) {\n                            var v = q.ref;\n                            null !== v && ("function" === typeof v ? v(null) : v.current = null);\n                        }\n                    }\n                    switch (t & 1038) {\n                        case 2:\n                            fj(Z);\n                            Z.flags &= -3;\n                            break;\n                        case 6:\n                            fj(Z);\n                            Z.flags &= -3;\n                            ij(Z.alternate, Z);\n                            break;\n                        case 1024:\n                            Z.flags &= -1025;\n                            break;\n                        case 1028:\n                            Z.flags &= -1025;\n                            ij(Z.alternate, Z);\n                            break;\n                        case 4:\n                            ij(Z.alternate, Z);\n                            break;\n                        case 8:\n                            h = Z;\n                            cj(g, h);\n                            var J = h.alternate;\n                            dj(h);\n                            null !==\n                                J && dj(J);\n                    }\n                    Z = Z.nextEffect;\n                }\n            }\n            catch (va) {\n                if (null === Z)\n                    throw Error(y(330));\n                Wi(Z, va);\n                Z = Z.nextEffect;\n            }\n        while (null !== Z);\n        v = lf;\n        q = Ne();\n        t = v.focusedElem;\n        g = v.selectionRange;\n        if (q !== t && t && t.ownerDocument && Me(t.ownerDocument.documentElement, t)) {\n            null !== g && Oe(t) && (q = g.start, v = g.end, void 0 === v && (v = q), "selectionStart" in t ? (t.selectionStart = q, t.selectionEnd = Math.min(v, t.value.length)) : (v = (q = t.ownerDocument || document) && q.defaultView || window, v.getSelection && (v = v.getSelection(), h = t.textContent.length, J = Math.min(g.start, h), g = void 0 ===\n                g.end ? J : Math.min(g.end, h), !v.extend && J > g && (h = g, g = J, J = h), h = Le(t, J), f = Le(t, g), h && f && (1 !== v.rangeCount || v.anchorNode !== h.node || v.anchorOffset !== h.offset || v.focusNode !== f.node || v.focusOffset !== f.offset) && (q = q.createRange(), q.setStart(h.node, h.offset), v.removeAllRanges(), J > g ? (v.addRange(q), v.extend(f.node, f.offset)) : (q.setEnd(f.node, f.offset), v.addRange(q))))));\n            q = [];\n            for (v = t; v = v.parentNode;)\n                1 === v.nodeType && q.push({ element: v, left: v.scrollLeft, top: v.scrollTop });\n            "function" === typeof t.focus && t.focus();\n            for (t =\n                0; t < q.length; t++)\n                v = q[t], v.element.scrollLeft = v.left, v.element.scrollTop = v.top;\n        }\n        fd = !!kf;\n        lf = kf = null;\n        a.current = c;\n        Z = d;\n        do\n            try {\n                for (t = a; null !== Z;) {\n                    var K = Z.flags;\n                    K & 36 && Yi(t, Z.alternate, Z);\n                    if (K & 128) {\n                        q = void 0;\n                        var Q = Z.ref;\n                        if (null !== Q) {\n                            var L = Z.stateNode;\n                            switch (Z.tag) {\n                                case 5:\n                                    q = L;\n                                    break;\n                                default: q = L;\n                            }\n                            "function" === typeof Q ? Q(q) : Q.current = q;\n                        }\n                    }\n                    Z = Z.nextEffect;\n                }\n            }\n            catch (va) {\n                if (null === Z)\n                    throw Error(y(330));\n                Wi(Z, va);\n                Z = Z.nextEffect;\n            }\n        while (null !== Z);\n        Z = null;\n        $f();\n        X = e;\n    }\n    else\n        a.current = c;\n    if (xj)\n        xj = !1, yj = a, zj = b;\n    else\n        for (Z = d; null !== Z;)\n            b =\n                Z.nextEffect, Z.nextEffect = null, Z.flags & 8 && (K = Z, K.sibling = null, K.stateNode = null), Z = b;\n    d = a.pendingLanes;\n    0 === d && (Ti = null);\n    1 === d ? a === Ej ? Dj++ : (Dj = 0, Ej = a) : Dj = 0;\n    c = c.stateNode;\n    if (Mf && "function" === typeof Mf.onCommitFiberRoot)\n        try {\n            Mf.onCommitFiberRoot(Lf, c, void 0, 64 === (c.current.flags & 64));\n        }\n        catch (va) { }\n    Mj(a, O());\n    if (Qi)\n        throw Qi = !1, a = Ri, Ri = null, a;\n    if (0 !== (X & 8))\n        return null;\n    ig();\n    return null;\n}\nfunction ek() { for (; null !== Z;) {\n    var a = Z.alternate;\n    Jj || null === Ij || (0 !== (Z.flags & 8) ? dc(Z, Ij) && (Jj = !0) : 13 === Z.tag && mj(a, Z) && dc(Z, Ij) && (Jj = !0));\n    var b = Z.flags;\n    0 !== (b & 256) && Xi(a, Z);\n    0 === (b & 512) || xj || (xj = !0, hg(97, function () { Oj(); return null; }));\n    Z = Z.nextEffect;\n} }\nfunction Oj() { if (90 !== zj) {\n    var a = 97 < zj ? 97 : zj;\n    zj = 90;\n    return gg(a, fk);\n} return !1; }\nfunction $i(a, b) { Aj.push(b, a); xj || (xj = !0, hg(97, function () { Oj(); return null; })); }\nfunction Zi(a, b) { Bj.push(b, a); xj || (xj = !0, hg(97, function () { Oj(); return null; })); }\nfunction fk() {\n    if (null === yj)\n        return !1;\n    var a = yj;\n    yj = null;\n    if (0 !== (X & 48))\n        throw Error(y(331));\n    var b = X;\n    X |= 32;\n    var c = Bj;\n    Bj = [];\n    for (var d = 0; d < c.length; d += 2) {\n        var e = c[d], f = c[d + 1], g = e.destroy;\n        e.destroy = void 0;\n        if ("function" === typeof g)\n            try {\n                g();\n            }\n            catch (k) {\n                if (null === f)\n                    throw Error(y(330));\n                Wi(f, k);\n            }\n    }\n    c = Aj;\n    Aj = [];\n    for (d = 0; d < c.length; d += 2) {\n        e = c[d];\n        f = c[d + 1];\n        try {\n            var h = e.create;\n            e.destroy = h();\n        }\n        catch (k) {\n            if (null === f)\n                throw Error(y(330));\n            Wi(f, k);\n        }\n    }\n    for (h = a.current.firstEffect; null !== h;)\n        a = h.nextEffect, h.nextEffect = null, h.flags & 8 && (h.sibling =\n            null, h.stateNode = null), h = a;\n    X = b;\n    ig();\n    return !0;\n}\nfunction gk(a, b, c) { b = Mi(c, b); b = Pi(a, b, 1); Ag(a, b); b = Hg(); a = Kj(a, 1); null !== a && ($c(a, 1, b), Mj(a, b)); }\nfunction Wi(a, b) { if (3 === a.tag)\n    gk(a, a, b);\nelse\n    for (var c = a.return; null !== c;) {\n        if (3 === c.tag) {\n            gk(c, a, b);\n            break;\n        }\n        else if (1 === c.tag) {\n            var d = c.stateNode;\n            if ("function" === typeof c.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Ti || !Ti.has(d))) {\n                a = Mi(b, a);\n                var e = Si(c, a, 1);\n                Ag(c, e);\n                e = Hg();\n                c = Kj(c, 1);\n                if (null !== c)\n                    $c(c, 1, e), Mj(c, e);\n                else if ("function" === typeof d.componentDidCatch && (null === Ti || !Ti.has(d)))\n                    try {\n                        d.componentDidCatch(b, a);\n                    }\n                    catch (f) { }\n                break;\n            }\n        }\n        c = c.return;\n    } }\nfunction Yj(a, b, c) { var d = a.pingCache; null !== d && d.delete(b); b = Hg(); a.pingedLanes |= a.suspendedLanes & c; U === a && (W & c) === c && (4 === V || 3 === V && (W & 62914560) === W && 500 > O() - jj ? Qj(a, 0) : uj |= c); Mj(a, b); }\nfunction lj(a, b) { var c = a.stateNode; null !== c && c.delete(b); b = 0; 0 === b && (b = a.mode, 0 === (b & 2) ? b = 1 : 0 === (b & 4) ? b = 99 === eg() ? 1 : 2 : (0 === Gj && (Gj = tj), b = Yc(62914560 & ~Gj), 0 === b && (b = 4194304))); c = Hg(); a = Kj(a, b); null !== a && ($c(a, b, c), Mj(a, c)); }\nvar ck;\nck = function (a, b, c) {\n    var d = b.lanes;\n    if (null !== a)\n        if (a.memoizedProps !== b.pendingProps || N.current)\n            ug = !0;\n        else if (0 !== (c & d))\n            ug = 0 !== (a.flags & 16384) ? !0 : !1;\n        else {\n            ug = !1;\n            switch (b.tag) {\n                case 3:\n                    ri(b);\n                    sh();\n                    break;\n                case 5:\n                    gh(b);\n                    break;\n                case 1:\n                    Ff(b.type) && Jf(b);\n                    break;\n                case 4:\n                    eh(b, b.stateNode.containerInfo);\n                    break;\n                case 10:\n                    d = b.memoizedProps.value;\n                    var e = b.type._context;\n                    I(mg, e._currentValue);\n                    e._currentValue = d;\n                    break;\n                case 13:\n                    if (null !== b.memoizedState) {\n                        if (0 !== (c & b.child.childLanes))\n                            return ti(a, b, c);\n                        I(P, P.current & 1);\n                        b = hi(a, b, c);\n                        return null !==\n                            b ? b.sibling : null;\n                    }\n                    I(P, P.current & 1);\n                    break;\n                case 19:\n                    d = 0 !== (c & b.childLanes);\n                    if (0 !== (a.flags & 64)) {\n                        if (d)\n                            return Ai(a, b, c);\n                        b.flags |= 64;\n                    }\n                    e = b.memoizedState;\n                    null !== e && (e.rendering = null, e.tail = null, e.lastEffect = null);\n                    I(P, P.current);\n                    if (d)\n                        break;\n                    else\n                        return null;\n                case 23:\n                case 24: return b.lanes = 0, mi(a, b, c);\n            }\n            return hi(a, b, c);\n        }\n    else\n        ug = !1;\n    b.lanes = 0;\n    switch (b.tag) {\n        case 2:\n            d = b.type;\n            null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);\n            a = b.pendingProps;\n            e = Ef(b, M.current);\n            tg(b, c);\n            e = Ch(null, b, d, a, e, c);\n            b.flags |= 1;\n            if ("object" ===\n                typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof) {\n                b.tag = 1;\n                b.memoizedState = null;\n                b.updateQueue = null;\n                if (Ff(d)) {\n                    var f = !0;\n                    Jf(b);\n                }\n                else\n                    f = !1;\n                b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;\n                xg(b);\n                var g = d.getDerivedStateFromProps;\n                "function" === typeof g && Gg(b, d, g, a);\n                e.updater = Kg;\n                b.stateNode = e;\n                e._reactInternals = b;\n                Og(b, d, a, c);\n                b = qi(null, b, d, !0, f, c);\n            }\n            else\n                b.tag = 0, fi(null, b, e, c), b = b.child;\n            return b;\n        case 16:\n            e = b.elementType;\n            a: {\n                null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);\n                a = b.pendingProps;\n                f = e._init;\n                e = f(e._payload);\n                b.type = e;\n                f = b.tag = hk(e);\n                a = lg(e, a);\n                switch (f) {\n                    case 0:\n                        b = li(null, b, e, a, c);\n                        break a;\n                    case 1:\n                        b = pi(null, b, e, a, c);\n                        break a;\n                    case 11:\n                        b = gi(null, b, e, a, c);\n                        break a;\n                    case 14:\n                        b = ii(null, b, e, lg(e.type, a), d, c);\n                        break a;\n                }\n                throw Error(y(306, e, ""));\n            }\n            return b;\n        case 0: return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), li(a, b, d, e, c);\n        case 1: return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), pi(a, b, d, e, c);\n        case 3:\n            ri(b);\n            d = b.updateQueue;\n            if (null === a || null === d)\n                throw Error(y(282));\n            d = b.pendingProps;\n            e = b.memoizedState;\n            e = null !== e ? e.element : null;\n            yg(a, b);\n            Cg(b, d, null, c);\n            d = b.memoizedState.element;\n            if (d === e)\n                sh(), b = hi(a, b, c);\n            else {\n                e = b.stateNode;\n                if (f = e.hydrate)\n                    kh = rf(b.stateNode.containerInfo.firstChild), jh = b, f = lh = !0;\n                if (f) {\n                    a = e.mutableSourceEagerHydrationData;\n                    if (null != a)\n                        for (e = 0; e < a.length; e += 2)\n                            f = a[e], f._workInProgressVersionPrimary = a[e + 1], th.push(f);\n                    c = Zg(b, null, d, c);\n                    for (b.child = c; c;)\n                        c.flags = c.flags & -3 | 1024, c = c.sibling;\n                }\n                else\n                    fi(a, b, d, c), sh();\n                b = b.child;\n            }\n            return b;\n        case 5: return gh(b), null === a &&\n            ph(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, nf(d, e) ? g = null : null !== f && nf(d, f) && (b.flags |= 16), oi(a, b), fi(a, b, g, c), b.child;\n        case 6: return null === a && ph(b), null;\n        case 13: return ti(a, b, c);\n        case 4: return eh(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Yg(b, null, d, c) : fi(a, b, d, c), b.child;\n        case 11: return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), gi(a, b, d, e, c);\n        case 7: return fi(a, b, b.pendingProps, c), b.child;\n        case 8: return fi(a, b, b.pendingProps.children, c), b.child;\n        case 12: return fi(a, b, b.pendingProps.children, c), b.child;\n        case 10:\n            a: {\n                d = b.type._context;\n                e = b.pendingProps;\n                g = b.memoizedProps;\n                f = e.value;\n                var h = b.type._context;\n                I(mg, h._currentValue);\n                h._currentValue = f;\n                if (null !== g)\n                    if (h = g.value, f = He(h, f) ? 0 : ("function" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0, 0 === f) {\n                        if (g.children === e.children && !N.current) {\n                            b = hi(a, b, c);\n                            break a;\n                        }\n                    }\n                    else\n                        for (h = b.child, null !== h && (h.return = b); null !== h;) {\n                            var k = h.dependencies;\n                            if (null !== k) {\n                                g = h.child;\n                                for (var l = k.firstContext; null !== l;) {\n                                    if (l.context === d && 0 !== (l.observedBits & f)) {\n                                        1 === h.tag && (l = zg(-1, c & -c), l.tag = 2, Ag(h, l));\n                                        h.lanes |= c;\n                                        l = h.alternate;\n                                        null !== l && (l.lanes |= c);\n                                        sg(h.return, c);\n                                        k.lanes |= c;\n                                        break;\n                                    }\n                                    l = l.next;\n                                }\n                            }\n                            else\n                                g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;\n                            if (null !== g)\n                                g.return = h;\n                            else\n                                for (g = h; null !== g;) {\n                                    if (g === b) {\n                                        g = null;\n                                        break;\n                                    }\n                                    h = g.sibling;\n                                    if (null !== h) {\n                                        h.return = g.return;\n                                        g = h;\n                                        break;\n                                    }\n                                    g = g.return;\n                                }\n                            h = g;\n                        }\n                fi(a, b, e.children, c);\n                b = b.child;\n            }\n            return b;\n        case 9: return e = b.type, f = b.pendingProps, d = f.children, tg(b, c), e = vg(e, f.unstable_observedBits), d = d(e), b.flags |= 1, fi(a, b, d, c), b.child;\n        case 14: return e = b.type, f = lg(e, b.pendingProps), f = lg(e.type, f), ii(a, b, e, f, d, c);\n        case 15: return ki(a, b, b.type, b.pendingProps, d, c);\n        case 17: return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2), b.tag = 1, Ff(d) ? (a = !0, Jf(b)) : a = !1, tg(b, c), Mg(b, d, e), Og(b, d, e, c), qi(null, b, d, !0, a, c);\n        case 19: return Ai(a, b, c);\n        case 23: return mi(a, b, c);\n        case 24: return mi(a, b, c);\n    }\n    throw Error(y(156, b.tag));\n};\nfunction ik(a, b, c, d) { this.tag = a; this.key = c; this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null; this.index = 0; this.ref = null; this.pendingProps = b; this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null; this.mode = d; this.flags = 0; this.lastEffect = this.firstEffect = this.nextEffect = null; this.childLanes = this.lanes = 0; this.alternate = null; }\nfunction nh(a, b, c, d) { return new ik(a, b, c, d); }\nfunction ji(a) { a = a.prototype; return !(!a || !a.isReactComponent); }\nfunction hk(a) { if ("function" === typeof a)\n    return ji(a) ? 1 : 0; if (void 0 !== a && null !== a) {\n    a = a.$$typeof;\n    if (a === Aa)\n        return 11;\n    if (a === Da)\n        return 14;\n} return 2; }\nfunction Tg(a, b) {\n    var c = a.alternate;\n    null === c ? (c = nh(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.type = a.type, c.flags = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);\n    c.childLanes = a.childLanes;\n    c.lanes = a.lanes;\n    c.child = a.child;\n    c.memoizedProps = a.memoizedProps;\n    c.memoizedState = a.memoizedState;\n    c.updateQueue = a.updateQueue;\n    b = a.dependencies;\n    c.dependencies = null === b ? null : { lanes: b.lanes, firstContext: b.firstContext };\n    c.sibling = a.sibling;\n    c.index = a.index;\n    c.ref = a.ref;\n    return c;\n}\nfunction Vg(a, b, c, d, e, f) {\n    var g = 2;\n    d = a;\n    if ("function" === typeof a)\n        ji(a) && (g = 1);\n    else if ("string" === typeof a)\n        g = 5;\n    else\n        a: switch (a) {\n            case ua: return Xg(c.children, e, f, b);\n            case Ha:\n                g = 8;\n                e |= 16;\n                break;\n            case wa:\n                g = 8;\n                e |= 1;\n                break;\n            case xa: return a = nh(12, c, b, e | 8), a.elementType = xa, a.type = xa, a.lanes = f, a;\n            case Ba: return a = nh(13, c, b, e), a.type = Ba, a.elementType = Ba, a.lanes = f, a;\n            case Ca: return a = nh(19, c, b, e), a.elementType = Ca, a.lanes = f, a;\n            case Ia: return vi(c, e, f, b);\n            case Ja: return a = nh(24, c, b, e), a.elementType = Ja, a.lanes = f, a;\n            default:\n                if ("object" ===\n                    typeof a && null !== a)\n                    switch (a.$$typeof) {\n                        case ya:\n                            g = 10;\n                            break a;\n                        case za:\n                            g = 9;\n                            break a;\n                        case Aa:\n                            g = 11;\n                            break a;\n                        case Da:\n                            g = 14;\n                            break a;\n                        case Ea:\n                            g = 16;\n                            d = null;\n                            break a;\n                        case Fa:\n                            g = 22;\n                            break a;\n                    }\n                throw Error(y(130, null == a ? a : typeof a, ""));\n        }\n    b = nh(g, c, b, e);\n    b.elementType = a;\n    b.type = d;\n    b.lanes = f;\n    return b;\n}\nfunction Xg(a, b, c, d) { a = nh(7, a, d, b); a.lanes = c; return a; }\nfunction vi(a, b, c, d) { a = nh(23, a, d, b); a.elementType = Ia; a.lanes = c; return a; }\nfunction Ug(a, b, c) { a = nh(6, a, null, b); a.lanes = c; return a; }\nfunction Wg(a, b, c) { b = nh(4, null !== a.children ? a.children : [], a.key, b); b.lanes = c; b.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation }; return b; }\nfunction jk(a, b, c) { this.tag = b; this.containerInfo = a; this.finishedWork = this.pingCache = this.current = this.pendingChildren = null; this.timeoutHandle = -1; this.pendingContext = this.context = null; this.hydrate = c; this.callbackNode = null; this.callbackPriority = 0; this.eventTimes = Zc(0); this.expirationTimes = Zc(-1); this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0; this.entanglements = Zc(0); this.mutableSourceEagerHydrationData = null; }\nfunction kk(a, b, c) { var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null; return { $$typeof: ta, key: null == d ? null : "" + d, children: a, containerInfo: b, implementation: c }; }\nfunction lk(a, b, c, d) {\n    var e = b.current, f = Hg(), g = Ig(e);\n    a: if (c) {\n        c = c._reactInternals;\n        b: {\n            if (Zb(c) !== c || 1 !== c.tag)\n                throw Error(y(170));\n            var h = c;\n            do {\n                switch (h.tag) {\n                    case 3:\n                        h = h.stateNode.context;\n                        break b;\n                    case 1: if (Ff(h.type)) {\n                        h = h.stateNode.__reactInternalMemoizedMergedChildContext;\n                        break b;\n                    }\n                }\n                h = h.return;\n            } while (null !== h);\n            throw Error(y(171));\n        }\n        if (1 === c.tag) {\n            var k = c.type;\n            if (Ff(k)) {\n                c = If(c, k, h);\n                break a;\n            }\n        }\n        c = h;\n    }\n    else\n        c = Cf;\n    null === b.context ? b.context = c : b.pendingContext = c;\n    b = zg(f, g);\n    b.payload = { element: a };\n    d = void 0 === d ? null : d;\n    null !==\n        d && (b.callback = d);\n    Ag(e, b);\n    Jg(e, g, f);\n    return g;\n}\nfunction mk(a) { a = a.current; if (!a.child)\n    return null; switch (a.child.tag) {\n    case 5: return a.child.stateNode;\n    default: return a.child.stateNode;\n} }\nfunction nk(a, b) { a = a.memoizedState; if (null !== a && null !== a.dehydrated) {\n    var c = a.retryLane;\n    a.retryLane = 0 !== c && c < b ? c : b;\n} }\nfunction ok(a, b) { nk(a, b); (a = a.alternate) && nk(a, b); }\nfunction pk() { return null; }\nfunction qk(a, b, c) { var d = null != c && null != c.hydrationOptions && c.hydrationOptions.mutableSources || null; c = new jk(a, b, null != c && !0 === c.hydrate); b = nh(3, null, null, 2 === b ? 7 : 1 === b ? 3 : 0); c.current = b; b.stateNode = c; xg(b); a[ff] = c.current; cf(8 === a.nodeType ? a.parentNode : a); if (d)\n    for (a = 0; a < d.length; a++) {\n        b = d[a];\n        var e = b._getVersion;\n        e = e(b._source);\n        null == c.mutableSourceEagerHydrationData ? c.mutableSourceEagerHydrationData = [b, e] : c.mutableSourceEagerHydrationData.push(b, e);\n    } this._internalRoot = c; }\nqk.prototype.render = function (a) { lk(a, this._internalRoot, null, null); };\nqk.prototype.unmount = function () { var a = this._internalRoot, b = a.containerInfo; lk(null, a, null, function () { b[ff] = null; }); };\nfunction rk(a) { return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue)); }\nfunction sk(a, b) { b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute("data-reactroot"))); if (!b)\n    for (var c; c = a.lastChild;)\n        a.removeChild(c); return new qk(a, 0, b ? { hydrate: !0 } : void 0); }\nfunction tk(a, b, c, d, e) { var f = c._reactRootContainer; if (f) {\n    var g = f._internalRoot;\n    if ("function" === typeof e) {\n        var h = e;\n        e = function () { var a = mk(g); h.call(a); };\n    }\n    lk(b, g, a, e);\n}\nelse {\n    f = c._reactRootContainer = sk(c, d);\n    g = f._internalRoot;\n    if ("function" === typeof e) {\n        var k = e;\n        e = function () { var a = mk(g); k.call(a); };\n    }\n    Xj(function () { lk(b, g, a, e); });\n} return mk(g); }\nec = function (a) { if (13 === a.tag) {\n    var b = Hg();\n    Jg(a, 4, b);\n    ok(a, 4);\n} };\nfc = function (a) { if (13 === a.tag) {\n    var b = Hg();\n    Jg(a, 67108864, b);\n    ok(a, 67108864);\n} };\ngc = function (a) { if (13 === a.tag) {\n    var b = Hg(), c = Ig(a);\n    Jg(a, c, b);\n    ok(a, c);\n} };\nhc = function (a, b) { return b(); };\nyb = function (a, b, c) { switch (b) {\n    case "input":\n        ab(a, c);\n        b = c.name;\n        if ("radio" === c.type && null != b) {\n            for (c = a; c.parentNode;)\n                c = c.parentNode;\n            c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + \'][type="radio"]\');\n            for (b = 0; b < c.length; b++) {\n                var d = c[b];\n                if (d !== a && d.form === a.form) {\n                    var e = Db(d);\n                    if (!e)\n                        throw Error(y(90));\n                    Wa(d);\n                    ab(d, e);\n                }\n            }\n        }\n        break;\n    case "textarea":\n        ib(a, c);\n        break;\n    case "select": b = c.value, null != b && fb(a, !!c.multiple, b, !1);\n} };\nGb = Wj;\nHb = function (a, b, c, d, e) { var f = X; X |= 4; try {\n    return gg(98, a.bind(null, b, c, d, e));\n}\nfinally {\n    X = f, 0 === X && (wj(), ig());\n} };\nIb = function () { 0 === (X & 49) && (Vj(), Oj()); };\nJb = function (a, b) { var c = X; X |= 2; try {\n    return a(b);\n}\nfinally {\n    X = c, 0 === X && (wj(), ig());\n} };\nfunction uk(a, b) { var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null; if (!rk(b))\n    throw Error(y(200)); return kk(a, b, null, c); }\nvar vk = { Events: [Cb, ue, Db, Eb, Fb, Oj, { current: !1 }] }, wk = { findFiberByHostInstance: wc, bundleType: 0, version: "17.0.2", rendererPackageName: "react-dom" };\nvar xk = { bundleType: wk.bundleType, version: wk.version, rendererPackageName: wk.rendererPackageName, rendererConfig: wk.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ra.ReactCurrentDispatcher, findHostInstanceByFiber: function (a) { a = cc(a); return null === a ? null : a.stateNode; }, findFiberByHostInstance: wk.findFiberByHostInstance ||\n        pk, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null };\nif ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {\n    var yk = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n    if (!yk.isDisabled && yk.supportsFiber)\n        try {\n            Lf = yk.inject(xk), Mf = yk;\n        }\n        catch (a) { }\n}\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = vk;\nexports.createPortal = uk;\nexports.findDOMNode = function (a) { if (null == a)\n    return null; if (1 === a.nodeType)\n    return a; var b = a._reactInternals; if (void 0 === b) {\n    if ("function" === typeof a.render)\n        throw Error(y(188));\n    throw Error(y(268, Object.keys(a)));\n} a = cc(b); a = null === a ? null : a.stateNode; return a; };\nexports.flushSync = function (a, b) { var c = X; if (0 !== (c & 48))\n    return a(b); X |= 1; try {\n    if (a)\n        return gg(99, a.bind(null, b));\n}\nfinally {\n    X = c, ig();\n} };\nexports.hydrate = function (a, b, c) { if (!rk(b))\n    throw Error(y(200)); return tk(null, a, b, !0, c); };\nexports.render = function (a, b, c) { if (!rk(b))\n    throw Error(y(200)); return tk(null, a, b, !1, c); };\nexports.unmountComponentAtNode = function (a) { if (!rk(a))\n    throw Error(y(40)); return a._reactRootContainer ? (Xj(function () { tk(null, null, a, !1, function () { a._reactRootContainer = null; a[ff] = null; }); }), !0) : !1; };\nexports.unstable_batchedUpdates = Wj;\nexports.unstable_createPortal = function (a, b) { return uk(a, b, 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null); };\nexports.unstable_renderSubtreeIntoContainer = function (a, b, c, d) { if (!rk(c))\n    throw Error(y(200)); if (null == a || void 0 === a._reactInternals)\n    throw Error(y(38)); return tk(a, b, c, !1, d); };\nexports.version = "17.0.2";\n\n\n//# sourceURL=webpack://segu-g.github.io/./node_modules/react-dom/cjs/react-dom.production.min.js?')},357:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\nfunction checkDCE() {\n    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n        return;\n    }\n    if (false) {}\n    try {\n        // Verify that the code above has been dead code eliminated (DCE'd).\n        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n    }\n    catch (err) {\n        // DevTools shouldn't crash React, no matter what.\n        // We should still report in case we break this code.\n        console.error(err);\n    }\n}\nif (true) {\n    // DCE check should happen before ReactDOM bundle executes so that\n    // DevTools can report bad minification during injection.\n    checkDCE();\n    module.exports = __webpack_require__(588);\n}\nelse {}\n\n\n//# sourceURL=webpack://segu-g.github.io/./node_modules/react-dom/index.js?")},145:(__unused_webpack_module,exports,__webpack_require__)=>{eval('/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar l = __webpack_require__(962), n = 60103, p = 60106;\nexports.Fragment = 60107;\nexports.StrictMode = 60108;\nexports.Profiler = 60114;\nvar q = 60109, r = 60110, t = 60112;\nexports.Suspense = 60113;\nvar u = 60115, v = 60116;\nif ("function" === typeof Symbol && Symbol.for) {\n    var w = Symbol.for;\n    n = w("react.element");\n    p = w("react.portal");\n    exports.Fragment = w("react.fragment");\n    exports.StrictMode = w("react.strict_mode");\n    exports.Profiler = w("react.profiler");\n    q = w("react.provider");\n    r = w("react.context");\n    t = w("react.forward_ref");\n    exports.Suspense = w("react.suspense");\n    u = w("react.memo");\n    v = w("react.lazy");\n}\nvar x = "function" === typeof Symbol && Symbol.iterator;\nfunction y(a) { if (null === a || "object" !== typeof a)\n    return null; a = x && a[x] || a["@@iterator"]; return "function" === typeof a ? a : null; }\nfunction z(a) { for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)\n    b += "&args[]=" + encodeURIComponent(arguments[c]); return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."; }\nvar A = { isMounted: function () { return !1; }, enqueueForceUpdate: function () { }, enqueueReplaceState: function () { }, enqueueSetState: function () { } }, B = {};\nfunction C(a, b, c) { this.props = a; this.context = b; this.refs = B; this.updater = c || A; }\nC.prototype.isReactComponent = {};\nC.prototype.setState = function (a, b) { if ("object" !== typeof a && "function" !== typeof a && null != a)\n    throw Error(z(85)); this.updater.enqueueSetState(this, a, b, "setState"); };\nC.prototype.forceUpdate = function (a) { this.updater.enqueueForceUpdate(this, a, "forceUpdate"); };\nfunction D() { }\nD.prototype = C.prototype;\nfunction E(a, b, c) { this.props = a; this.context = b; this.refs = B; this.updater = c || A; }\nvar F = E.prototype = new D;\nF.constructor = E;\nl(F, C.prototype);\nF.isPureReactComponent = !0;\nvar G = { current: null }, H = Object.prototype.hasOwnProperty, I = { key: !0, ref: !0, __self: !0, __source: !0 };\nfunction J(a, b, c) { var e, d = {}, k = null, h = null; if (null != b)\n    for (e in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k = "" + b.key), b)\n        H.call(b, e) && !I.hasOwnProperty(e) && (d[e] = b[e]); var g = arguments.length - 2; if (1 === g)\n    d.children = c;\nelse if (1 < g) {\n    for (var f = Array(g), m = 0; m < g; m++)\n        f[m] = arguments[m + 2];\n    d.children = f;\n} if (a && a.defaultProps)\n    for (e in g = a.defaultProps, g)\n        void 0 === d[e] && (d[e] = g[e]); return { $$typeof: n, type: a, key: k, ref: h, props: d, _owner: G.current }; }\nfunction K(a, b) { return { $$typeof: n, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner }; }\nfunction L(a) { return "object" === typeof a && null !== a && a.$$typeof === n; }\nfunction escape(a) { var b = { "=": "=0", ":": "=2" }; return "$" + a.replace(/[=:]/g, function (a) { return b[a]; }); }\nvar M = /\\/+/g;\nfunction N(a, b) { return "object" === typeof a && null !== a && null != a.key ? escape("" + a.key) : b.toString(36); }\nfunction O(a, b, c, e, d) {\n    var k = typeof a;\n    if ("undefined" === k || "boolean" === k)\n        a = null;\n    var h = !1;\n    if (null === a)\n        h = !0;\n    else\n        switch (k) {\n            case "string":\n            case "number":\n                h = !0;\n                break;\n            case "object": switch (a.$$typeof) {\n                case n:\n                case p: h = !0;\n            }\n        }\n    if (h)\n        return h = a, d = d(h), a = "" === e ? "." + N(h, 0) : e, Array.isArray(d) ? (c = "", null != a && (c = a.replace(M, "$&/") + "/"), O(d, b, c, "", function (a) { return a; })) : null != d && (L(d) && (d = K(d, c + (!d.key || h && h.key === d.key ? "" : ("" + d.key).replace(M, "$&/") + "/") + a)), b.push(d)), 1;\n    h = 0;\n    e = "" === e ? "." : e + ":";\n    if (Array.isArray(a))\n        for (var g = 0; g < a.length; g++) {\n            k = a[g];\n            var f = e + N(k, g);\n            h += O(k, b, c, f, d);\n        }\n    else if (f = y(a), "function" === typeof f)\n        for (a = f.call(a), g = 0; !(k = a.next()).done;)\n            k = k.value, f = e + N(k, g++), h += O(k, b, c, f, d);\n    else if ("object" === k)\n        throw b = "" + a, Error(z(31, "[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b));\n    return h;\n}\nfunction P(a, b, c) { if (null == a)\n    return a; var e = [], d = 0; O(a, e, "", "", function (a) { return b.call(c, a, d++); }); return e; }\nfunction Q(a) { if (-1 === a._status) {\n    var b = a._result;\n    b = b();\n    a._status = 0;\n    a._result = b;\n    b.then(function (b) { 0 === a._status && (b = b.default, a._status = 1, a._result = b); }, function (b) { 0 === a._status && (a._status = 2, a._result = b); });\n} if (1 === a._status)\n    return a._result; throw a._result; }\nvar R = { current: null };\nfunction S() { var a = R.current; if (null === a)\n    throw Error(z(321)); return a; }\nvar T = { ReactCurrentDispatcher: R, ReactCurrentBatchConfig: { transition: 0 }, ReactCurrentOwner: G, IsSomeRendererActing: { current: !1 }, assign: l };\nexports.Children = { map: P, forEach: function (a, b, c) { P(a, function () { b.apply(this, arguments); }, c); }, count: function (a) { var b = 0; P(a, function () { b++; }); return b; }, toArray: function (a) { return P(a, function (a) { return a; }) || []; }, only: function (a) { if (!L(a))\n        throw Error(z(143)); return a; } };\nexports.Component = C;\nexports.PureComponent = E;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = T;\nexports.cloneElement = function (a, b, c) {\n    if (null === a || void 0 === a)\n        throw Error(z(267, a));\n    var e = l({}, a.props), d = a.key, k = a.ref, h = a._owner;\n    if (null != b) {\n        void 0 !== b.ref && (k = b.ref, h = G.current);\n        void 0 !== b.key && (d = "" + b.key);\n        if (a.type && a.type.defaultProps)\n            var g = a.type.defaultProps;\n        for (f in b)\n            H.call(b, f) && !I.hasOwnProperty(f) && (e[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);\n    }\n    var f = arguments.length - 2;\n    if (1 === f)\n        e.children = c;\n    else if (1 < f) {\n        g = Array(f);\n        for (var m = 0; m < f; m++)\n            g[m] = arguments[m + 2];\n        e.children = g;\n    }\n    return { $$typeof: n, type: a.type,\n        key: d, ref: k, props: e, _owner: h };\n};\nexports.createContext = function (a, b) { void 0 === b && (b = null); a = { $$typeof: r, _calculateChangedBits: b, _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null }; a.Provider = { $$typeof: q, _context: a }; return a.Consumer = a; };\nexports.createElement = J;\nexports.createFactory = function (a) { var b = J.bind(null, a); b.type = a; return b; };\nexports.createRef = function () { return { current: null }; };\nexports.forwardRef = function (a) { return { $$typeof: t, render: a }; };\nexports.isValidElement = L;\nexports.lazy = function (a) { return { $$typeof: v, _payload: { _status: -1, _result: a }, _init: Q }; };\nexports.memo = function (a, b) { return { $$typeof: u, type: a, compare: void 0 === b ? null : b }; };\nexports.useCallback = function (a, b) { return S().useCallback(a, b); };\nexports.useContext = function (a, b) { return S().useContext(a, b); };\nexports.useDebugValue = function () { };\nexports.useEffect = function (a, b) { return S().useEffect(a, b); };\nexports.useImperativeHandle = function (a, b, c) { return S().useImperativeHandle(a, b, c); };\nexports.useLayoutEffect = function (a, b) { return S().useLayoutEffect(a, b); };\nexports.useMemo = function (a, b) { return S().useMemo(a, b); };\nexports.useReducer = function (a, b, c) { return S().useReducer(a, b, c); };\nexports.useRef = function (a) { return S().useRef(a); };\nexports.useState = function (a) { return S().useState(a); };\nexports.version = "17.0.2";\n\n\n//# sourceURL=webpack://segu-g.github.io/./node_modules/react/cjs/react.production.min.js?')},114:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\nif (true) {\n    module.exports = __webpack_require__(145);\n}\nelse {}\n\n\n//# sourceURL=webpack://segu-g.github.io/./node_modules/react/index.js?")},891:(__unused_webpack_module,exports)=>{eval('/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar f, g, h, k;\nif ("object" === typeof performance && "function" === typeof performance.now) {\n    var l = performance;\n    exports.unstable_now = function () { return l.now(); };\n}\nelse {\n    var p = Date, q = p.now();\n    exports.unstable_now = function () { return p.now() - q; };\n}\nif ("undefined" === typeof window || "function" !== typeof MessageChannel) {\n    var t = null, u = null, w = function () { if (null !== t)\n        try {\n            var a = exports.unstable_now();\n            t(!0, a);\n            t = null;\n        }\n        catch (b) {\n            throw setTimeout(w, 0), b;\n        } };\n    f = function (a) { null !== t ? setTimeout(f, 0, a) : (t = a, setTimeout(w, 0)); };\n    g = function (a, b) { u = setTimeout(a, b); };\n    h = function () { clearTimeout(u); };\n    exports.unstable_shouldYield = function () { return !1; };\n    k = exports.unstable_forceFrameRate = function () { };\n}\nelse {\n    var x = window.setTimeout, y = window.clearTimeout;\n    if ("undefined" !== typeof console) {\n        var z = window.cancelAnimationFrame;\n        "function" !== typeof window.requestAnimationFrame && console.error("This browser doesn\'t support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");\n        "function" !== typeof z && console.error("This browser doesn\'t support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");\n    }\n    var A = !1, B = null, C = -1, D = 5, E = 0;\n    exports.unstable_shouldYield = function () {\n        return exports.unstable_now() >=\n            E;\n    };\n    k = function () { };\n    exports.unstable_forceFrameRate = function (a) { 0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : D = 0 < a ? Math.floor(1E3 / a) : 5; };\n    var F = new MessageChannel, G = F.port2;\n    F.port1.onmessage = function () { if (null !== B) {\n        var a = exports.unstable_now();\n        E = a + D;\n        try {\n            B(!0, a) ? G.postMessage(null) : (A = !1, B = null);\n        }\n        catch (b) {\n            throw G.postMessage(null), b;\n        }\n    }\n    else\n        A = !1; };\n    f = function (a) { B = a; A || (A = !0, G.postMessage(null)); };\n    g = function (a, b) {\n        C =\n            x(function () { a(exports.unstable_now()); }, b);\n    };\n    h = function () { y(C); C = -1; };\n}\nfunction H(a, b) { var c = a.length; a.push(b); a: for (;;) {\n    var d = c - 1 >>> 1, e = a[d];\n    if (void 0 !== e && 0 < I(e, b))\n        a[d] = b, a[c] = e, c = d;\n    else\n        break a;\n} }\nfunction J(a) { a = a[0]; return void 0 === a ? null : a; }\nfunction K(a) { var b = a[0]; if (void 0 !== b) {\n    var c = a.pop();\n    if (c !== b) {\n        a[0] = c;\n        a: for (var d = 0, e = a.length; d < e;) {\n            var m = 2 * (d + 1) - 1, n = a[m], v = m + 1, r = a[v];\n            if (void 0 !== n && 0 > I(n, c))\n                void 0 !== r && 0 > I(r, n) ? (a[d] = r, a[v] = c, d = v) : (a[d] = n, a[m] = c, d = m);\n            else if (void 0 !== r && 0 > I(r, c))\n                a[d] = r, a[v] = c, d = v;\n            else\n                break a;\n        }\n    }\n    return b;\n} return null; }\nfunction I(a, b) { var c = a.sortIndex - b.sortIndex; return 0 !== c ? c : a.id - b.id; }\nvar L = [], M = [], N = 1, O = null, P = 3, Q = !1, R = !1, S = !1;\nfunction T(a) { for (var b = J(M); null !== b;) {\n    if (null === b.callback)\n        K(M);\n    else if (b.startTime <= a)\n        K(M), b.sortIndex = b.expirationTime, H(L, b);\n    else\n        break;\n    b = J(M);\n} }\nfunction U(a) { S = !1; T(a); if (!R)\n    if (null !== J(L))\n        R = !0, f(V);\n    else {\n        var b = J(M);\n        null !== b && g(U, b.startTime - a);\n    } }\nfunction V(a, b) { R = !1; S && (S = !1, h()); Q = !0; var c = P; try {\n    T(b);\n    for (O = J(L); null !== O && (!(O.expirationTime > b) || a && !exports.unstable_shouldYield());) {\n        var d = O.callback;\n        if ("function" === typeof d) {\n            O.callback = null;\n            P = O.priorityLevel;\n            var e = d(O.expirationTime <= b);\n            b = exports.unstable_now();\n            "function" === typeof e ? O.callback = e : O === J(L) && K(L);\n            T(b);\n        }\n        else\n            K(L);\n        O = J(L);\n    }\n    if (null !== O)\n        var m = !0;\n    else {\n        var n = J(M);\n        null !== n && g(U, n.startTime - b);\n        m = !1;\n    }\n    return m;\n}\nfinally {\n    O = null, P = c, Q = !1;\n} }\nvar W = k;\nexports.unstable_IdlePriority = 5;\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_LowPriority = 4;\nexports.unstable_NormalPriority = 3;\nexports.unstable_Profiling = null;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_cancelCallback = function (a) { a.callback = null; };\nexports.unstable_continueExecution = function () { R || Q || (R = !0, f(V)); };\nexports.unstable_getCurrentPriorityLevel = function () { return P; };\nexports.unstable_getFirstCallbackNode = function () { return J(L); };\nexports.unstable_next = function (a) { switch (P) {\n    case 1:\n    case 2:\n    case 3:\n        var b = 3;\n        break;\n    default: b = P;\n} var c = P; P = b; try {\n    return a();\n}\nfinally {\n    P = c;\n} };\nexports.unstable_pauseExecution = function () { };\nexports.unstable_requestPaint = W;\nexports.unstable_runWithPriority = function (a, b) { switch (a) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5: break;\n    default: a = 3;\n} var c = P; P = a; try {\n    return b();\n}\nfinally {\n    P = c;\n} };\nexports.unstable_scheduleCallback = function (a, b, c) { var d = exports.unstable_now(); "object" === typeof c && null !== c ? (c = c.delay, c = "number" === typeof c && 0 < c ? d + c : d) : c = d; switch (a) {\n    case 1:\n        var e = -1;\n        break;\n    case 2:\n        e = 250;\n        break;\n    case 5:\n        e = 1073741823;\n        break;\n    case 4:\n        e = 1E4;\n        break;\n    default: e = 5E3;\n} e = c + e; a = { id: N++, callback: b, priorityLevel: a, startTime: c, expirationTime: e, sortIndex: -1 }; c > d ? (a.sortIndex = c, H(M, a), null === J(L) && a === J(M) && (S ? h() : S = !0, g(U, c - d))) : (a.sortIndex = e, H(L, a), R || Q || (R = !0, f(V))); return a; };\nexports.unstable_wrapCallback = function (a) { var b = P; return function () { var c = P; P = b; try {\n    return a.apply(this, arguments);\n}\nfinally {\n    P = c;\n} }; };\n\n\n//# sourceURL=webpack://segu-g.github.io/./node_modules/scheduler/cjs/scheduler.production.min.js?')},687:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\nif (true) {\n    module.exports = __webpack_require__(891);\n}\nelse {}\n\n\n//# sourceURL=webpack://segu-g.github.io/./node_modules/scheduler/index.js?")},255:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(114);\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(357);\n;// CONCATENATED MODULE: ./node_modules/recoil/es/recoil.js\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== "function" && b !== null)\n            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === "function")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nfunction err(message) {\n    var error = new Error(message); // In V8, Error objects keep the closure scope chain alive until the\n    // err.stack property is accessed.\n    if (error.stack === undefined) {\n        // IE sets the stack only if error is thrown\n        try {\n            throw error;\n        }\n        catch (_) { } // eslint-disable-line fb-www/no-unused-catch-bindings, no-empty\n    }\n    return error;\n}\nvar err_1 = err;\n// @oss-only\nvar Recoil_err = err_1;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\n// Split declaration and implementation to allow this function to pretend to\n// check for actual instance of Promise instead of something with a `then`\n// method.\n// eslint-disable-next-line no-redeclare\nfunction isPromise(p) {\n    return !!p && typeof p.then === \'function\';\n}\nvar Recoil_isPromise = isPromise;\nfunction nullthrows(x, message) {\n    if (x != null) {\n        return x;\n    }\n    throw Recoil_err(message !== null && message !== void 0 ? message : \'Got unexpected null or undefined\');\n}\nvar Recoil_nullthrows = nullthrows;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    }\n    else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar BaseLoadable = /** @class */ (function () {\n    function BaseLoadable() {\n    }\n    BaseLoadable.prototype.getValue = function () {\n        throw Recoil_err(\'BaseLoadable\');\n    };\n    BaseLoadable.prototype.toPromise = function () {\n        throw Recoil_err(\'BaseLoadable\');\n    };\n    BaseLoadable.prototype.valueMaybe = function () {\n        throw Recoil_err(\'BaseLoadable\');\n    };\n    BaseLoadable.prototype.valueOrThrow = function () {\n        // $FlowFixMe[prop-missing]\n        throw Recoil_err("Loadable expected value, but in \\"" + this.state + "\\" state");\n    };\n    BaseLoadable.prototype.promiseMaybe = function () {\n        throw Recoil_err(\'BaseLoadable\');\n    };\n    BaseLoadable.prototype.promiseOrThrow = function () {\n        // $FlowFixMe[prop-missing]\n        throw Recoil_err("Loadable expected promise, but in \\"" + this.state + "\\" state");\n    };\n    BaseLoadable.prototype.errorMaybe = function () {\n        throw Recoil_err(\'BaseLoadable\');\n    };\n    BaseLoadable.prototype.errorOrThrow = function () {\n        // $FlowFixMe[prop-missing]\n        throw Recoil_err("Loadable expected error, but in \\"" + this.state + "\\" state");\n    };\n    BaseLoadable.prototype.is = function (other) {\n        // $FlowFixMe[prop-missing]\n        return other.state === this.state && other.contents === this.contents;\n    };\n    BaseLoadable.prototype.map = function (_map) {\n        throw Recoil_err(\'BaseLoadable\');\n    };\n    return BaseLoadable;\n}());\nvar ValueLoadable = /** @class */ (function (_super) {\n    __extends(ValueLoadable, _super);\n    function ValueLoadable(value) {\n        var _this = _super.call(this) || this;\n        _defineProperty(_this, "state", \'hasValue\');\n        _defineProperty(_this, "contents", void 0);\n        _this.contents = value;\n        return _this;\n    }\n    ValueLoadable.prototype.getValue = function () {\n        return this.contents;\n    };\n    ValueLoadable.prototype.toPromise = function () {\n        return Promise.resolve(this.contents);\n    };\n    ValueLoadable.prototype.valueMaybe = function () {\n        return this.contents;\n    };\n    ValueLoadable.prototype.valueOrThrow = function () {\n        return this.contents;\n    };\n    ValueLoadable.prototype.promiseMaybe = function () {\n        return undefined;\n    };\n    ValueLoadable.prototype.errorMaybe = function () {\n        return undefined;\n    };\n    ValueLoadable.prototype.map = function (map) {\n        var _this = this;\n        try {\n            var next = map(this.contents);\n            return Recoil_isPromise(next) ? loadableWithPromise(next) : isLoadable(next) ? next : loadableWithValue(next);\n        }\n        catch (e) {\n            return Recoil_isPromise(e) ? // If we "suspended", then try again.\n                // errors and subsequent retries will be handled in \'loading\' case\n                loadableWithPromise(e.next(function () { return _this.map(map); })) : loadableWithError(e);\n        }\n    };\n    return ValueLoadable;\n}(BaseLoadable));\nvar ErrorLoadable = /** @class */ (function (_super) {\n    __extends(ErrorLoadable, _super);\n    function ErrorLoadable(error) {\n        var _this = _super.call(this) || this;\n        _defineProperty(_this, "state", \'hasError\');\n        _defineProperty(_this, "contents", void 0);\n        _this.contents = error;\n        return _this;\n    }\n    ErrorLoadable.prototype.getValue = function () {\n        throw this.contents;\n    };\n    ErrorLoadable.prototype.toPromise = function () {\n        return Promise.reject(this.contents);\n    };\n    ErrorLoadable.prototype.valueMaybe = function () {\n        return undefined;\n    };\n    ErrorLoadable.prototype.promiseMaybe = function () {\n        return undefined;\n    };\n    ErrorLoadable.prototype.errorMaybe = function () {\n        return this.contents;\n    };\n    ErrorLoadable.prototype.errorOrThrow = function () {\n        return this.contents;\n    };\n    ErrorLoadable.prototype.map = function (_map) {\n        // $FlowIssue[incompatible-return]\n        return this;\n    };\n    return ErrorLoadable;\n}(BaseLoadable));\nvar LoadingLoadable = /** @class */ (function (_super) {\n    __extends(LoadingLoadable, _super);\n    function LoadingLoadable(promise) {\n        var _this = _super.call(this) || this;\n        _defineProperty(_this, "state", \'loading\');\n        _defineProperty(_this, "contents", void 0);\n        _this.contents = promise;\n        return _this;\n    }\n    LoadingLoadable.prototype.getValue = function () {\n        throw this.contents;\n    };\n    LoadingLoadable.prototype.toPromise = function () {\n        return this.contents;\n    };\n    LoadingLoadable.prototype.valueMaybe = function () {\n        return undefined;\n    };\n    LoadingLoadable.prototype.promiseMaybe = function () {\n        return this.contents;\n    };\n    LoadingLoadable.prototype.promiseOrThrow = function () {\n        return this.contents;\n    };\n    LoadingLoadable.prototype.errorMaybe = function () {\n        return undefined;\n    };\n    LoadingLoadable.prototype.map = function (map) {\n        var _this = this;\n        return loadableWithPromise(this.contents.then(function (value) {\n            var next = map(value);\n            if (isLoadable(next)) {\n                var nextLoadable = next;\n                switch (nextLoadable.state) {\n                    case \'hasValue\':\n                        return nextLoadable.contents;\n                    case \'hasError\':\n                        throw nextLoadable.contents;\n                    case \'loading\':\n                        return nextLoadable.contents;\n                }\n            } // $FlowIssue[incompatible-return]\n            return next;\n        }).catch(function (e) {\n            if (Recoil_isPromise(e)) {\n                // we were "suspended," try again\n                return e.then(function () { return _this.map(map).contents; });\n            }\n            throw e;\n        }));\n    };\n    return LoadingLoadable;\n}(BaseLoadable));\nfunction loadableWithValue(value) {\n    return Object.freeze(new ValueLoadable(value));\n}\nfunction loadableWithError(error) {\n    return Object.freeze(new ErrorLoadable(error));\n}\nfunction loadableWithPromise(promise) {\n    return Object.freeze(new LoadingLoadable(promise));\n}\nfunction loadableLoading() {\n    return Object.freeze(new LoadingLoadable(new Promise(function () { })));\n}\nfunction loadableAllArray(inputs) {\n    return inputs.every(function (i) { return i.state === \'hasValue\'; }) ? loadableWithValue(inputs.map(function (i) { return i.contents; })) : inputs.some(function (i) { return i.state === \'hasError\'; }) ? loadableWithError(Recoil_nullthrows(inputs.find(function (i) { return i.state === \'hasError\'; }), \'Invalid loadable passed to loadableAll\').contents) : loadableWithPromise(Promise.all(inputs.map(function (i) { return i.contents; })));\n}\nfunction loadableAll(inputs) {\n    var unwrapedInputs = Array.isArray(inputs) ? inputs : Object.getOwnPropertyNames(inputs).map(function (key) { return inputs[key]; });\n    var output = loadableAllArray(unwrapedInputs);\n    return Array.isArray(inputs) ? // $FlowIssue[incompatible-return]\n        output : // Object.getOwnPropertyNames() has consistent key ordering with ES6\n        // $FlowIssue[incompatible-call]\n        output.map(function (outputs) { return Object.getOwnPropertyNames(inputs).reduce(function (out, key, idx) {\n            var _a;\n            return (__assign(__assign({}, out), (_a = {}, _a[key] = outputs[idx], _a)));\n        }, {}); });\n}\nfunction isLoadable(x) {\n    return x instanceof BaseLoadable;\n}\nvar LoadableStaticInterface = {\n    of: function (value) { return Recoil_isPromise(value) ? loadableWithPromise(value) : loadableWithValue(value); },\n    error: function (error) { return loadableWithError(error); },\n    // $FlowIssue[unclear-type]\n    all: loadableAll,\n    isLoadable: isLoadable\n};\nvar Recoil_Loadable = {\n    loadableWithValue: loadableWithValue,\n    loadableWithError: loadableWithError,\n    loadableWithPromise: loadableWithPromise,\n    loadableLoading: loadableLoading,\n    loadableAll: loadableAll,\n    isLoadable: isLoadable,\n    RecoilLoadable: LoadableStaticInterface\n};\nvar Recoil_Loadable_1 = Recoil_Loadable.loadableWithValue;\nvar Recoil_Loadable_2 = Recoil_Loadable.loadableWithError;\nvar Recoil_Loadable_3 = Recoil_Loadable.loadableWithPromise;\nvar Recoil_Loadable_4 = Recoil_Loadable.loadableLoading;\nvar Recoil_Loadable_5 = Recoil_Loadable.loadableAll;\nvar Recoil_Loadable_6 = Recoil_Loadable.isLoadable;\nvar Recoil_Loadable_7 = Recoil_Loadable.RecoilLoadable;\nvar Recoil_Loadable$1 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    loadableWithValue: Recoil_Loadable_1,\n    loadableWithError: Recoil_Loadable_2,\n    loadableWithPromise: Recoil_Loadable_3,\n    loadableLoading: Recoil_Loadable_4,\n    loadableAll: Recoil_Loadable_5,\n    isLoadable: Recoil_Loadable_6,\n    RecoilLoadable: Recoil_Loadable_7\n});\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nfunction sprintf(format) {\n    var args = [];\n    for (var _a = 1; _a < arguments.length; _a++) {\n        args[_a - 1] = arguments[_a];\n    }\n    var index = 0;\n    return format.replace(/%s/g, function () { return String(args[index++]); });\n}\nvar sprintf_1 = (/* unused pure expression or super */ null && (sprintf));\nfunction expectationViolation(format) {\n    var args = [];\n    for (var _a = 1; _a < arguments.length; _a++) {\n        args[_a - 1] = arguments[_a];\n    }\n    if (false) { var error, message; }\n}\nvar expectationViolation_1 = expectationViolation;\n// @oss-only\nvar Recoil_expectationViolation = expectationViolation_1;\nvar _useMutableSource;\n// FIXME T2710559282599660\nvar useMutableSource = // flowlint-line unclear-type:off\n (_useMutableSource = react.useMutableSource) !== null && _useMutableSource !== void 0 ? _useMutableSource : react.unstable_useMutableSource; // flowlint-line unclear-type:off\nfunction mutableSourceExists() {\n    return useMutableSource && !(typeof window !== \'undefined\' && window.$disableRecoilValueMutableSource_TEMP_HACK_DO_NOT_USE);\n}\nvar Recoil_mutableSource = {\n    mutableSourceExists: mutableSourceExists,\n    useMutableSource: useMutableSource\n};\nvar mutableSourceExists$1 = Recoil_mutableSource.mutableSourceExists;\nvar gks = new Map().set(\'recoil_hamt_2020\', true).set(\'recoil_memory_managament_2020\', true).set(\'recoil_suppress_rerender_in_callback\', true);\nfunction Recoil_gkx(gk) {\n    var _gks$get;\n    if (gk === \'recoil_early_rendering_2021\' && !mutableSourceExists$1()) {\n        return false;\n    }\n    return (_gks$get = gks.get(gk)) !== null && _gks$get !== void 0 ? _gks$get : false;\n}\nRecoil_gkx.setPass = function (gk) {\n    gks.set(gk, true);\n};\nRecoil_gkx.setFail = function (gk) {\n    gks.set(gk, false);\n};\nvar Recoil_gkx_1 = Recoil_gkx; // @oss-only\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\n/**\n * Creates a new iterable whose output is generated by passing the input\n * iterable\'s values through the mapper function.\n */\nfunction mapIterable(iterable, callback) {\n    // Use generator to create iterable/iterator\n    return function () {\n        var index, _a, iterable_1, value;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    index = 0;\n                    _a = 0, iterable_1 = iterable;\n                    _b.label = 1;\n                case 1:\n                    if (!(_a < iterable_1.length)) return [3 /*break*/, 4];\n                    value = iterable_1[_a];\n                    return [4 /*yield*/, callback(value, index++)];\n                case 2:\n                    _b.sent();\n                    _b.label = 3;\n                case 3:\n                    _a++;\n                    return [3 /*break*/, 1];\n                case 4: return [2 /*return*/];\n            }\n        });\n    }();\n}\nvar Recoil_mapIterable = mapIterable;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nfunction recoverableViolation(message, projectName, _a) {\n    var _b = _a === void 0 ? {} : _a, error = _b.error;\n    if (false) {}\n    return null;\n}\nvar recoverableViolation_1 = recoverableViolation;\n// @oss-only\nvar Recoil_recoverableViolation = recoverableViolation_1;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\n// eslint-disable-next-line no-unused-vars\nvar AbstractRecoilValue = /** @class */ (function () {\n    function AbstractRecoilValue(newKey) {\n        _defineProperty(this, "key", void 0);\n        this.key = newKey;\n    }\n    return AbstractRecoilValue;\n}());\nvar RecoilState = /** @class */ (function (_super) {\n    __extends(RecoilState, _super);\n    function RecoilState() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return RecoilState;\n}(AbstractRecoilValue));\nvar RecoilValueReadOnly = /** @class */ (function (_super) {\n    __extends(RecoilValueReadOnly, _super);\n    function RecoilValueReadOnly() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return RecoilValueReadOnly;\n}(AbstractRecoilValue));\nfunction isRecoilValue(x) {\n    return x instanceof RecoilState || x instanceof RecoilValueReadOnly;\n}\nvar Recoil_RecoilValue = {\n    AbstractRecoilValue: AbstractRecoilValue,\n    RecoilState: RecoilState,\n    RecoilValueReadOnly: RecoilValueReadOnly,\n    isRecoilValue: isRecoilValue\n};\nvar Recoil_RecoilValue_1 = Recoil_RecoilValue.AbstractRecoilValue;\nvar Recoil_RecoilValue_2 = Recoil_RecoilValue.RecoilState;\nvar Recoil_RecoilValue_3 = Recoil_RecoilValue.RecoilValueReadOnly;\nvar Recoil_RecoilValue_4 = Recoil_RecoilValue.isRecoilValue;\nvar Recoil_RecoilValue$1 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    AbstractRecoilValue: Recoil_RecoilValue_1,\n    RecoilState: Recoil_RecoilValue_2,\n    RecoilValueReadOnly: Recoil_RecoilValue_3,\n    isRecoilValue: Recoil_RecoilValue_4\n});\nvar DefaultValue = /** @class */ (function () {\n    function DefaultValue() {\n    }\n    return DefaultValue;\n}());\nvar DEFAULT_VALUE = new DefaultValue();\nvar RecoilValueNotReady = /** @class */ (function (_super) {\n    __extends(RecoilValueNotReady, _super);\n    function RecoilValueNotReady(key) {\n        return _super.call(this, "Tried to set the value of Recoil selector " + key + " using an updater function, but it is an async selector in a pending or error state; this is not supported.") || this;\n    }\n    return RecoilValueNotReady;\n}(Error));\n// flowlint-next-line unclear-type:off\nvar nodes = new Map(); // flowlint-next-line unclear-type:off\nvar recoilValues = new Map();\n/* eslint-disable no-redeclare */\nfunction recoilValuesForKeys(keys) {\n    return Recoil_mapIterable(keys, function (key) { return Recoil_nullthrows(recoilValues.get(key)); });\n}\nfunction registerNode(node) {\n    if (nodes.has(node.key)) {\n        var message = "Duplicate atom key \\"" + node.key + "\\". This is a FATAL ERROR in\\n      production. But it is safe to ignore this warning if it occurred because of\\n      hot module replacement."; // TODO Need to figure out if there is a standard/open-source equivalent to see if hot module replacement is happening:\n        // prettier-ignore\n        // @fb-only: if (__DEV__) {\n        // @fb-only: const isAcceptingUpdate = require(\'__debug\').isAcceptingUpdate;\n        // prettier-ignore\n        // @fb-only: if (typeof isAcceptingUpdate !== \'function\' || !isAcceptingUpdate()) {\n        // @fb-only: expectationViolation(message, \'recoil\');\n        // @fb-only: }\n        // prettier-ignore\n        // @fb-only: } else {\n        // @fb-only: recoverableViolation(message, \'recoil\');\n        // @fb-only: }\n        console.warn(message); // @oss-only\n    }\n    nodes.set(node.key, node);\n    var recoilValue = node.set == null ? new Recoil_RecoilValue$1.RecoilValueReadOnly(node.key) : new Recoil_RecoilValue$1.RecoilState(node.key);\n    recoilValues.set(node.key, recoilValue);\n    return recoilValue;\n}\n/* eslint-enable no-redeclare */\nvar NodeMissingError = /** @class */ (function (_super) {\n    __extends(NodeMissingError, _super);\n    function NodeMissingError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NodeMissingError;\n}(Error)); // flowlint-next-line unclear-type:off\nfunction getNode(key) {\n    var node = nodes.get(key);\n    if (node == null) {\n        throw new NodeMissingError("Missing definition for RecoilValue: \\"" + key + "\\"\\"");\n    }\n    return node;\n} // flowlint-next-line unclear-type:off\nfunction getNodeMaybe(key) {\n    return nodes.get(key);\n}\nvar configDeletionHandlers = new Map();\nfunction deleteNodeConfigIfPossible(key) {\n    var _node$shouldDeleteCon;\n    if (!Recoil_gkx_1(\'recoil_memory_managament_2020\')) {\n        return;\n    }\n    var node = nodes.get(key);\n    if (node === null || node === void 0 ? void 0 : (_node$shouldDeleteCon = node.shouldDeleteConfigOnRelease) === null || _node$shouldDeleteCon === void 0 ? void 0 : _node$shouldDeleteCon.call(node)) {\n        var _getConfigDeletionHan;\n        nodes.delete(key);\n        (_getConfigDeletionHan = getConfigDeletionHandler(key)) === null || _getConfigDeletionHan === void 0 ? void 0 : _getConfigDeletionHan();\n        configDeletionHandlers.delete(key);\n    }\n}\nfunction setConfigDeletionHandler(key, fn) {\n    if (!Recoil_gkx_1(\'recoil_memory_managament_2020\')) {\n        return;\n    }\n    if (fn === undefined) {\n        configDeletionHandlers.delete(key);\n    }\n    else {\n        configDeletionHandlers.set(key, fn);\n    }\n}\nfunction getConfigDeletionHandler(key) {\n    return configDeletionHandlers.get(key);\n}\nvar Recoil_Node = {\n    nodes: nodes,\n    recoilValues: recoilValues,\n    registerNode: registerNode,\n    getNode: getNode,\n    getNodeMaybe: getNodeMaybe,\n    deleteNodeConfigIfPossible: deleteNodeConfigIfPossible,\n    setConfigDeletionHandler: setConfigDeletionHandler,\n    getConfigDeletionHandler: getConfigDeletionHandler,\n    recoilValuesForKeys: recoilValuesForKeys,\n    NodeMissingError: NodeMissingError,\n    DefaultValue: DefaultValue,\n    DEFAULT_VALUE: DEFAULT_VALUE,\n    RecoilValueNotReady: RecoilValueNotReady\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nfunction enqueueExecution(s, f) {\n    f();\n}\nvar Recoil_Queue = {\n    enqueueExecution: enqueueExecution\n};\nfunction createCommonjsModule(fn, module) {\n    return module = { exports: {} }, fn(module, module.exports), module.exports;\n}\nvar hamt_1 = createCommonjsModule(function (module) {\n    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {\n        return typeof obj;\n    } : function (obj) {\n        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n    };\n    /**\n        @fileOverview Hash Array Mapped Trie.\n    \n        Code based on: https://github.com/exclipy/pdata\n    */\n    var hamt = {}; // export\n    /* Configuration\n     ******************************************************************************/\n    var SIZE = 5;\n    var BUCKET_SIZE = Math.pow(2, SIZE);\n    var MASK = BUCKET_SIZE - 1;\n    var MAX_INDEX_NODE = BUCKET_SIZE / 2;\n    var MIN_ARRAY_NODE = BUCKET_SIZE / 4;\n    /*\n     ******************************************************************************/\n    var nothing = {};\n    var constant = function constant(x) {\n        return function () {\n            return x;\n        };\n    };\n    /**\n        Get 32 bit hash of string.\n    \n        Based on:\n        http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\n    */\n    var hash = hamt.hash = function (str) {\n        var type = typeof str === \'undefined\' ? \'undefined\' : _typeof(str);\n        if (type === \'number\')\n            return str;\n        if (type !== \'string\')\n            str += \'\';\n        var hash = 0;\n        for (var i = 0, len = str.length; i < len; ++i) {\n            var c = str.charCodeAt(i);\n            hash = (hash << 5) - hash + c | 0;\n        }\n        return hash;\n    };\n    /* Bit Ops\n     ******************************************************************************/\n    /**\n        Hamming weight.\n    \n        Taken from: http://jsperf.com/hamming-weight\n    */\n    var popcount = function popcount(x) {\n        x -= x >> 1 & 0x55555555;\n        x = (x & 0x33333333) + (x >> 2 & 0x33333333);\n        x = x + (x >> 4) & 0x0f0f0f0f;\n        x += x >> 8;\n        x += x >> 16;\n        return x & 0x7f;\n    };\n    var hashFragment = function hashFragment(shift, h) {\n        return h >>> shift & MASK;\n    };\n    var toBitmap = function toBitmap(x) {\n        return 1 << x;\n    };\n    var fromBitmap = function fromBitmap(bitmap, bit) {\n        return popcount(bitmap & bit - 1);\n    };\n    /* Array Ops\n     ******************************************************************************/\n    /**\n        Set a value in an array.\n    \n        @param mutate Should the input array be mutated?\n        @param at Index to change.\n        @param v New value\n        @param arr Array.\n    */\n    var arrayUpdate = function arrayUpdate(mutate, at, v, arr) {\n        var out = arr;\n        if (!mutate) {\n            var len = arr.length;\n            out = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                out[i] = arr[i];\n            }\n        }\n        out[at] = v;\n        return out;\n    };\n    /**\n        Remove a value from an array.\n    \n        @param mutate Should the input array be mutated?\n        @param at Index to remove.\n        @param arr Array.\n    */\n    var arraySpliceOut = function arraySpliceOut(mutate, at, arr) {\n        var newLen = arr.length - 1;\n        var i = 0;\n        var g = 0;\n        var out = arr;\n        if (mutate) {\n            i = g = at;\n        }\n        else {\n            out = new Array(newLen);\n            while (i < at) {\n                out[g++] = arr[i++];\n            }\n        }\n        ++i;\n        while (i <= newLen) {\n            out[g++] = arr[i++];\n        }\n        if (mutate) {\n            out.length = newLen;\n        }\n        return out;\n    };\n    /**\n        Insert a value into an array.\n    \n        @param mutate Should the input array be mutated?\n        @param at Index to insert at.\n        @param v Value to insert,\n        @param arr Array.\n    */\n    var arraySpliceIn = function arraySpliceIn(mutate, at, v, arr) {\n        var len = arr.length;\n        if (mutate) {\n            var _i = len;\n            while (_i >= at) {\n                arr[_i--] = arr[_i];\n            }\n            arr[at] = v;\n            return arr;\n        }\n        var i = 0, g = 0;\n        var out = new Array(len + 1);\n        while (i < at) {\n            out[g++] = arr[i++];\n        }\n        out[at] = v;\n        while (i < len) {\n            out[++g] = arr[i++];\n        }\n        return out;\n    };\n    /* Node Structures\n     ******************************************************************************/\n    var LEAF = 1;\n    var COLLISION = 2;\n    var INDEX = 3;\n    var ARRAY = 4;\n    /**\n        Empty node.\n    */\n    var empty = {\n        __hamt_isEmpty: true\n    };\n    var isEmptyNode = function isEmptyNode(x) {\n        return x === empty || x && x.__hamt_isEmpty;\n    };\n    /**\n        Leaf holding a value.\n    \n        @member edit Edit of the node.\n        @member hash Hash of key.\n        @member key Key.\n        @member value Value stored.\n    */\n    var Leaf = function Leaf(edit, hash, key, value) {\n        return {\n            type: LEAF,\n            edit: edit,\n            hash: hash,\n            key: key,\n            value: value,\n            _modify: Leaf__modify\n        };\n    };\n    /**\n        Leaf holding multiple values with the same hash but different keys.\n    \n        @member edit Edit of the node.\n        @member hash Hash of key.\n        @member children Array of collision children node.\n    */\n    var Collision = function Collision(edit, hash, children) {\n        return {\n            type: COLLISION,\n            edit: edit,\n            hash: hash,\n            children: children,\n            _modify: Collision__modify\n        };\n    };\n    /**\n        Internal node with a sparse set of children.\n    \n        Uses a bitmap and array to pack children.\n    \n      @member edit Edit of the node.\n        @member mask Bitmap that encode the positions of children in the array.\n        @member children Array of child nodes.\n    */\n    var IndexedNode = function IndexedNode(edit, mask, children) {\n        return {\n            type: INDEX,\n            edit: edit,\n            mask: mask,\n            children: children,\n            _modify: IndexedNode__modify\n        };\n    };\n    /**\n        Internal node with many children.\n    \n        @member edit Edit of the node.\n        @member size Number of children.\n        @member children Array of child nodes.\n    */\n    var ArrayNode = function ArrayNode(edit, size, children) {\n        return {\n            type: ARRAY,\n            edit: edit,\n            size: size,\n            children: children,\n            _modify: ArrayNode__modify\n        };\n    };\n    /**\n        Is `node` a leaf node?\n    */\n    var isLeaf = function isLeaf(node) {\n        return node === empty || node.type === LEAF || node.type === COLLISION;\n    };\n    /* Internal node operations.\n     ******************************************************************************/\n    /**\n        Expand an indexed node into an array node.\n    \n      @param edit Current edit.\n        @param frag Index of added child.\n        @param child Added child.\n        @param mask Index node mask before child added.\n        @param subNodes Index node children before child added.\n    */\n    var expand = function expand(edit, frag, child, bitmap, subNodes) {\n        var arr = [];\n        var bit = bitmap;\n        var count = 0;\n        for (var i = 0; bit; ++i) {\n            if (bit & 1)\n                arr[i] = subNodes[count++];\n            bit >>>= 1;\n        }\n        arr[frag] = child;\n        return ArrayNode(edit, count + 1, arr);\n    };\n    /**\n        Collapse an array node into a indexed node.\n    \n      @param edit Current edit.\n        @param count Number of elements in new array.\n        @param removed Index of removed element.\n        @param elements Array node children before remove.\n    */\n    var pack = function pack(edit, count, removed, elements) {\n        var children = new Array(count - 1);\n        var g = 0;\n        var bitmap = 0;\n        for (var i = 0, len = elements.length; i < len; ++i) {\n            if (i !== removed) {\n                var elem = elements[i];\n                if (elem && !isEmptyNode(elem)) {\n                    children[g++] = elem;\n                    bitmap |= 1 << i;\n                }\n            }\n        }\n        return IndexedNode(edit, bitmap, children);\n    };\n    /**\n        Merge two leaf nodes.\n    \n        @param shift Current shift.\n        @param h1 Node 1 hash.\n        @param n1 Node 1.\n        @param h2 Node 2 hash.\n        @param n2 Node 2.\n    */\n    var mergeLeaves = function mergeLeaves(edit, shift, h1, n1, h2, n2) {\n        if (h1 === h2)\n            return Collision(edit, h1, [n2, n1]);\n        var subH1 = hashFragment(shift, h1);\n        var subH2 = hashFragment(shift, h2);\n        return IndexedNode(edit, toBitmap(subH1) | toBitmap(subH2), subH1 === subH2 ? [mergeLeaves(edit, shift + SIZE, h1, n1, h2, n2)] : subH1 < subH2 ? [n1, n2] : [n2, n1]);\n    };\n    /**\n        Update an entry in a collision list.\n    \n        @param mutate Should mutation be used?\n        @param edit Current edit.\n        @param keyEq Key compare function.\n        @param hash Hash of collision.\n        @param list Collision list.\n        @param f Update function.\n        @param k Key to update.\n        @param size Size ref.\n    */\n    var updateCollisionList = function updateCollisionList(mutate, edit, keyEq, h, list, f, k, size) {\n        var len = list.length;\n        for (var i = 0; i < len; ++i) {\n            var child = list[i];\n            if (keyEq(k, child.key)) {\n                var value = child.value;\n                var _newValue = f(value);\n                if (_newValue === value)\n                    return list;\n                if (_newValue === nothing) {\n                    --size.value;\n                    return arraySpliceOut(mutate, i, list);\n                }\n                return arrayUpdate(mutate, i, Leaf(edit, h, k, _newValue), list);\n            }\n        }\n        var newValue = f();\n        if (newValue === nothing)\n            return list;\n        ++size.value;\n        return arrayUpdate(mutate, len, Leaf(edit, h, k, newValue), list);\n    };\n    var canEditNode = function canEditNode(edit, node) {\n        return edit === node.edit;\n    };\n    /* Editing\n     ******************************************************************************/\n    var Leaf__modify = function Leaf__modify(edit, keyEq, shift, f, h, k, size) {\n        if (keyEq(k, this.key)) {\n            var _v = f(this.value);\n            if (_v === this.value)\n                return this;\n            else if (_v === nothing) {\n                --size.value;\n                return empty;\n            }\n            if (canEditNode(edit, this)) {\n                this.value = _v;\n                return this;\n            }\n            return Leaf(edit, h, k, _v);\n        }\n        var v = f();\n        if (v === nothing)\n            return this;\n        ++size.value;\n        return mergeLeaves(edit, shift, this.hash, this, h, Leaf(edit, h, k, v));\n    };\n    var Collision__modify = function Collision__modify(edit, keyEq, shift, f, h, k, size) {\n        if (h === this.hash) {\n            var canEdit = canEditNode(edit, this);\n            var list = updateCollisionList(canEdit, edit, keyEq, this.hash, this.children, f, k, size);\n            if (list === this.children)\n                return this;\n            return list.length > 1 ? Collision(edit, this.hash, list) : list[0]; // collapse single element collision list\n        }\n        var v = f();\n        if (v === nothing)\n            return this;\n        ++size.value;\n        return mergeLeaves(edit, shift, this.hash, this, h, Leaf(edit, h, k, v));\n    };\n    var IndexedNode__modify = function IndexedNode__modify(edit, keyEq, shift, f, h, k, size) {\n        var mask = this.mask;\n        var children = this.children;\n        var frag = hashFragment(shift, h);\n        var bit = toBitmap(frag);\n        var indx = fromBitmap(mask, bit);\n        var exists = mask & bit;\n        var current = exists ? children[indx] : empty;\n        var child = current._modify(edit, keyEq, shift + SIZE, f, h, k, size);\n        if (current === child)\n            return this;\n        var canEdit = canEditNode(edit, this);\n        var bitmap = mask;\n        var newChildren = void 0;\n        if (exists && isEmptyNode(child)) {\n            // remove\n            bitmap &= ~bit;\n            if (!bitmap)\n                return empty;\n            if (children.length <= 2 && isLeaf(children[indx ^ 1]))\n                return children[indx ^ 1]; // collapse\n            newChildren = arraySpliceOut(canEdit, indx, children);\n        }\n        else if (!exists && !isEmptyNode(child)) {\n            // add\n            if (children.length >= MAX_INDEX_NODE)\n                return expand(edit, frag, child, mask, children);\n            bitmap |= bit;\n            newChildren = arraySpliceIn(canEdit, indx, child, children);\n        }\n        else {\n            // modify\n            newChildren = arrayUpdate(canEdit, indx, child, children);\n        }\n        if (canEdit) {\n            this.mask = bitmap;\n            this.children = newChildren;\n            return this;\n        }\n        return IndexedNode(edit, bitmap, newChildren);\n    };\n    var ArrayNode__modify = function ArrayNode__modify(edit, keyEq, shift, f, h, k, size) {\n        var count = this.size;\n        var children = this.children;\n        var frag = hashFragment(shift, h);\n        var child = children[frag];\n        var newChild = (child || empty)._modify(edit, keyEq, shift + SIZE, f, h, k, size);\n        if (child === newChild)\n            return this;\n        var canEdit = canEditNode(edit, this);\n        var newChildren = void 0;\n        if (isEmptyNode(child) && !isEmptyNode(newChild)) {\n            // add\n            ++count;\n            newChildren = arrayUpdate(canEdit, frag, newChild, children);\n        }\n        else if (!isEmptyNode(child) && isEmptyNode(newChild)) {\n            // remove\n            --count;\n            if (count <= MIN_ARRAY_NODE)\n                return pack(edit, count, frag, children);\n            newChildren = arrayUpdate(canEdit, frag, empty, children);\n        }\n        else {\n            // modify\n            newChildren = arrayUpdate(canEdit, frag, newChild, children);\n        }\n        if (canEdit) {\n            this.size = count;\n            this.children = newChildren;\n            return this;\n        }\n        return ArrayNode(edit, count, newChildren);\n    };\n    empty._modify = function (edit, keyEq, shift, f, h, k, size) {\n        var v = f();\n        if (v === nothing)\n            return empty;\n        ++size.value;\n        return Leaf(edit, h, k, v);\n    };\n    /*\n     ******************************************************************************/\n    function Map(editable, edit, config, root, size) {\n        this._editable = editable;\n        this._edit = edit;\n        this._config = config;\n        this._root = root;\n        this._size = size;\n    }\n    Map.prototype.setTree = function (newRoot, newSize) {\n        if (this._editable) {\n            this._root = newRoot;\n            this._size = newSize;\n            return this;\n        }\n        return newRoot === this._root ? this : new Map(this._editable, this._edit, this._config, newRoot, newSize);\n    };\n    /* Queries\n     ******************************************************************************/\n    /**\n        Lookup the value for `key` in `map` using a custom `hash`.\n    \n        Returns the value or `alt` if none.\n    */\n    var tryGetHash = hamt.tryGetHash = function (alt, hash, key, map) {\n        var node = map._root;\n        var shift = 0;\n        var keyEq = map._config.keyEq;\n        while (true) {\n            switch (node.type) {\n                case LEAF:\n                    {\n                        return keyEq(key, node.key) ? node.value : alt;\n                    }\n                case COLLISION:\n                    {\n                        if (hash === node.hash) {\n                            var children = node.children;\n                            for (var i = 0, len = children.length; i < len; ++i) {\n                                var child = children[i];\n                                if (keyEq(key, child.key))\n                                    return child.value;\n                            }\n                        }\n                        return alt;\n                    }\n                case INDEX:\n                    {\n                        var frag = hashFragment(shift, hash);\n                        var bit = toBitmap(frag);\n                        if (node.mask & bit) {\n                            node = node.children[fromBitmap(node.mask, bit)];\n                            shift += SIZE;\n                            break;\n                        }\n                        return alt;\n                    }\n                case ARRAY:\n                    {\n                        node = node.children[hashFragment(shift, hash)];\n                        if (node) {\n                            shift += SIZE;\n                            break;\n                        }\n                        return alt;\n                    }\n                default:\n                    return alt;\n            }\n        }\n    };\n    Map.prototype.tryGetHash = function (alt, hash, key) {\n        return tryGetHash(alt, hash, key, this);\n    };\n    /**\n        Lookup the value for `key` in `map` using internal hash function.\n    \n        @see `tryGetHash`\n    */\n    var tryGet = hamt.tryGet = function (alt, key, map) {\n        return tryGetHash(alt, map._config.hash(key), key, map);\n    };\n    Map.prototype.tryGet = function (alt, key) {\n        return tryGet(alt, key, this);\n    };\n    /**\n        Lookup the value for `key` in `map` using a custom `hash`.\n    \n        Returns the value or `undefined` if none.\n    */\n    var getHash = hamt.getHash = function (hash, key, map) {\n        return tryGetHash(undefined, hash, key, map);\n    };\n    Map.prototype.getHash = function (hash, key) {\n        return getHash(hash, key, this);\n    };\n    /**\n        Lookup the value for `key` in `map` using internal hash function.\n    \n        @see `get`\n    */\n    var get = hamt.get = function (key, map) {\n        return tryGetHash(undefined, map._config.hash(key), key, map);\n    };\n    Map.prototype.get = function (key, alt) {\n        return tryGet(alt, key, this);\n    };\n    /**\n        Does an entry exist for `key` in `map`? Uses custom `hash`.\n    */\n    var hasHash = hamt.has = function (hash, key, map) {\n        return tryGetHash(nothing, hash, key, map) !== nothing;\n    };\n    Map.prototype.hasHash = function (hash, key) {\n        return hasHash(hash, key, this);\n    };\n    /**\n        Does an entry exist for `key` in `map`? Uses internal hash function.\n    */\n    var has = hamt.has = function (key, map) {\n        return hasHash(map._config.hash(key), key, map);\n    };\n    Map.prototype.has = function (key) {\n        return has(key, this);\n    };\n    var defKeyCompare = function defKeyCompare(x, y) {\n        return x === y;\n    };\n    /**\n        Create an empty map.\n    \n        @param config Configuration.\n    */\n    hamt.make = function (config) {\n        return new Map(0, 0, {\n            keyEq: config && config.keyEq || defKeyCompare,\n            hash: config && config.hash || hash\n        }, empty, 0);\n    };\n    /**\n        Empty map.\n    */\n    hamt.empty = hamt.make();\n    /**\n        Does `map` contain any elements?\n    */\n    var isEmpty = hamt.isEmpty = function (map) {\n        return map && !!isEmptyNode(map._root);\n    };\n    Map.prototype.isEmpty = function () {\n        return isEmpty(this);\n    };\n    /* Updates\n     ******************************************************************************/\n    /**\n        Alter the value stored for `key` in `map` using function `f` using\n        custom hash.\n    \n        `f` is invoked with the current value for `k` if it exists,\n        or no arguments if no such value exists. `modify` will always either\n        update or insert a value into the map.\n    \n        Returns a map with the modified value. Does not alter `map`.\n    */\n    var modifyHash = hamt.modifyHash = function (f, hash, key, map) {\n        var size = {\n            value: map._size\n        };\n        var newRoot = map._root._modify(map._editable ? map._edit : NaN, map._config.keyEq, 0, f, hash, key, size);\n        return map.setTree(newRoot, size.value);\n    };\n    Map.prototype.modifyHash = function (hash, key, f) {\n        return modifyHash(f, hash, key, this);\n    };\n    /**\n        Alter the value stored for `key` in `map` using function `f` using\n        internal hash function.\n    \n        @see `modifyHash`\n    */\n    var modify = hamt.modify = function (f, key, map) {\n        return modifyHash(f, map._config.hash(key), key, map);\n    };\n    Map.prototype.modify = function (key, f) {\n        return modify(f, key, this);\n    };\n    /**\n        Store `value` for `key` in `map` using custom `hash`.\n    \n        Returns a map with the modified value. Does not alter `map`.\n    */\n    var setHash = hamt.setHash = function (hash, key, value, map) {\n        return modifyHash(constant(value), hash, key, map);\n    };\n    Map.prototype.setHash = function (hash, key, value) {\n        return setHash(hash, key, value, this);\n    };\n    /**\n        Store `value` for `key` in `map` using internal hash function.\n    \n        @see `setHash`\n    */\n    var set = hamt.set = function (key, value, map) {\n        return setHash(map._config.hash(key), key, value, map);\n    };\n    Map.prototype.set = function (key, value) {\n        return set(key, value, this);\n    };\n    /**\n        Remove the entry for `key` in `map`.\n    \n        Returns a map with the value removed. Does not alter `map`.\n    */\n    var del = constant(nothing);\n    var removeHash = hamt.removeHash = function (hash, key, map) {\n        return modifyHash(del, hash, key, map);\n    };\n    Map.prototype.removeHash = Map.prototype.deleteHash = function (hash, key) {\n        return removeHash(hash, key, this);\n    };\n    /**\n        Remove the entry for `key` in `map` using internal hash function.\n    \n        @see `removeHash`\n    */\n    var remove = hamt.remove = function (key, map) {\n        return removeHash(map._config.hash(key), key, map);\n    };\n    Map.prototype.remove = Map.prototype.delete = function (key) {\n        return remove(key, this);\n    };\n    /* Mutation\n     ******************************************************************************/\n    /**\n        Mark `map` as mutable.\n     */\n    var beginMutation = hamt.beginMutation = function (map) {\n        return new Map(map._editable + 1, map._edit + 1, map._config, map._root, map._size);\n    };\n    Map.prototype.beginMutation = function () {\n        return beginMutation(this);\n    };\n    /**\n        Mark `map` as immutable.\n     */\n    var endMutation = hamt.endMutation = function (map) {\n        map._editable = map._editable && map._editable - 1;\n        return map;\n    };\n    Map.prototype.endMutation = function () {\n        return endMutation(this);\n    };\n    /**\n        Mutate `map` within the context of `f`.\n        @param f\n        @param map HAMT\n    */\n    var mutate = hamt.mutate = function (f, map) {\n        var transient = beginMutation(map);\n        f(transient);\n        return endMutation(transient);\n    };\n    Map.prototype.mutate = function (f) {\n        return mutate(f, this);\n    };\n    /* Traversal\n     ******************************************************************************/\n    /**\n        Apply a continuation.\n    */\n    var appk = function appk(k) {\n        return k && lazyVisitChildren(k[0], k[1], k[2], k[3], k[4]);\n    };\n    /**\n        Recursively visit all values stored in an array of nodes lazily.\n    */\n    var lazyVisitChildren = function lazyVisitChildren(len, children, i, f, k) {\n        while (i < len) {\n            var child = children[i++];\n            if (child && !isEmptyNode(child))\n                return lazyVisit(child, f, [len, children, i, f, k]);\n        }\n        return appk(k);\n    };\n    /**\n        Recursively visit all values stored in `node` lazily.\n    */\n    var lazyVisit = function lazyVisit(node, f, k) {\n        switch (node.type) {\n            case LEAF:\n                return {\n                    value: f(node),\n                    rest: k\n                };\n            case COLLISION:\n            case ARRAY:\n            case INDEX:\n                var children = node.children;\n                return lazyVisitChildren(children.length, children, 0, f, k);\n            default:\n                return appk(k);\n        }\n    };\n    var DONE = {\n        done: true\n    };\n    /**\n        Javascript iterator over a map.\n    */\n    function MapIterator(v) {\n        this.v = v;\n    }\n    MapIterator.prototype.next = function () {\n        if (!this.v)\n            return DONE;\n        var v0 = this.v;\n        this.v = appk(v0.rest);\n        return v0;\n    };\n    MapIterator.prototype[Symbol.iterator] = function () {\n        return this;\n    };\n    /**\n        Lazily visit each value in map with function `f`.\n    */\n    var visit = function visit(map, f) {\n        return new MapIterator(lazyVisit(map._root, f));\n    };\n    /**\n        Get a Javascsript iterator of `map`.\n    \n        Iterates over `[key, value]` arrays.\n    */\n    var buildPairs = function buildPairs(x) {\n        return [x.key, x.value];\n    };\n    var entries = hamt.entries = function (map) {\n        return visit(map, buildPairs);\n    };\n    Map.prototype.entries = Map.prototype[Symbol.iterator] = function () {\n        return entries(this);\n    };\n    /**\n        Get array of all keys in `map`.\n    \n        Order is not guaranteed.\n    */\n    var buildKeys = function buildKeys(x) {\n        return x.key;\n    };\n    var keys = hamt.keys = function (map) {\n        return visit(map, buildKeys);\n    };\n    Map.prototype.keys = function () {\n        return keys(this);\n    };\n    /**\n        Get array of all values in `map`.\n    \n        Order is not guaranteed, duplicates are preserved.\n    */\n    var buildValues = function buildValues(x) {\n        return x.value;\n    };\n    var values = hamt.values = Map.prototype.values = function (map) {\n        return visit(map, buildValues);\n    };\n    Map.prototype.values = function () {\n        return values(this);\n    };\n    /* Fold\n     ******************************************************************************/\n    /**\n        Visit every entry in the map, aggregating data.\n    \n        Order of nodes is not guaranteed.\n    \n        @param f Function mapping accumulated value, value, and key to new value.\n        @param z Starting value.\n        @param m HAMT\n    */\n    var fold = hamt.fold = function (f, z, m) {\n        var root = m._root;\n        if (root.type === LEAF)\n            return f(z, root.value, root.key);\n        var toVisit = [root.children];\n        var children = void 0;\n        while (children = toVisit.pop()) {\n            for (var i = 0, len = children.length; i < len;) {\n                var child = children[i++];\n                if (child && child.type) {\n                    if (child.type === LEAF)\n                        z = f(z, child.value, child.key);\n                    else\n                        toVisit.push(child.children);\n                }\n            }\n        }\n        return z;\n    };\n    Map.prototype.fold = function (f, z) {\n        return fold(f, z, this);\n    };\n    /**\n        Visit every entry in the map, aggregating data.\n    \n        Order of nodes is not guaranteed.\n    \n        @param f Function invoked with value and key\n        @param map HAMT\n    */\n    var forEach = hamt.forEach = function (f, map) {\n        return fold(function (_, value, key) {\n            return f(value, key, map);\n        }, null, map);\n    };\n    Map.prototype.forEach = function (f) {\n        return forEach(f, this);\n    };\n    /* Aggregate\n     ******************************************************************************/\n    /**\n        Get the number of entries in `map`.\n    */\n    var count = hamt.count = function (map) {\n        return map._size;\n    };\n    Map.prototype.count = function () {\n        return count(this);\n    };\n    Object.defineProperty(Map.prototype, \'size\', {\n        get: Map.prototype.count\n    });\n    /* Export\n     ******************************************************************************/\n    if (module.exports) {\n        module.exports = hamt;\n    }\n    else {\n        undefined.hamt = hamt;\n    }\n});\nvar BuiltInMap = /** @class */ (function () {\n    function BuiltInMap(existing) {\n        _defineProperty(this, "_map", void 0);\n        this._map = new Map(existing === null || existing === void 0 ? void 0 : existing.entries());\n    }\n    BuiltInMap.prototype.keys = function () {\n        return this._map.keys();\n    };\n    BuiltInMap.prototype.entries = function () {\n        return this._map.entries();\n    };\n    BuiltInMap.prototype.get = function (k) {\n        return this._map.get(k);\n    };\n    BuiltInMap.prototype.has = function (k) {\n        return this._map.has(k);\n    };\n    BuiltInMap.prototype.set = function (k, v) {\n        this._map.set(k, v);\n        return this;\n    };\n    BuiltInMap.prototype.delete = function (k) {\n        this._map.delete(k);\n        return this;\n    };\n    BuiltInMap.prototype.clone = function () {\n        return persistentMap(this);\n    };\n    BuiltInMap.prototype.toMap = function () {\n        return new Map(this._map);\n    };\n    return BuiltInMap;\n}());\nvar HashArrayMappedTrieMap = /** @class */ (function () {\n    // Because hamt.empty is not a function there is no way to introduce type\n    // parameters on it, so empty is typed as HAMTPlusMap<string, mixed>.\n    // $FlowIssue\n    function HashArrayMappedTrieMap(existing) {\n        _defineProperty(this, "_hamt", hamt_1.empty.beginMutation());\n        if (existing instanceof HashArrayMappedTrieMap) {\n            var h = existing._hamt.endMutation();\n            existing._hamt = h.beginMutation();\n            this._hamt = h.beginMutation();\n        }\n        else if (existing) {\n            for (var _a = 0, _b = existing.entries(); _a < _b.length; _a++) {\n                var _c = _b[_a], k = _c[0], v = _c[1];\n                this._hamt.set(k, v);\n            }\n        }\n    }\n    HashArrayMappedTrieMap.prototype.keys = function () {\n        return this._hamt.keys();\n    };\n    HashArrayMappedTrieMap.prototype.entries = function () {\n        return this._hamt.entries();\n    };\n    HashArrayMappedTrieMap.prototype.get = function (k) {\n        return this._hamt.get(k);\n    };\n    HashArrayMappedTrieMap.prototype.has = function (k) {\n        return this._hamt.has(k);\n    };\n    HashArrayMappedTrieMap.prototype.set = function (k, v) {\n        this._hamt.set(k, v);\n        return this;\n    };\n    HashArrayMappedTrieMap.prototype.delete = function (k) {\n        this._hamt.delete(k);\n        return this;\n    };\n    HashArrayMappedTrieMap.prototype.clone = function () {\n        return persistentMap(this);\n    };\n    HashArrayMappedTrieMap.prototype.toMap = function () {\n        return new Map(this._hamt);\n    };\n    return HashArrayMappedTrieMap;\n}());\nfunction persistentMap(existing) {\n    if (Recoil_gkx_1(\'recoil_hamt_2020\')) {\n        return new HashArrayMappedTrieMap(existing);\n    }\n    else {\n        return new BuiltInMap(existing);\n    }\n}\nvar Recoil_PersistentMap = {\n    persistentMap: persistentMap\n};\nvar Recoil_PersistentMap_1 = Recoil_PersistentMap.persistentMap;\nvar Recoil_PersistentMap$1 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    persistentMap: Recoil_PersistentMap_1\n});\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\n/**\n * Returns a set containing all of the values from the first set that are not\n * present in any of the subsequent sets.\n *\n * Note: this is written procedurally (i.e., without filterSet) for performant\n * use in tight loops.\n */\nfunction differenceSets(set) {\n    var setsWithValuesToRemove = [];\n    for (var _a = 1; _a < arguments.length; _a++) {\n        setsWithValuesToRemove[_a - 1] = arguments[_a];\n    }\n    var ret = new Set();\n    FIRST: for (var _b = 0, set_1 = set; _b < set_1.length; _b++) {\n        var value = set_1[_b];\n        for (var _c = 0, setsWithValuesToRemove_1 = setsWithValuesToRemove; _c < setsWithValuesToRemove_1.length; _c++) {\n            var otherSet = setsWithValuesToRemove_1[_c];\n            if (otherSet.has(value)) {\n                continue FIRST;\n            }\n        }\n        ret.add(value);\n    }\n    return ret;\n}\nvar Recoil_differenceSets = differenceSets;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\n/**\n * Returns a new Map object with the same keys as the original, but with the\n * values replaced with the output of the given callback function.\n */\nfunction mapMap(map, callback) {\n    var result = new Map();\n    map.forEach(function (value, key) {\n        result.set(key, callback(value, key));\n    });\n    return result;\n}\nvar Recoil_mapMap = mapMap;\nfunction graph() {\n    return {\n        nodeDeps: new Map(),\n        nodeToNodeSubscriptions: new Map()\n    };\n}\nfunction cloneGraph(graph) {\n    return {\n        nodeDeps: Recoil_mapMap(graph.nodeDeps, function (s) { return new Set(s); }),\n        nodeToNodeSubscriptions: Recoil_mapMap(graph.nodeToNodeSubscriptions, function (s) { return new Set(s); })\n    };\n} // Note that this overwrites the deps of existing nodes, rather than unioning\n// the new deps with the old deps.\nfunction mergeDependencyMapIntoGraph(deps, graph, // If olderGraph is given then we will not overwrite changes made to the given\n// graph compared with olderGraph:\nolderGraph) {\n    var nodeDeps = graph.nodeDeps, nodeToNodeSubscriptions = graph.nodeToNodeSubscriptions;\n    deps.forEach(function (upstreams, downstream) {\n        var existingUpstreams = nodeDeps.get(downstream);\n        if (existingUpstreams && olderGraph && existingUpstreams !== olderGraph.nodeDeps.get(downstream)) {\n            return;\n        } // Update nodeDeps:\n        nodeDeps.set(downstream, new Set(upstreams)); // Add new deps to nodeToNodeSubscriptions:\n        var addedUpstreams = existingUpstreams == null ? upstreams : Recoil_differenceSets(upstreams, existingUpstreams);\n        addedUpstreams.forEach(function (upstream) {\n            if (!nodeToNodeSubscriptions.has(upstream)) {\n                nodeToNodeSubscriptions.set(upstream, new Set());\n            }\n            var existing = Recoil_nullthrows(nodeToNodeSubscriptions.get(upstream));\n            existing.add(downstream);\n        }); // Remove removed deps from nodeToNodeSubscriptions:\n        if (existingUpstreams) {\n            var removedUpstreams = Recoil_differenceSets(existingUpstreams, upstreams);\n            removedUpstreams.forEach(function (upstream) {\n                if (!nodeToNodeSubscriptions.has(upstream)) {\n                    return;\n                }\n                var existing = Recoil_nullthrows(nodeToNodeSubscriptions.get(upstream));\n                existing.delete(downstream);\n                if (existing.size === 0) {\n                    nodeToNodeSubscriptions.delete(upstream);\n                }\n            });\n        }\n    });\n}\nfunction saveDependencyMapToStore(dependencyMap, store, version) {\n    var _storeState$nextTree, _storeState$previousT, _storeState$previousT2, _storeState$previousT3;\n    var storeState = store.getState();\n    if (!(version === storeState.currentTree.version || version === ((_storeState$nextTree = storeState.nextTree) === null || _storeState$nextTree === void 0 ? void 0 : _storeState$nextTree.version) || version === ((_storeState$previousT = storeState.previousTree) === null || _storeState$previousT === void 0 ? void 0 : _storeState$previousT.version))) {\n        Recoil_recoverableViolation(\'Tried to save dependencies to a discarded tree\');\n    } // Merge the dependencies discovered into the store\'s dependency map\n    // for the version that was read:\n    var graph = store.getGraph(version);\n    mergeDependencyMapIntoGraph(dependencyMap, graph); // If this version is not the latest version, also write these dependencies\n    // into later versions if they don\'t already have their own:\n    if (version === ((_storeState$previousT2 = storeState.previousTree) === null || _storeState$previousT2 === void 0 ? void 0 : _storeState$previousT2.version)) {\n        var currentGraph = store.getGraph(storeState.currentTree.version);\n        mergeDependencyMapIntoGraph(dependencyMap, currentGraph, graph);\n    }\n    if (version === ((_storeState$previousT3 = storeState.previousTree) === null || _storeState$previousT3 === void 0 ? void 0 : _storeState$previousT3.version) || version === storeState.currentTree.version) {\n        var _storeState$nextTree2;\n        var nextVersion = (_storeState$nextTree2 = storeState.nextTree) === null || _storeState$nextTree2 === void 0 ? void 0 : _storeState$nextTree2.version;\n        if (nextVersion !== undefined) {\n            var nextGraph = store.getGraph(nextVersion);\n            mergeDependencyMapIntoGraph(dependencyMap, nextGraph, graph);\n        }\n    }\n}\nfunction mergeDepsIntoDependencyMap(from, into) {\n    from.forEach(function (upstreamDeps, downstreamNode) {\n        if (!into.has(downstreamNode)) {\n            into.set(downstreamNode, new Set());\n        }\n        var deps = Recoil_nullthrows(into.get(downstreamNode));\n        upstreamDeps.forEach(function (dep) { return deps.add(dep); });\n    });\n}\nfunction addToDependencyMap(downstream, upstream, dependencyMap) {\n    if (!dependencyMap.has(downstream)) {\n        dependencyMap.set(downstream, new Set());\n    }\n    Recoil_nullthrows(dependencyMap.get(downstream)).add(upstream);\n}\nvar Recoil_Graph = {\n    addToDependencyMap: addToDependencyMap,\n    cloneGraph: cloneGraph,\n    graph: graph,\n    mergeDepsIntoDependencyMap: mergeDepsIntoDependencyMap,\n    saveDependencyMapToStore: saveDependencyMapToStore\n};\nvar persistentMap$1 = Recoil_PersistentMap$1.persistentMap;\nvar graph$1 = Recoil_Graph.graph;\nvar nextTreeStateVersion = 0;\nvar getNextTreeStateVersion = function () { return nextTreeStateVersion++; };\nfunction makeEmptyTreeState() {\n    var version = getNextTreeStateVersion();\n    return {\n        version: version,\n        stateID: version,\n        transactionMetadata: {},\n        dirtyAtoms: new Set(),\n        atomValues: persistentMap$1(),\n        nonvalidatedAtoms: persistentMap$1()\n    };\n}\nfunction makeEmptyStoreState() {\n    var currentTree = makeEmptyTreeState();\n    return {\n        currentTree: currentTree,\n        nextTree: null,\n        previousTree: null,\n        commitDepth: 0,\n        knownAtoms: new Set(),\n        knownSelectors: new Set(),\n        transactionSubscriptions: new Map(),\n        nodeTransactionSubscriptions: new Map(),\n        nodeToComponentSubscriptions: new Map(),\n        queuedComponentCallbacks_DEPRECATED: [],\n        suspendedComponentResolvers: new Set(),\n        graphsByVersion: new Map().set(currentTree.version, graph$1()),\n        versionsUsedByComponent: new Map(),\n        retention: {\n            referenceCounts: new Map(),\n            nodesRetainedByZone: new Map(),\n            retainablesToCheckForRelease: new Set()\n        },\n        nodeCleanupFunctions: new Map()\n    };\n}\nvar Recoil_State = {\n    makeEmptyTreeState: makeEmptyTreeState,\n    makeEmptyStoreState: makeEmptyStoreState,\n    getNextTreeStateVersion: getNextTreeStateVersion\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nfunction unionSets() {\n    var sets = [];\n    for (var _a = 0; _a < arguments.length; _a++) {\n        sets[_a] = arguments[_a];\n    }\n    var result = new Set();\n    for (var _b = 0, sets_1 = sets; _b < sets_1.length; _b++) {\n        var set = sets_1[_b];\n        for (var _c = 0, set_2 = set; _c < set_2.length; _c++) {\n            var value = set_2[_c];\n            result.add(value);\n        }\n    }\n    return result;\n}\nvar Recoil_unionSets = unionSets;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Utilities for working with built-in Maps and Sets without mutating them.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nfunction setByAddingToSet(set, v) {\n    var next = new Set(set);\n    next.add(v);\n    return next;\n}\nfunction setByDeletingFromSet(set, v) {\n    var next = new Set(set);\n    next.delete(v);\n    return next;\n}\nfunction mapBySettingInMap(map, k, v) {\n    var next = new Map(map);\n    next.set(k, v);\n    return next;\n}\nfunction mapByUpdatingInMap(map, k, updater) {\n    var next = new Map(map);\n    next.set(k, updater(next.get(k)));\n    return next;\n}\nfunction mapByDeletingFromMap(map, k) {\n    var next = new Map(map);\n    next.delete(k);\n    return next;\n}\nfunction mapByDeletingMultipleFromMap(map, ks) {\n    var next = new Map(map);\n    ks.forEach(function (k) { return next.delete(k); });\n    return next;\n}\nvar Recoil_CopyOnWrite = {\n    setByAddingToSet: setByAddingToSet,\n    setByDeletingFromSet: setByDeletingFromSet,\n    mapBySettingInMap: mapBySettingInMap,\n    mapByUpdatingInMap: mapByUpdatingInMap,\n    mapByDeletingFromMap: mapByDeletingFromMap,\n    mapByDeletingMultipleFromMap: mapByDeletingMultipleFromMap\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\n/**\n * Creates a new iterable whose output is generated by passing the input\n * iterable\'s values through the filter function.\n */\nfunction filterIterable(iterable, predicate) {\n    var index, _a, iterable_2, value;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                index = 0;\n                _a = 0, iterable_2 = iterable;\n                _b.label = 1;\n            case 1:\n                if (!(_a < iterable_2.length)) return [3 /*break*/, 4];\n                value = iterable_2[_a];\n                if (!predicate(value, index++)) return [3 /*break*/, 3];\n                return [4 /*yield*/, value];\n            case 2:\n                _b.sent();\n                _b.label = 3;\n            case 3:\n                _a++;\n                return [3 /*break*/, 1];\n            case 4: return [2 /*return*/];\n        }\n    });\n}\nvar Recoil_filterIterable = filterIterable;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nvar RetentionZone = /** @class */ (function () {\n    function RetentionZone() {\n    }\n    return RetentionZone;\n}());\nfunction retentionZone() {\n    return new RetentionZone();\n}\nvar Recoil_RetentionZone = {\n    RetentionZone: RetentionZone,\n    retentionZone: retentionZone\n};\nvar setByAddingToSet$1 = Recoil_CopyOnWrite.setByAddingToSet;\nvar getNode$1 = Recoil_Node.getNode, getNodeMaybe$1 = Recoil_Node.getNodeMaybe, recoilValuesForKeys$1 = Recoil_Node.recoilValuesForKeys;\nvar RetentionZone$1 = Recoil_RetentionZone.RetentionZone; // flowlint-next-line unclear-type:off\nvar emptySet = Object.freeze(new Set());\nvar ReadOnlyRecoilValueError = /** @class */ (function (_super) {\n    __extends(ReadOnlyRecoilValueError, _super);\n    function ReadOnlyRecoilValueError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ReadOnlyRecoilValueError;\n}(Error));\nfunction initializeRetentionForNode(store, nodeKey, retainedBy) {\n    if (!Recoil_gkx_1(\'recoil_memory_managament_2020\')) {\n        return function () { return undefined; };\n    }\n    var nodesRetainedByZone = store.getState().retention.nodesRetainedByZone;\n    function addToZone(zone) {\n        var set = nodesRetainedByZone.get(zone);\n        if (!set) {\n            nodesRetainedByZone.set(zone, set = new Set());\n        }\n        set.add(nodeKey);\n    }\n    if (retainedBy instanceof RetentionZone$1) {\n        addToZone(retainedBy);\n    }\n    else if (Array.isArray(retainedBy)) {\n        for (var _a = 0, retainedBy_1 = retainedBy; _a < retainedBy_1.length; _a++) {\n            var zone = retainedBy_1[_a];\n            addToZone(zone);\n        }\n    }\n    return function () {\n        if (!Recoil_gkx_1(\'recoil_memory_managament_2020\')) {\n            return;\n        }\n        var nodesRetainedByZone = store.getState().retention.nodesRetainedByZone;\n        function deleteFromZone(zone) {\n            var set = nodesRetainedByZone.get(zone);\n            if (set) {\n                set.delete(nodeKey);\n            }\n            if (set && set.size === 0) {\n                nodesRetainedByZone.delete(zone);\n            }\n        }\n        if (retainedBy instanceof RetentionZone$1) {\n            deleteFromZone(retainedBy);\n        }\n        else if (Array.isArray(retainedBy)) {\n            for (var _a = 0, retainedBy_2 = retainedBy; _a < retainedBy_2.length; _a++) {\n                var zone = retainedBy_2[_a];\n                deleteFromZone(zone);\n            }\n        }\n    };\n}\nfunction initializeNodeIfNewToStore(store, treeState, key, trigger) {\n    var storeState = store.getState();\n    if (storeState.nodeCleanupFunctions.has(key)) {\n        return;\n    }\n    var config = getNode$1(key);\n    var retentionCleanup = initializeRetentionForNode(store, key, config.retainedBy);\n    var nodeCleanup = config.init(store, treeState, trigger);\n    storeState.nodeCleanupFunctions.set(key, function () {\n        nodeCleanup();\n        retentionCleanup();\n    });\n}\nfunction cleanUpNode(store, key) {\n    var _state$nodeCleanupFun;\n    var state = store.getState();\n    (_state$nodeCleanupFun = state.nodeCleanupFunctions.get(key)) === null || _state$nodeCleanupFun === void 0 ? void 0 : _state$nodeCleanupFun();\n    state.nodeCleanupFunctions.delete(key);\n} // Get the current value loadable of a node and update the state.\n// Update dependencies and subscriptions for selectors.\n// Update saved value validation for atoms.\nfunction getNodeLoadable(store, state, key) {\n    initializeNodeIfNewToStore(store, state, key, \'get\');\n    return getNode$1(key).get(store, state);\n} // Peek at the current value loadable for a node without any evaluation or state change\nfunction peekNodeLoadable(store, state, key) {\n    return getNode$1(key).peek(store, state);\n} // Write value directly to state bypassing the Node interface as the node\n// definitions may not have been loaded yet when processing the initial snapshot.\nfunction setUnvalidatedAtomValue_DEPRECATED(state, key, newValue) {\n    var _node$invalidate;\n    var node = getNodeMaybe$1(key);\n    node === null || node === void 0 ? void 0 : (_node$invalidate = node.invalidate) === null || _node$invalidate === void 0 ? void 0 : _node$invalidate.call(node, state);\n    return __assign(__assign({}, state), { atomValues: state.atomValues.clone().delete(key), nonvalidatedAtoms: state.nonvalidatedAtoms.clone().set(key, newValue), dirtyAtoms: setByAddingToSet$1(state.dirtyAtoms, key) });\n} // Return the discovered dependencies and values to be written by setting\n// a node value. (Multiple values may be written due to selectors getting to\n// set upstreams; deps may be discovered because of reads in updater functions.)\nfunction setNodeValue(store, state, key, newValue) {\n    var node = getNode$1(key);\n    if (node.set == null) {\n        throw new ReadOnlyRecoilValueError("Attempt to set read-only RecoilValue: " + key);\n    }\n    var set = node.set; // so flow doesn\'t lose the above refinement.\n    initializeNodeIfNewToStore(store, state, key, \'set\');\n    return set(store, state, newValue);\n}\nfunction peekNodeInfo(store, state, key) {\n    var _graph$nodeDeps$get, _storeState$nodeToCom, _storeState$nodeToCom2;\n    var storeState = store.getState();\n    var graph = store.getGraph(state.version);\n    var type = storeState.knownAtoms.has(key) ? \'atom\' : storeState.knownSelectors.has(key) ? \'selector\' : undefined;\n    var downstreamNodes = Recoil_filterIterable(getDownstreamNodes(store, state, new Set([key])), function (nodeKey) { return nodeKey !== key; });\n    return {\n        loadable: peekNodeLoadable(store, state, key),\n        isActive: storeState.knownAtoms.has(key) || storeState.knownSelectors.has(key),\n        isSet: type === \'selector\' ? false : state.atomValues.has(key),\n        isModified: state.dirtyAtoms.has(key),\n        type: type,\n        // Report current dependencies.  If the node hasn\'t been evaluated, then\n        // dependencies may be missing based on the current state.\n        deps: recoilValuesForKeys$1((_graph$nodeDeps$get = graph.nodeDeps.get(key)) !== null && _graph$nodeDeps$get !== void 0 ? _graph$nodeDeps$get : []),\n        // Reportsall "current" subscribers.  Evaluating other nodes or\n        // previous in-progress async evaluations may introduce new subscribers.\n        subscribers: {\n            nodes: recoilValuesForKeys$1(downstreamNodes),\n            components: Recoil_mapIterable((_storeState$nodeToCom = (_storeState$nodeToCom2 = storeState.nodeToComponentSubscriptions.get(key)) === null || _storeState$nodeToCom2 === void 0 ? void 0 : _storeState$nodeToCom2.values()) !== null && _storeState$nodeToCom !== void 0 ? _storeState$nodeToCom : [], function (_a) {\n                var name = _a[0];\n                return ({\n                    name: name\n                });\n            })\n        }\n    };\n} // Find all of the recursively dependent nodes\nfunction getDownstreamNodes(store, state, keys) {\n    var visitedNodes = new Set();\n    var visitingNodes = Array.from(keys);\n    var graph = store.getGraph(state.version);\n    for (var key = visitingNodes.pop(); key; key = visitingNodes.pop()) {\n        var _graph$nodeToNodeSubs;\n        visitedNodes.add(key);\n        var subscribedNodes = (_graph$nodeToNodeSubs = graph.nodeToNodeSubscriptions.get(key)) !== null && _graph$nodeToNodeSubs !== void 0 ? _graph$nodeToNodeSubs : emptySet;\n        for (var _a = 0, subscribedNodes_1 = subscribedNodes; _a < subscribedNodes_1.length; _a++) {\n            var downstreamNode = subscribedNodes_1[_a];\n            if (!visitedNodes.has(downstreamNode)) {\n                visitingNodes.push(downstreamNode);\n            }\n        }\n    }\n    return visitedNodes;\n}\nvar Recoil_FunctionalCore = {\n    getNodeLoadable: getNodeLoadable,\n    peekNodeLoadable: peekNodeLoadable,\n    setNodeValue: setNodeValue,\n    cleanUpNode: cleanUpNode,\n    setUnvalidatedAtomValue_DEPRECATED: setUnvalidatedAtomValue_DEPRECATED,\n    peekNodeInfo: peekNodeInfo,\n    getDownstreamNodes: getDownstreamNodes,\n    initializeNodeIfNewToStore: initializeNodeIfNewToStore\n};\nvar getDownstreamNodes$1 = Recoil_FunctionalCore.getDownstreamNodes, getNodeLoadable$1 = Recoil_FunctionalCore.getNodeLoadable, setNodeValue$1 = Recoil_FunctionalCore.setNodeValue;\nvar getNodeMaybe$2 = Recoil_Node.getNodeMaybe;\nvar DefaultValue$1 = Recoil_Node.DefaultValue, RecoilValueNotReady$1 = Recoil_Node.RecoilValueNotReady;\nvar AbstractRecoilValue$1 = Recoil_RecoilValue$1.AbstractRecoilValue, RecoilState$1 = Recoil_RecoilValue$1.RecoilState, RecoilValueReadOnly$1 = Recoil_RecoilValue$1.RecoilValueReadOnly, isRecoilValue$1 = Recoil_RecoilValue$1.isRecoilValue;\nfunction getRecoilValueAsLoadable(store, _a, treeState) {\n    var key = _a.key;\n    if (treeState === void 0) { treeState = store.getState().currentTree; }\n    var _storeState$nextTree, _storeState$previousT;\n    // Reading from an older tree can cause bugs because the dependencies that we\n    // discover during the read are lost.\n    var storeState = store.getState();\n    if (!(treeState.version === storeState.currentTree.version || treeState.version === ((_storeState$nextTree = storeState.nextTree) === null || _storeState$nextTree === void 0 ? void 0 : _storeState$nextTree.version) || treeState.version === ((_storeState$previousT = storeState.previousTree) === null || _storeState$previousT === void 0 ? void 0 : _storeState$previousT.version))) {\n        Recoil_recoverableViolation(\'Tried to read from a discarded tree\');\n    }\n    var loadable = getNodeLoadable$1(store, treeState, key);\n    if (loadable.state === \'loading\') {\n        loadable.contents.catch(function () {\n            /**\n             * HACK: intercept thrown error here to prevent an uncaught promise exception. Ideally this would happen closer to selector\n             * execution (perhaps introducing a new ERROR class to be resolved by async selectors that are in an error state)\n             */\n            return;\n        });\n    }\n    return loadable;\n}\nfunction applyAtomValueWrites(atomValues, writes) {\n    var result = atomValues.clone();\n    writes.forEach(function (v, k) {\n        if (v.state === \'hasValue\' && v.contents instanceof DefaultValue$1) {\n            result.delete(k);\n        }\n        else {\n            result.set(k, v);\n        }\n    });\n    return result;\n}\nfunction valueFromValueOrUpdater(store, state, _a, valueOrUpdater) {\n    var key = _a.key;\n    if (typeof valueOrUpdater === \'function\') {\n        // Updater form: pass in the current value. Throw if the current value\n        // is unavailable (namely when updating an async selector that\'s\n        // pending or errored):\n        var current = getNodeLoadable$1(store, state, key);\n        if (current.state === \'loading\') {\n            throw new RecoilValueNotReady$1(key);\n        }\n        else if (current.state === \'hasError\') {\n            throw current.contents;\n        } // T itself may be a function, so our refinement is not sufficient:\n        return valueOrUpdater(current.contents); // flowlint-line unclear-type:off\n    }\n    else {\n        return valueOrUpdater;\n    }\n}\nfunction applyAction(store, state, action) {\n    if (action.type === \'set\') {\n        var recoilValue = action.recoilValue, valueOrUpdater = action.valueOrUpdater;\n        var newValue = valueFromValueOrUpdater(store, state, recoilValue, valueOrUpdater);\n        var writes = setNodeValue$1(store, state, recoilValue.key, newValue);\n        for (var _a = 0, _b = writes.entries(); _a < _b.length; _a++) {\n            var _c = _b[_a], key = _c[0], loadable = _c[1];\n            writeLoadableToTreeState(state, key, loadable);\n        }\n    }\n    else if (action.type === \'setLoadable\') {\n        var key = action.recoilValue.key, loadable = action.loadable;\n        writeLoadableToTreeState(state, key, loadable);\n    }\n    else if (action.type === \'markModified\') {\n        var key = action.recoilValue.key;\n        state.dirtyAtoms.add(key);\n    }\n    else if (action.type === \'setUnvalidated\') {\n        var _node$invalidate;\n        // Write value directly to state bypassing the Node interface as the node\n        // definitions may not have been loaded yet when processing the initial snapshot.\n        var key = action.recoilValue.key, unvalidatedValue = action.unvalidatedValue;\n        var node = getNodeMaybe$2(key);\n        node === null || node === void 0 ? void 0 : (_node$invalidate = node.invalidate) === null || _node$invalidate === void 0 ? void 0 : _node$invalidate.call(node, state);\n        state.atomValues.delete(key);\n        state.nonvalidatedAtoms.set(key, unvalidatedValue);\n        state.dirtyAtoms.add(key);\n    }\n    else {\n        Recoil_recoverableViolation("Unknown action " + action.type);\n    }\n}\nfunction writeLoadableToTreeState(state, key, loadable) {\n    if (loadable.state === \'hasValue\' && loadable.contents instanceof DefaultValue$1) {\n        state.atomValues.delete(key);\n    }\n    else {\n        state.atomValues.set(key, loadable);\n    }\n    state.dirtyAtoms.add(key);\n    state.nonvalidatedAtoms.delete(key);\n}\nfunction applyActionsToStore(store, actions) {\n    store.replaceState(function (state) {\n        var newState = copyTreeState(state);\n        for (var _a = 0, actions_1 = actions; _a < actions_1.length; _a++) {\n            var action = actions_1[_a];\n            applyAction(store, newState, action);\n        }\n        invalidateDownstreams(store, newState);\n        return newState;\n    });\n}\nfunction queueOrPerformStateUpdate(store, action) {\n    if (batchStack.length) {\n        var actionsByStore = batchStack[batchStack.length - 1];\n        var actions = actionsByStore.get(store);\n        if (!actions) {\n            actionsByStore.set(store, actions = []);\n        }\n        actions.push(action);\n    }\n    else {\n        applyActionsToStore(store, [action]);\n    }\n}\nvar batchStack = [];\nfunction batchStart() {\n    var actionsByStore = new Map();\n    batchStack.push(actionsByStore);\n    return function () {\n        for (var _a = 0, actionsByStore_1 = actionsByStore; _a < actionsByStore_1.length; _a++) {\n            var _b = actionsByStore_1[_a], store = _b[0], actions = _b[1];\n            applyActionsToStore(store, actions);\n        }\n        var popped = batchStack.pop();\n        if (popped !== actionsByStore) {\n            Recoil_recoverableViolation(\'Incorrect order of batch popping\');\n        }\n    };\n}\nfunction copyTreeState(state) {\n    return __assign(__assign({}, state), { atomValues: state.atomValues.clone(), nonvalidatedAtoms: state.nonvalidatedAtoms.clone(), dirtyAtoms: new Set(state.dirtyAtoms) });\n}\nfunction invalidateDownstreams(store, state) {\n    // Inform any nodes that were changed or downstream of changes so that they\n    // can clear out any caches as needed due to the update:\n    var downstreams = getDownstreamNodes$1(store, state, state.dirtyAtoms);\n    for (var _a = 0, downstreams_1 = downstreams; _a < downstreams_1.length; _a++) {\n        var key = downstreams_1[_a];\n        var _getNodeMaybe, _getNodeMaybe$invalid;\n        (_getNodeMaybe = getNodeMaybe$2(key)) === null || _getNodeMaybe === void 0 ? void 0 : (_getNodeMaybe$invalid = _getNodeMaybe.invalidate) === null || _getNodeMaybe$invalid === void 0 ? void 0 : _getNodeMaybe$invalid.call(_getNodeMaybe, state);\n    }\n}\nfunction setRecoilValue(store, recoilValue, valueOrUpdater) {\n    queueOrPerformStateUpdate(store, {\n        type: \'set\',\n        recoilValue: recoilValue,\n        valueOrUpdater: valueOrUpdater\n    });\n}\nfunction setRecoilValueLoadable(store, recoilValue, loadable) {\n    if (loadable instanceof DefaultValue$1) {\n        return setRecoilValue(store, recoilValue, loadable);\n    }\n    queueOrPerformStateUpdate(store, {\n        type: \'setLoadable\',\n        recoilValue: recoilValue,\n        loadable: loadable\n    });\n}\nfunction markRecoilValueModified(store, recoilValue) {\n    queueOrPerformStateUpdate(store, {\n        type: \'markModified\',\n        recoilValue: recoilValue\n    });\n}\nfunction setUnvalidatedRecoilValue(store, recoilValue, unvalidatedValue) {\n    queueOrPerformStateUpdate(store, {\n        type: \'setUnvalidated\',\n        recoilValue: recoilValue,\n        unvalidatedValue: unvalidatedValue\n    });\n}\nvar subscriptionID = 0;\nfunction subscribeToRecoilValue(store, _a, callback, componentDebugName) {\n    var key = _a.key;\n    if (componentDebugName === void 0) { componentDebugName = null; }\n    var subID = subscriptionID++;\n    var storeState = store.getState();\n    if (!storeState.nodeToComponentSubscriptions.has(key)) {\n        storeState.nodeToComponentSubscriptions.set(key, new Map());\n    }\n    Recoil_nullthrows(storeState.nodeToComponentSubscriptions.get(key)).set(subID, [componentDebugName !== null && componentDebugName !== void 0 ? componentDebugName : \'<not captured>\', callback]); // Handle the case that, during the same tick that we are subscribing, an atom\n    // has been updated by some effect handler. Otherwise we will miss the update.\n    if (Recoil_gkx_1(\'recoil_early_rendering_2021\')) {\n        var nextTree = store.getState().nextTree;\n        if (nextTree && nextTree.dirtyAtoms.has(key)) {\n            callback(nextTree);\n        }\n    }\n    return {\n        release: function () {\n            var storeState = store.getState();\n            var subs = storeState.nodeToComponentSubscriptions.get(key);\n            if (subs === undefined || !subs.has(subID)) {\n                Recoil_recoverableViolation("Subscription missing at release time for atom " + key + ". This is a bug in Recoil.");\n                return;\n            }\n            subs.delete(subID);\n            if (subs.size === 0) {\n                storeState.nodeToComponentSubscriptions.delete(key);\n            }\n        }\n    };\n}\nvar Recoil_RecoilValueInterface = {\n    RecoilValueReadOnly: RecoilValueReadOnly$1,\n    AbstractRecoilValue: AbstractRecoilValue$1,\n    RecoilState: RecoilState$1,\n    getRecoilValueAsLoadable: getRecoilValueAsLoadable,\n    setRecoilValue: setRecoilValue,\n    setRecoilValueLoadable: setRecoilValueLoadable,\n    markRecoilValueModified: markRecoilValueModified,\n    setUnvalidatedRecoilValue: setUnvalidatedRecoilValue,\n    subscribeToRecoilValue: subscribeToRecoilValue,\n    isRecoilValue: isRecoilValue$1,\n    applyAtomValueWrites: applyAtomValueWrites,\n    // TODO Remove export when deprecating initialStoreState_DEPRECATED in RecoilRoot\n    batchStart: batchStart,\n    writeLoadableToTreeState: writeLoadableToTreeState,\n    invalidateDownstreams: invalidateDownstreams,\n    copyTreeState: copyTreeState,\n    invalidateDownstreams_FOR_TESTING: invalidateDownstreams\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\n/**\n * The someSet() method tests whether some elements in the given Set pass the\n * test implemented by the provided function.\n */\nfunction someSet(set, callback, context) {\n    var iterator = set.entries();\n    var current = iterator.next();\n    while (!current.done) {\n        var entry = current.value;\n        if (callback.call(context, entry[1], entry[0], set)) {\n            return true;\n        }\n        current = iterator.next();\n    }\n    return false;\n}\nvar Recoil_someSet = someSet;\nvar cleanUpNode$1 = Recoil_FunctionalCore.cleanUpNode;\nvar deleteNodeConfigIfPossible$1 = Recoil_Node.deleteNodeConfigIfPossible, getNode$2 = Recoil_Node.getNode;\nvar RetentionZone$2 = Recoil_RetentionZone.RetentionZone; // Components that aren\'t mounted after suspending for this long will be assumed\n// to be discarded and their resources released.\nvar SUSPENSE_TIMEOUT_MS = 120000;\nvar emptySet$1 = new Set();\nfunction releaseRetainablesNowOnCurrentTree(store, retainables) {\n    var storeState = store.getState();\n    var treeState = storeState.currentTree;\n    if (storeState.nextTree) {\n        Recoil_recoverableViolation(\'releaseNodesNowOnCurrentTree should only be called at the end of a batch\');\n        return; // leak memory rather than erase something that\'s about to be used.\n    }\n    var nodes = new Set();\n    for (var _a = 0, retainables_1 = retainables; _a < retainables_1.length; _a++) {\n        var r = retainables_1[_a];\n        if (r instanceof RetentionZone$2) {\n            for (var _b = 0, _c = nodesRetainedByZone(storeState, r); _b < _c.length; _b++) {\n                var n = _c[_b];\n                nodes.add(n);\n            }\n        }\n        else {\n            nodes.add(r);\n        }\n    }\n    var releasableNodes = findReleasableNodes(store, nodes);\n    for (var _d = 0, releasableNodes_1 = releasableNodes; _d < releasableNodes_1.length; _d++) {\n        var node = releasableNodes_1[_d];\n        releaseNode(store, treeState, node);\n    }\n}\nfunction findReleasableNodes(store, searchFromNodes) {\n    var storeState = store.getState();\n    var treeState = storeState.currentTree;\n    var graph = store.getGraph(treeState.version);\n    var releasableNodes = new Set(); // mutated to collect answer\n    var nonReleasableNodes = new Set();\n    findReleasableNodesInner(searchFromNodes);\n    return releasableNodes;\n    function findReleasableNodesInner(searchFromNodes) {\n        var releasableNodesFoundThisIteration = new Set();\n        var downstreams = getDownstreamNodesInTopologicalOrder(store, treeState, searchFromNodes, releasableNodes, // don\'t descend into these\n        nonReleasableNodes // don\'t descend into these\n        ); // Find which of the downstream nodes are releasable and which are not:\n        for (var _a = 0, downstreams_2 = downstreams; _a < downstreams_2.length; _a++) {\n            var node = downstreams_2[_a];\n            var _storeState$retention;\n            // Not releasable if configured to be retained forever:\n            if (getNode$2(node).retainedBy === \'recoilRoot\') {\n                nonReleasableNodes.add(node);\n                continue;\n            } // Not releasable if retained directly by a component:\n            if (((_storeState$retention = storeState.retention.referenceCounts.get(node)) !== null && _storeState$retention !== void 0 ? _storeState$retention : 0) > 0) {\n                nonReleasableNodes.add(node);\n                continue;\n            } // Not releasable if retained by a zone:\n            if (zonesThatCouldRetainNode(node).some(function (z) { return storeState.retention.referenceCounts.get(z); })) {\n                nonReleasableNodes.add(node);\n                continue;\n            } // Not releasable if it has a non-releasable child (which will already be in\n            // nonReleasableNodes because we are going in topological order):\n            var nodeChildren = graph.nodeToNodeSubscriptions.get(node);\n            if (nodeChildren && Recoil_someSet(nodeChildren, function (child) { return nonReleasableNodes.has(child); })) {\n                nonReleasableNodes.add(node);\n                continue;\n            }\n            releasableNodes.add(node);\n            releasableNodesFoundThisIteration.add(node);\n        } // If we found any releasable nodes, we need to walk UP from those nodes to\n        // find whether their parents can now be released as well:\n        var parents = new Set();\n        for (var _b = 0, releasableNodesFoundThisIteration_1 = releasableNodesFoundThisIteration; _b < releasableNodesFoundThisIteration_1.length; _b++) {\n            var node = releasableNodesFoundThisIteration_1[_b];\n            for (var _c = 0, _d = (_graph$nodeDeps$get = graph.nodeDeps.get(node)) !== null && _graph$nodeDeps$get !== void 0 ? _graph$nodeDeps$get : emptySet$1; _c < _d.length; _c++) {\n                var parent_1 = _d[_c];\n                var _graph$nodeDeps$get;\n                if (!releasableNodes.has(parent_1)) {\n                    parents.add(parent_1);\n                }\n            }\n        }\n        if (parents.size) {\n            findReleasableNodesInner(parents);\n        }\n    }\n} // Children before parents\nfunction getDownstreamNodesInTopologicalOrder(store, treeState, nodes, // Mutable set is destroyed in place\ndoNotDescendInto1, doNotDescendInto2) {\n    var graph = store.getGraph(treeState.version);\n    var answer = [];\n    var visited = new Set();\n    while (nodes.size > 0) {\n        visit(Recoil_nullthrows(nodes.values().next().value));\n    }\n    return answer;\n    function visit(node) {\n        if (doNotDescendInto1.has(node) || doNotDescendInto2.has(node)) {\n            nodes.delete(node);\n            return;\n        }\n        if (visited.has(node)) {\n            return;\n        }\n        var children = graph.nodeToNodeSubscriptions.get(node);\n        if (children) {\n            for (var _a = 0, children_1 = children; _a < children_1.length; _a++) {\n                var child = children_1[_a];\n                visit(child);\n            }\n        }\n        visited.add(node);\n        nodes.delete(node);\n        answer.push(node);\n    }\n}\nfunction releaseNode(store, treeState, node) {\n    if (!Recoil_gkx_1(\'recoil_memory_managament_2020\')) {\n        return;\n    } // Atom effects, in-closure caches, etc.:\n    cleanUpNode$1(store, node); // Delete from store state:\n    var storeState = store.getState();\n    storeState.knownAtoms.delete(node);\n    storeState.knownSelectors.delete(node);\n    storeState.nodeTransactionSubscriptions.delete(node);\n    storeState.retention.referenceCounts.delete(node);\n    var zones = zonesThatCouldRetainNode(node);\n    for (var _a = 0, zones_1 = zones; _a < zones_1.length; _a++) {\n        var zone = zones_1[_a];\n        var _storeState$retention2;\n        (_storeState$retention2 = storeState.retention.nodesRetainedByZone.get(zone)) === null || _storeState$retention2 === void 0 ? void 0 : _storeState$retention2.delete(node);\n    } // Note that we DO NOT delete from nodeToComponentSubscriptions because this\n    // already happens when the last component that was retaining the node unmounts,\n    // and this could happen either before or after that.\n    // Delete from TreeState and dep graph:\n    treeState.atomValues.delete(node);\n    treeState.dirtyAtoms.delete(node);\n    treeState.nonvalidatedAtoms.delete(node);\n    var graph = storeState.graphsByVersion.get(treeState.version);\n    if (graph) {\n        var deps = graph.nodeDeps.get(node);\n        if (deps !== undefined) {\n            graph.nodeDeps.delete(node);\n            for (var _b = 0, deps_1 = deps; _b < deps_1.length; _b++) {\n                var dep = deps_1[_b];\n                var _graph$nodeToNodeSubs;\n                (_graph$nodeToNodeSubs = graph.nodeToNodeSubscriptions.get(dep)) === null || _graph$nodeToNodeSubs === void 0 ? void 0 : _graph$nodeToNodeSubs.delete(node);\n            }\n        } // No need to delete sub\'s deps as there should be no subs at this point.\n        // But an invariant would require deleting nodes in topological order.\n        graph.nodeToNodeSubscriptions.delete(node);\n    } // Node config (for family members only as their configs can be recreated, and\n    // only if they are not retained within any other Stores):\n    deleteNodeConfigIfPossible$1(node);\n}\nfunction nodesRetainedByZone(storeState, zone) {\n    var _storeState$retention3;\n    return (_storeState$retention3 = storeState.retention.nodesRetainedByZone.get(zone)) !== null && _storeState$retention3 !== void 0 ? _storeState$retention3 : emptySet$1;\n}\nfunction zonesThatCouldRetainNode(node) {\n    var retainedBy = getNode$2(node).retainedBy;\n    if (retainedBy === undefined || retainedBy === \'components\' || retainedBy === \'recoilRoot\') {\n        return [];\n    }\n    else if (retainedBy instanceof RetentionZone$2) {\n        return [retainedBy];\n    }\n    else {\n        return retainedBy; // it\'s an array of zones\n    }\n}\nfunction scheduleOrPerformPossibleReleaseOfRetainable(store, retainable) {\n    var state = store.getState();\n    if (state.nextTree) {\n        state.retention.retainablesToCheckForRelease.add(retainable);\n    }\n    else {\n        releaseRetainablesNowOnCurrentTree(store, new Set([retainable]));\n    }\n}\nfunction updateRetainCount(store, retainable, delta) {\n    var _map$get;\n    if (!Recoil_gkx_1(\'recoil_memory_managament_2020\')) {\n        return;\n    }\n    var map = store.getState().retention.referenceCounts;\n    var newCount = ((_map$get = map.get(retainable)) !== null && _map$get !== void 0 ? _map$get : 0) + delta;\n    if (newCount === 0) {\n        updateRetainCountToZero(store, retainable);\n    }\n    else {\n        map.set(retainable, newCount);\n    }\n}\nfunction updateRetainCountToZero(store, retainable) {\n    if (!Recoil_gkx_1(\'recoil_memory_managament_2020\')) {\n        return;\n    }\n    var map = store.getState().retention.referenceCounts;\n    map.delete(retainable);\n    scheduleOrPerformPossibleReleaseOfRetainable(store, retainable);\n}\nfunction releaseScheduledRetainablesNow(store) {\n    if (!Recoil_gkx_1(\'recoil_memory_managament_2020\')) {\n        return;\n    }\n    var state = store.getState();\n    releaseRetainablesNowOnCurrentTree(store, state.retention.retainablesToCheckForRelease);\n    state.retention.retainablesToCheckForRelease.clear();\n}\nfunction retainedByOptionWithDefault(r) {\n    // The default will change from \'recoilRoot\' to \'components\' in the future.\n    return r === undefined ? \'recoilRoot\' : r;\n}\nvar Recoil_Retention = {\n    SUSPENSE_TIMEOUT_MS: SUSPENSE_TIMEOUT_MS,\n    updateRetainCount: updateRetainCount,\n    updateRetainCountToZero: updateRetainCountToZero,\n    releaseScheduledRetainablesNow: releaseScheduledRetainablesNow,\n    retainedByOptionWithDefault: retainedByOptionWithDefault\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\n/**\n * Combines multiple Iterables into a single Iterable.\n * Traverses the input Iterables in the order provided and maintains the order\n * of their elements.\n *\n * Example:\n * ```\n * const r = Array.from(concatIterables([\'a\', \'b\'], [\'c\'], [\'d\', \'e\', \'f\']));\n * r == [\'a\', \'b\', \'c\', \'d\', \'e\', \'f\'];\n * ```\n */\nfunction concatIterables(iters) {\n    var _a, iters_1, iter, _b, iter_1, val;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = 0, iters_1 = iters;\n                _c.label = 1;\n            case 1:\n                if (!(_a < iters_1.length)) return [3 /*break*/, 6];\n                iter = iters_1[_a];\n                _b = 0, iter_1 = iter;\n                _c.label = 2;\n            case 2:\n                if (!(_b < iter_1.length)) return [3 /*break*/, 5];\n                val = iter_1[_b];\n                return [4 /*yield*/, val];\n            case 3:\n                _c.sent();\n                _c.label = 4;\n            case 4:\n                _b++;\n                return [3 /*break*/, 2];\n            case 5:\n                _a++;\n                return [3 /*break*/, 1];\n            case 6: return [2 /*return*/];\n        }\n    });\n}\nvar Recoil_concatIterables = concatIterables;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nvar isSSR = typeof window === \'undefined\';\nvar isReactNative = typeof navigator !== \'undefined\' && navigator.product === \'ReactNative\'; // eslint-disable-line fb-www/typeof-undefined\nvar Recoil_Environment = {\n    isSSR: isSSR,\n    isReactNative: isReactNative\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n *\n * This is to export esstiential functions from react-dom\n * for our web build\n */\nvar unstable_batchedUpdates = react_dom.unstable_batchedUpdates;\nvar ReactBatchedUpdates = {\n    unstable_batchedUpdates: unstable_batchedUpdates\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n *\n * This is to export esstiential functions from react-dom\n * for our web build\n */\n// @fb-only: const {unstable_batchedUpdates} = require(\'ReactDOMComet\');\n// prettier-ignore\nvar unstable_batchedUpdates$1 = ReactBatchedUpdates.unstable_batchedUpdates; // @oss-only\nvar Recoil_ReactBatchedUpdates = {\n    unstable_batchedUpdates: unstable_batchedUpdates$1\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nvar batchStart$1 = Recoil_RecoilValueInterface.batchStart;\nvar unstable_batchedUpdates$2 = Recoil_ReactBatchedUpdates.unstable_batchedUpdates;\nvar batcher = unstable_batchedUpdates$2; // flowlint-next-line unclear-type:off\n/**\n * Sets the provided batcher function as the batcher function used by Recoil.\n *\n * Set the batcher to a custom batcher for your renderer,\n * if you use a renderer other than React DOM or React Native.\n */\nvar setBatcher = function (newBatcher) {\n    batcher = newBatcher;\n};\n/**\n * Returns the current batcher function.\n */\nvar getBatcher = function () { return batcher; };\n/**\n * Calls the current batcher function and passes the\n * provided callback function.\n */\nvar batchUpdates = function (callback) {\n    batcher(function () {\n        var batchEnd = function () { return undefined; };\n        try {\n            batchEnd = batchStart$1();\n            callback();\n        }\n        finally {\n            batchEnd();\n        }\n    });\n};\nvar Recoil_Batching = {\n    getBatcher: getBatcher,\n    setBatcher: setBatcher,\n    batchUpdates: batchUpdates\n};\nvar isSSR$1 = Recoil_Environment.isSSR;\nvar batchUpdates$1 = Recoil_Batching.batchUpdates;\nvar initializeNodeIfNewToStore$1 = Recoil_FunctionalCore.initializeNodeIfNewToStore, peekNodeInfo$1 = Recoil_FunctionalCore.peekNodeInfo;\nvar graph$2 = Recoil_Graph.graph;\nvar DEFAULT_VALUE$1 = Recoil_Node.DEFAULT_VALUE, recoilValues$1 = Recoil_Node.recoilValues, recoilValuesForKeys$2 = Recoil_Node.recoilValuesForKeys;\nvar AbstractRecoilValue$2 = Recoil_RecoilValueInterface.AbstractRecoilValue, getRecoilValueAsLoadable$1 = Recoil_RecoilValueInterface.getRecoilValueAsLoadable, setRecoilValue$1 = Recoil_RecoilValueInterface.setRecoilValue, setUnvalidatedRecoilValue$1 = Recoil_RecoilValueInterface.setUnvalidatedRecoilValue;\nvar updateRetainCount$1 = Recoil_Retention.updateRetainCount;\nvar getNextTreeStateVersion$1 = Recoil_State.getNextTreeStateVersion, makeEmptyStoreState$1 = Recoil_State.makeEmptyStoreState; // Opaque at this surface because it\'s part of the public API from here.\nvar retainWarning = "\\nRecoil Snapshots only last for the duration of the callback they are provided to. To keep a Snapshot longer, do this:\\n\\n  const release = snapshot.retain();\\n  try {\\n    await useTheSnapshotAsynchronously(snapshot);\\n  } finally {\\n    release();\\n  }\\n\\nThis is currently a DEV-only warning but will become a thrown exception in the next release of Recoil.\\n"; // A "Snapshot" is "read-only" and captures a specific set of values of atoms.\n// However, the data-flow-graph and selector values may evolve as selector\n// evaluation functions are executed and async selectors resolve.\nvar Snapshot = /** @class */ (function () {\n    function Snapshot(storeState) {\n        var _this = this;\n        _defineProperty(this, "_store", void 0);\n        _defineProperty(this, "_refCount", 0);\n        _defineProperty(this, "getLoadable", function (recoilValue) {\n            _this.checkRefCount_INTERNAL();\n            return getRecoilValueAsLoadable$1(_this._store, recoilValue);\n        });\n        _defineProperty(this, "getPromise", function (recoilValue) {\n            _this.checkRefCount_INTERNAL();\n            return _this.getLoadable(recoilValue).toPromise();\n        });\n        _defineProperty(this, "getNodes_UNSTABLE", function (opt) {\n            _this.checkRefCount_INTERNAL(); // TODO Deal with modified selectors\n            if ((opt === null || opt === void 0 ? void 0 : opt.isModified) === true) {\n                if ((opt === null || opt === void 0 ? void 0 : opt.isInitialized) === false) {\n                    return [];\n                }\n                var state = _this._store.getState().currentTree;\n                return recoilValuesForKeys$2(state.dirtyAtoms);\n            }\n            var knownAtoms = _this._store.getState().knownAtoms;\n            var knownSelectors = _this._store.getState().knownSelectors;\n            return (opt === null || opt === void 0 ? void 0 : opt.isInitialized) == null ? recoilValues$1.values() : opt.isInitialized === true ? recoilValuesForKeys$2(Recoil_concatIterables([_this._store.getState().knownAtoms, _this._store.getState().knownSelectors])) : Recoil_filterIterable(recoilValues$1.values(), function (_a) {\n                var key = _a.key;\n                return !knownAtoms.has(key) && !knownSelectors.has(key);\n            });\n        });\n        _defineProperty(this, "getInfo_UNSTABLE", function (_a) {\n            var key = _a.key;\n            _this.checkRefCount_INTERNAL();\n            return peekNodeInfo$1(_this._store, _this._store.getState().currentTree, key);\n        });\n        _defineProperty(this, "map", function (mapper) {\n            _this.checkRefCount_INTERNAL();\n            var mutableSnapshot = new MutableSnapshot(_this, batchUpdates$1);\n            mapper(mutableSnapshot); // if removing batchUpdates from `set` add it here\n            return cloneSnapshot(mutableSnapshot.getStore_INTERNAL());\n        });\n        _defineProperty(this, "asyncMap", function (mapper) { return __awaiter(_this, void 0, void 0, function () {\n            var mutableSnapshot;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.checkRefCount_INTERNAL();\n                        mutableSnapshot = new MutableSnapshot(this, batchUpdates$1);\n                        return [4 /*yield*/, mapper(mutableSnapshot)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, cloneSnapshot(mutableSnapshot.getStore_INTERNAL())];\n                }\n            });\n        }); });\n        this._store = {\n            getState: function () { return storeState; },\n            replaceState: function (replacer) {\n                storeState.currentTree = replacer(storeState.currentTree); // no batching so nextTree is never active\n            },\n            getGraph: function (version) {\n                var graphs = storeState.graphsByVersion;\n                if (graphs.has(version)) {\n                    return Recoil_nullthrows(graphs.get(version));\n                }\n                var newGraph = graph$2();\n                graphs.set(version, newGraph);\n                return newGraph;\n            },\n            subscribeToTransactions: function () { return ({\n                release: function () { }\n            }); },\n            addTransactionMetadata: function () {\n                throw Recoil_err(\'Cannot subscribe to Snapshots\');\n            }\n        }; // Initialize any nodes that are live in the parent store (primarily so that this\n        // snapshot gets counted towards the node\'s live stores count).\n        for (var _a = 0, _b = this._store.getState().nodeCleanupFunctions.keys(); _a < _b.length; _a++) {\n            var nodeKey = _b[_a];\n            initializeNodeIfNewToStore$1(this._store, storeState.currentTree, nodeKey, \'get\');\n            updateRetainCount$1(this._store, nodeKey, 1);\n        }\n        this.retain();\n        this.autorelease_INTERNAL();\n    }\n    Snapshot.prototype.retain = function () {\n        var _this = this;\n        if (!Recoil_gkx_1(\'recoil_memory_managament_2020\')) {\n            return function () { return undefined; };\n        }\n        this._refCount++;\n        var released = false;\n        return function () {\n            if (!released) {\n                released = true;\n                _this.release_INTERNAL();\n            }\n        };\n    };\n    Snapshot.prototype.autorelease_INTERNAL = function () {\n        var _this = this;\n        if (!Recoil_gkx_1(\'recoil_memory_managament_2020\')) {\n            return;\n        }\n        if (!isSSR$1) {\n            window.setTimeout(function () { return _this.release_INTERNAL(); }, 0);\n        }\n    };\n    Snapshot.prototype.release_INTERNAL = function () {\n        if (!Recoil_gkx_1(\'recoil_memory_managament_2020\')) {\n            return;\n        }\n        this._refCount--;\n        if (this._refCount === 0)\n            ;\n    };\n    Snapshot.prototype.checkRefCount_INTERNAL = function () {\n        if (Recoil_gkx_1(\'recoil_memory_managament_2020\') && this._refCount <= 0) {\n            if (false) {} // What we will ship later:\n            // throw err(retainWarning);\n        }\n    };\n    Snapshot.prototype.getStore_INTERNAL = function () {\n        this.checkRefCount_INTERNAL();\n        return this._store;\n    };\n    Snapshot.prototype.getID = function () {\n        this.checkRefCount_INTERNAL();\n        return this.getID_INTERNAL();\n    };\n    Snapshot.prototype.getID_INTERNAL = function () {\n        this.checkRefCount_INTERNAL();\n        return this._store.getState().currentTree.stateID;\n    }; // We want to allow the methods to be destructured and used as accessors\n    return Snapshot;\n}());\nfunction cloneStoreState(store, treeState, bumpVersion) {\n    if (bumpVersion === void 0) { bumpVersion = false; }\n    var storeState = store.getState();\n    var version = bumpVersion ? getNextTreeStateVersion$1() : treeState.version;\n    return {\n        currentTree: bumpVersion ? {\n            // TODO snapshots shouldn\'t really have versions because a new version number\n            // is always assigned when the snapshot is gone to.\n            version: version,\n            stateID: version,\n            transactionMetadata: __assign({}, treeState.transactionMetadata),\n            dirtyAtoms: new Set(treeState.dirtyAtoms),\n            atomValues: treeState.atomValues.clone(),\n            nonvalidatedAtoms: treeState.nonvalidatedAtoms.clone()\n        } : treeState,\n        commitDepth: 0,\n        nextTree: null,\n        previousTree: null,\n        knownAtoms: new Set(storeState.knownAtoms),\n        // FIXME here\'s a copy\n        knownSelectors: new Set(storeState.knownSelectors),\n        // FIXME here\'s a copy\n        transactionSubscriptions: new Map(),\n        nodeTransactionSubscriptions: new Map(),\n        nodeToComponentSubscriptions: new Map(),\n        queuedComponentCallbacks_DEPRECATED: [],\n        suspendedComponentResolvers: new Set(),\n        graphsByVersion: new Map().set(version, store.getGraph(treeState.version)),\n        versionsUsedByComponent: new Map(),\n        retention: {\n            referenceCounts: new Map(),\n            nodesRetainedByZone: new Map(),\n            retainablesToCheckForRelease: new Set()\n        },\n        nodeCleanupFunctions: new Map()\n    };\n} // Factory to build a fresh snapshot\nfunction freshSnapshot(initializeState) {\n    var snapshot = new Snapshot(makeEmptyStoreState$1());\n    return initializeState != null ? snapshot.map(initializeState) : snapshot;\n} // Factory to clone a snapahot state\nfunction cloneSnapshot(store, version) {\n    if (version === void 0) { version = \'current\'; }\n    var storeState = store.getState();\n    var treeState = version === \'current\' ? storeState.currentTree : Recoil_nullthrows(storeState.previousTree);\n    return new Snapshot(cloneStoreState(store, treeState));\n}\nvar MutableSnapshot = /** @class */ (function (_super) {\n    __extends(MutableSnapshot, _super);\n    function MutableSnapshot(snapshot, batch) {\n        var _this = _super.call(this, cloneStoreState(snapshot.getStore_INTERNAL(), snapshot.getStore_INTERNAL().getState().currentTree, true)) || this;\n        _defineProperty(_this, "_batch", void 0);\n        _defineProperty(_this, "set", function (recoilState, newValueOrUpdater) {\n            _this.checkRefCount_INTERNAL();\n            var store = _this.getStore_INTERNAL(); // This batchUpdates ensures this `set` is applied immediately and you can\n            // read the written value after calling `set`. I would like to remove this\n            // behavior and only batch in `Snapshot.map`, but this would be a breaking\n            // change potentially.\n            _this._batch(function () {\n                updateRetainCount$1(store, recoilState.key, 1);\n                setRecoilValue$1(_this.getStore_INTERNAL(), recoilState, newValueOrUpdater);\n            });\n        });\n        _defineProperty(_this, "reset", function (recoilState) {\n            _this.checkRefCount_INTERNAL();\n            var store = _this.getStore_INTERNAL(); // See note at `set` about batched updates.\n            _this._batch(function () {\n                updateRetainCount$1(store, recoilState.key, 1);\n                setRecoilValue$1(_this.getStore_INTERNAL(), recoilState, DEFAULT_VALUE$1);\n            });\n        });\n        _defineProperty(_this, "setUnvalidatedAtomValues_DEPRECATED", function (values) {\n            _this.checkRefCount_INTERNAL();\n            var store = _this.getStore_INTERNAL(); // See note at `set` about batched updates.\n            batchUpdates$1(function () {\n                for (var _a = 0, _b = values.entries(); _a < _b.length; _a++) {\n                    var _c = _b[_a], k = _c[0], v = _c[1];\n                    updateRetainCount$1(store, k, 1);\n                    setUnvalidatedRecoilValue$1(store, new AbstractRecoilValue$2(k), v);\n                }\n            });\n        });\n        _this._batch = batch;\n        return _this;\n    } // We want to allow the methods to be destructured and used as accessors\n    return MutableSnapshot;\n}(Snapshot));\nvar Recoil_Snapshot = {\n    Snapshot: Snapshot,\n    MutableSnapshot: MutableSnapshot,\n    freshSnapshot: freshSnapshot,\n    cloneSnapshot: cloneSnapshot\n};\nvar Recoil_Snapshot_1 = Recoil_Snapshot.Snapshot;\nvar Recoil_Snapshot_2 = Recoil_Snapshot.MutableSnapshot;\nvar Recoil_Snapshot_3 = Recoil_Snapshot.freshSnapshot;\nvar Recoil_Snapshot_4 = Recoil_Snapshot.cloneSnapshot;\nvar Recoil_Snapshot$1 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Snapshot: Recoil_Snapshot_1,\n    MutableSnapshot: Recoil_Snapshot_2,\n    freshSnapshot: Recoil_Snapshot_3,\n    cloneSnapshot: Recoil_Snapshot_4\n});\n// @fb-only: const RecoilusagelogEvent = require(\'RecoilusagelogEvent\');\n// @fb-only: const RecoilUsageLogFalcoEvent = require(\'RecoilUsageLogFalcoEvent\');\n// @fb-only: const URI = require(\'URI\');\nvar getNextTreeStateVersion$2 = Recoil_State.getNextTreeStateVersion, makeEmptyStoreState$2 = Recoil_State.makeEmptyStoreState;\nvar cleanUpNode$2 = Recoil_FunctionalCore.cleanUpNode, getDownstreamNodes$2 = Recoil_FunctionalCore.getDownstreamNodes, setNodeValue$2 = Recoil_FunctionalCore.setNodeValue, setUnvalidatedAtomValue_DEPRECATED$1 = Recoil_FunctionalCore.setUnvalidatedAtomValue_DEPRECATED;\nvar graph$3 = Recoil_Graph.graph;\nvar cloneGraph$1 = Recoil_Graph.cloneGraph;\nvar applyAtomValueWrites$1 = Recoil_RecoilValueInterface.applyAtomValueWrites;\nvar releaseScheduledRetainablesNow$1 = Recoil_Retention.releaseScheduledRetainablesNow;\nvar freshSnapshot$1 = Recoil_Snapshot$1.freshSnapshot;\nvar recoil_useCallback = react.useCallback, recoil_useContext = react.useContext, recoil_useEffect = react.useEffect, recoil_useMemo = react.useMemo, recoil_useRef = react.useRef, recoil_useState = react.useState;\nfunction notInAContext() {\n    throw Recoil_err(\'This component must be used inside a <RecoilRoot> component.\');\n}\nvar defaultStore = Object.freeze({\n    getState: notInAContext,\n    replaceState: notInAContext,\n    getGraph: notInAContext,\n    subscribeToTransactions: notInAContext,\n    addTransactionMetadata: notInAContext\n});\nvar stateReplacerIsBeingExecuted = false;\nfunction startNextTreeIfNeeded(store) {\n    if (stateReplacerIsBeingExecuted) {\n        throw Recoil_err(\'An atom update was triggered within the execution of a state updater function. State updater functions provided to Recoil must be pure functions.\');\n    }\n    var storeState = store.getState();\n    if (storeState.nextTree === null) {\n        if (Recoil_gkx_1(\'recoil_memory_managament_2020\') && Recoil_gkx_1(\'recoil_release_on_cascading_update_killswitch_2021\')) {\n            // If this is a cascading update (that is, rendering due to one state change\n            // invokes a second state change), we won\'t have cleaned up retainables yet\n            // because this normally happens after notifying components. Do it before\n            // proceeding with the cascading update so that it remains predictable:\n            if (storeState.commitDepth > 0) {\n                releaseScheduledRetainablesNow$1(store);\n            }\n        }\n        var version = storeState.currentTree.version;\n        var nextVersion = getNextTreeStateVersion$2();\n        storeState.nextTree = __assign(__assign({}, storeState.currentTree), { version: nextVersion, stateID: nextVersion, dirtyAtoms: new Set(), transactionMetadata: {} });\n        storeState.graphsByVersion.set(nextVersion, cloneGraph$1(Recoil_nullthrows(storeState.graphsByVersion.get(version))));\n    }\n}\nvar AppContext = react.createContext({\n    current: defaultStore\n});\nvar useStoreRef = function () { return recoil_useContext(AppContext); };\nvar MutableSourceContext = react.createContext(null); // TODO T2710559282599660\nfunction useRecoilMutableSource() {\n    var mutableSource = recoil_useContext(MutableSourceContext);\n    if (mutableSource == null) {\n        Recoil_expectationViolation(\'Attempted to use a Recoil hook outside of a <RecoilRoot>. \' + \'<RecoilRoot> must be an ancestor of any component that uses \' + \'Recoil hooks.\');\n    }\n    return mutableSource;\n}\nfunction notifyComponents(store, storeState, treeState) {\n    var dependentNodes = getDownstreamNodes$2(store, treeState, treeState.dirtyAtoms);\n    for (var _a = 0, dependentNodes_1 = dependentNodes; _a < dependentNodes_1.length; _a++) {\n        var key = dependentNodes_1[_a];\n        var comps = storeState.nodeToComponentSubscriptions.get(key);\n        if (comps) {\n            for (var _b = 0, comps_1 = comps; _b < comps_1.length; _b++) {\n                var _c = comps_1[_b], _subID = _c[0], _d = _c[1], _debugName = _d[0], callback = _d[1];\n                callback(treeState);\n            }\n        }\n    }\n}\nfunction sendEndOfBatchNotifications(store) {\n    var storeState = store.getState();\n    var treeState = storeState.currentTree; // Inform transaction subscribers of the transaction:\n    var dirtyAtoms = treeState.dirtyAtoms;\n    if (dirtyAtoms.size) {\n        // Execute Node-specific subscribers before global subscribers\n        for (var _a = 0, _b = storeState.nodeTransactionSubscriptions; _a < _b.length; _a++) {\n            var _c = _b[_a], key = _c[0], subscriptions = _c[1];\n            if (dirtyAtoms.has(key)) {\n                for (var _d = 0, subscriptions_1 = subscriptions; _d < subscriptions_1.length; _d++) {\n                    var _e = subscriptions_1[_d], _ = _e[0], subscription = _e[1];\n                    subscription(store);\n                }\n            }\n        }\n        for (var _f = 0, _g = storeState.transactionSubscriptions; _f < _g.length; _f++) {\n            var _h = _g[_f], _ = _h[0], subscription = _h[1];\n            subscription(store);\n        }\n        if (!Recoil_gkx_1(\'recoil_early_rendering_2021\') || storeState.suspendedComponentResolvers.size) {\n            // Notifying components is needed to wake from suspense, even when using\n            // early rendering.\n            notifyComponents(store, storeState, treeState); // Wake all suspended components so the right one(s) can try to re-render.\n            // We need to wake up components not just when some asynchronous selector\n            // resolved, but also when changing synchronous values because this may cause\n            // a selector to change from asynchronous to synchronous, in which case there\n            // would be no follow-up asynchronous resolution to wake us up.\n            // TODO OPTIMIZATION Only wake up related downstream components\n            storeState.suspendedComponentResolvers.forEach(function (cb) { return cb(); });\n            storeState.suspendedComponentResolvers.clear();\n        }\n    } // Special behavior ONLY invoked by useInterface.\n    // FIXME delete queuedComponentCallbacks_DEPRECATED when deleting useInterface.\n    storeState.queuedComponentCallbacks_DEPRECATED.forEach(function (cb) { return cb(treeState); });\n    storeState.queuedComponentCallbacks_DEPRECATED.splice(0, storeState.queuedComponentCallbacks_DEPRECATED.length);\n}\nfunction endBatch(storeRef) {\n    var storeState = storeRef.current.getState();\n    storeState.commitDepth++;\n    try {\n        var nextTree = storeState.nextTree; // Ignore commits that are not because of Recoil transactions -- namely,\n        // because something above RecoilRoot re-rendered:\n        if (nextTree === null) {\n            return;\n        } // nextTree is now committed -- note that copying and reset occurs when\n        // a transaction begins, in startNextTreeIfNeeded:\n        storeState.previousTree = storeState.currentTree;\n        storeState.currentTree = nextTree;\n        storeState.nextTree = null;\n        sendEndOfBatchNotifications(storeRef.current);\n        if (storeState.previousTree != null) {\n            storeState.graphsByVersion.delete(storeState.previousTree.version);\n        }\n        else {\n            Recoil_recoverableViolation(\'Ended batch with no previous state, which is unexpected\', \'recoil\');\n        }\n        storeState.previousTree = null;\n        if (Recoil_gkx_1(\'recoil_memory_managament_2020\')) {\n            releaseScheduledRetainablesNow$1(storeRef.current);\n        }\n    }\n    finally {\n        storeState.commitDepth--;\n    }\n}\n/*\n * The purpose of the Batcher is to observe when React batches end so that\n * Recoil state changes can be batched. Whenever Recoil state changes, we call\n * setState on the batcher. Then we wait for that change to be committed, which\n * signifies the end of the batch. That\'s when we respond to the Recoil change.\n */\nfunction Batcher(_a) {\n    var setNotifyBatcherOfChange = _a.setNotifyBatcherOfChange;\n    var storeRef = useStoreRef();\n    var _b = recoil_useState([]), _ = _b[0], setState = _b[1];\n    setNotifyBatcherOfChange(function () { return setState({}); });\n    recoil_useEffect(function () {\n        // enqueueExecution runs this function immediately; it is only used to\n        // manipulate the order of useEffects during tests, since React seems to\n        // call useEffect in an unpredictable order sometimes.\n        Recoil_Queue.enqueueExecution(\'Batcher\', function () {\n            endBatch(storeRef);\n        });\n    }); // If an asynchronous selector resolves after the Batcher is unmounted,\n    // notifyBatcherOfChange will still be called. An error gets thrown whenever\n    // setState is called after a component is already unmounted, so this sets\n    // notifyBatcherOfChange to be a no-op.\n    recoil_useEffect(function () {\n        return function () {\n            setNotifyBatcherOfChange(function () { });\n        };\n    }, [setNotifyBatcherOfChange]);\n    return null;\n}\nif (false) {} // When removing this deprecated function, remove stateBySettingRecoilValue\n// which will no longer be needed.\nfunction initialStoreState_DEPRECATED(store, initializeState) {\n    var initial = makeEmptyStoreState$2();\n    initializeState({\n        // $FlowFixMe[escaped-generic]\n        set: function (atom, value) {\n            var state = initial.currentTree;\n            var writes = setNodeValue$2(store, state, atom.key, value);\n            var writtenNodes = new Set(writes.keys());\n            var nonvalidatedAtoms = state.nonvalidatedAtoms.clone();\n            for (var _a = 0, writtenNodes_1 = writtenNodes; _a < writtenNodes_1.length; _a++) {\n                var n = writtenNodes_1[_a];\n                nonvalidatedAtoms.delete(n);\n            }\n            initial.currentTree = __assign(__assign({}, state), { dirtyAtoms: Recoil_unionSets(state.dirtyAtoms, writtenNodes), atomValues: applyAtomValueWrites$1(state.atomValues, writes), \n                // NB: PLEASE un-export applyAtomValueWrites when deleting this code\n                nonvalidatedAtoms: nonvalidatedAtoms });\n        },\n        setUnvalidatedAtomValues: function (atomValues) {\n            // FIXME replace this with a mutative loop\n            atomValues.forEach(function (v, k) {\n                initial.currentTree = setUnvalidatedAtomValue_DEPRECATED$1(initial.currentTree, k, v);\n            });\n        }\n    });\n    return initial;\n}\nfunction initialStoreState(initializeState) {\n    var snapshot = freshSnapshot$1().map(initializeState);\n    return snapshot.getStore_INTERNAL().getState();\n}\nvar nextID = 0;\nfunction RecoilRoot_INTERNAL(_a) {\n    var initializeState_DEPRECATED = _a.initializeState_DEPRECATED, initializeState = _a.initializeState, storeProp = _a.store_INTERNAL, \n    // For use with React "context bridging"\n    children = _a.children;\n    var _createMutableSource;\n    // prettier-ignore\n    // @fb-only: useEffect(() => {\n    // @fb-only: if (gkx(\'recoil_usage_logging\')) {\n    // @fb-only: try {\n    // @fb-only: RecoilUsageLogFalcoEvent.log(() => ({\n    // @fb-only: type: RecoilusagelogEvent.RECOIL_ROOT_MOUNTED,\n    // @fb-only: path: URI.getRequestURI().getPath(),\n    // @fb-only: }));\n    // @fb-only: } catch {\n    // @fb-only: recoverableViolation(\n    // @fb-only: \'Error when logging Recoil Usage event\',\n    // @fb-only: \'recoil\',\n    // @fb-only: );\n    // @fb-only: }\n    // @fb-only: }\n    // @fb-only: }, []);\n    var storeState; // eslint-disable-line prefer-const\n    var getGraph = function (version) {\n        var graphs = storeState.current.graphsByVersion;\n        if (graphs.has(version)) {\n            return Recoil_nullthrows(graphs.get(version));\n        }\n        var newGraph = graph$3();\n        graphs.set(version, newGraph);\n        return newGraph;\n    };\n    var subscribeToTransactions = function (callback, key) {\n        if (key == null) {\n            // Global transaction subscriptions\n            var transactionSubscriptions_1 = storeRef.current.getState().transactionSubscriptions;\n            var id_1 = nextID++;\n            transactionSubscriptions_1.set(id_1, callback);\n            return {\n                release: function () {\n                    transactionSubscriptions_1.delete(id_1);\n                }\n            };\n        }\n        else {\n            // Node-specific transaction subscriptions:\n            var nodeTransactionSubscriptions_1 = storeRef.current.getState().nodeTransactionSubscriptions;\n            if (!nodeTransactionSubscriptions_1.has(key)) {\n                nodeTransactionSubscriptions_1.set(key, new Map());\n            }\n            var id_2 = nextID++;\n            Recoil_nullthrows(nodeTransactionSubscriptions_1.get(key)).set(id_2, callback);\n            return {\n                release: function () {\n                    var subs = nodeTransactionSubscriptions_1.get(key);\n                    if (subs) {\n                        subs.delete(id_2);\n                        if (subs.size === 0) {\n                            nodeTransactionSubscriptions_1.delete(key);\n                        }\n                    }\n                }\n            };\n        }\n    };\n    var addTransactionMetadata = function (metadata) {\n        startNextTreeIfNeeded(storeRef.current);\n        for (var _a = 0, _b = Object.keys(metadata); _a < _b.length; _a++) {\n            var k = _b[_a];\n            Recoil_nullthrows(storeRef.current.getState().nextTree).transactionMetadata[k] = metadata[k];\n        }\n    };\n    var replaceState = function (replacer) {\n        var storeState = storeRef.current.getState();\n        startNextTreeIfNeeded(storeRef.current); // Use replacer to get the next state:\n        var nextTree = Recoil_nullthrows(storeState.nextTree);\n        var replaced;\n        try {\n            stateReplacerIsBeingExecuted = true;\n            replaced = replacer(nextTree);\n        }\n        finally {\n            stateReplacerIsBeingExecuted = false;\n        }\n        if (replaced === nextTree) {\n            return;\n        }\n        if (false) {} // Save changes to nextTree and schedule a React update:\n        storeState.nextTree = replaced;\n        if (Recoil_gkx_1(\'recoil_early_rendering_2021\')) {\n            notifyComponents(store, storeState, replaced);\n        }\n        Recoil_nullthrows(notifyBatcherOfChange.current)();\n    };\n    var notifyBatcherOfChange = recoil_useRef(null);\n    var setNotifyBatcherOfChange = recoil_useCallback(function (x) {\n        notifyBatcherOfChange.current = x;\n    }, [notifyBatcherOfChange]); // FIXME T2710559282599660\n    var createMutableSource = (_createMutableSource = react.createMutableSource) !== null && _createMutableSource !== void 0 ? _createMutableSource : // flowlint-line unclear-type:off\n        react.unstable_createMutableSource; // flowlint-line unclear-type:off\n    var store = storeProp !== null && storeProp !== void 0 ? storeProp : {\n        getState: function () { return storeState.current; },\n        replaceState: replaceState,\n        getGraph: getGraph,\n        subscribeToTransactions: subscribeToTransactions,\n        addTransactionMetadata: addTransactionMetadata\n    };\n    var storeRef = recoil_useRef(store);\n    storeState = recoil_useRef(initializeState_DEPRECATED != null ? initialStoreState_DEPRECATED(store, initializeState_DEPRECATED) : initializeState != null ? initialStoreState(initializeState) : makeEmptyStoreState$2());\n    var mutableSource = recoil_useMemo(function () { return createMutableSource ? createMutableSource(storeState, function () { return storeState.current.currentTree.version; }) : null; }, [createMutableSource, storeState]); // Cleanup when the <RecoilRoot> is unmounted\n    recoil_useEffect(function () { return function () {\n        for (var _a = 0, _b = storeRef.current.getState().knownAtoms; _a < _b.length; _a++) {\n            var atomKey = _b[_a];\n            cleanUpNode$2(storeRef.current, atomKey);\n        }\n    }; }, []);\n    return /*#__PURE__*/ react.createElement(AppContext.Provider, {\n        value: storeRef\n    }, /*#__PURE__*/ react.createElement(MutableSourceContext.Provider, {\n        value: mutableSource\n    }, /*#__PURE__*/ react.createElement(Batcher, {\n        setNotifyBatcherOfChange: setNotifyBatcherOfChange\n    }), children));\n}\nfunction RecoilRoot(props) {\n    var override = props.override, propsExceptOverride = __rest(props, ["override"]);\n    var ancestorStoreRef = useStoreRef();\n    if (override === false && ancestorStoreRef.current !== defaultStore) {\n        // If ancestorStoreRef.current !== defaultStore, it means that this\n        // RecoilRoot is not nested within another.\n        return props.children;\n    }\n    return /*#__PURE__*/ react.createElement(RecoilRoot_INTERNAL, propsExceptOverride);\n}\nvar Recoil_RecoilRoot_react = {\n    useStoreRef: useStoreRef,\n    useRecoilMutableSource: useRecoilMutableSource,\n    RecoilRoot: RecoilRoot,\n    notifyComponents_FOR_TESTING: notifyComponents,\n    sendEndOfBatchNotifications_FOR_TESTING: sendEndOfBatchNotifications\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * MIT License\n *\n * Copyright (c) 2014-2019 Georg Tavonius\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the "Software"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nvar UNKNOWN_FUNCTION = \'<unknown>\';\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */\nfunction stackTraceParser(stackString) {\n    var lines = stackString.split(\'\\n\');\n    return lines.reduce(function (stack, line) {\n        var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n        if (parseResult) {\n            stack.push(parseResult);\n        }\n        return stack;\n    }, []);\n}\nvar chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\nfunction parseChrome(line) {\n    var parts = chromeRe.exec(line);\n    if (!parts) {\n        return null;\n    }\n    var isNative = parts[2] && parts[2].indexOf(\'native\') === 0; // start of line\n    var isEval = parts[2] && parts[2].indexOf(\'eval\') === 0; // start of line\n    var submatch = chromeEvalRe.exec(parts[2]);\n    if (isEval && submatch != null) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1]; // url\n        parts[3] = submatch[2]; // line\n        parts[4] = submatch[3]; // column\n    }\n    return {\n        file: !isNative ? parts[2] : null,\n        methodName: parts[1] || UNKNOWN_FUNCTION,\n        arguments: isNative ? [parts[2]] : [],\n        lineNumber: parts[3] ? +parts[3] : null,\n        column: parts[4] ? +parts[4] : null\n    };\n}\nvar winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nfunction parseWinjs(line) {\n    var parts = winjsRe.exec(line);\n    if (!parts) {\n        return null;\n    }\n    return {\n        file: parts[2],\n        methodName: parts[1] || UNKNOWN_FUNCTION,\n        arguments: [],\n        lineNumber: +parts[3],\n        column: parts[4] ? +parts[4] : null\n    };\n}\nvar geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nfunction parseGecko(line) {\n    var parts = geckoRe.exec(line);\n    if (!parts) {\n        return null;\n    }\n    var isEval = parts[3] && parts[3].indexOf(\' > eval\') > -1;\n    var submatch = geckoEvalRe.exec(parts[3]);\n    if (isEval && submatch != null) {\n        // throw out eval line/column and use top-most line number\n        parts[3] = submatch[1];\n        parts[4] = submatch[2];\n        parts[5] = null; // no column when eval\n    }\n    return {\n        file: parts[3],\n        methodName: parts[1] || UNKNOWN_FUNCTION,\n        arguments: parts[2] ? parts[2].split(\',\') : [],\n        lineNumber: parts[4] ? +parts[4] : null,\n        column: parts[5] ? +parts[5] : null\n    };\n}\nvar javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\nfunction parseJSC(line) {\n    var parts = javaScriptCoreRe.exec(line);\n    if (!parts) {\n        return null;\n    }\n    return {\n        file: parts[3],\n        methodName: parts[1] || UNKNOWN_FUNCTION,\n        arguments: [],\n        lineNumber: +parts[4],\n        column: parts[5] ? +parts[5] : null\n    };\n}\nvar nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nfunction parseNode(line) {\n    var parts = nodeRe.exec(line);\n    if (!parts) {\n        return null;\n    }\n    return {\n        file: parts[2],\n        methodName: parts[1] || UNKNOWN_FUNCTION,\n        arguments: [],\n        lineNumber: +parts[3],\n        column: parts[4] ? +parts[4] : null\n    };\n}\nvar Recoil_stackTraceParser = (/* unused pure expression or super */ null && (stackTraceParser));\nvar useRef$1 = react.useRef;\nfunction useComponentName() {\n    var nameRef = useRef$1();\n    if (false) { var methodName, _a, frames_1, frames_2, _nameRef$current; } // @fb-only: return "<component name only available when both in dev mode and when passing GK \'recoil_infer_component_names\'>";\n    return \'<component name not available>\'; // @oss-only\n}\nvar Recoil_useComponentName = useComponentName;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nfunction shallowArrayEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (var i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nvar Recoil_shallowArrayEqual = shallowArrayEqual;\nvar useEffect$1 = react.useEffect, useRef$2 = react.useRef;\nfunction usePrevious(value) {\n    var ref = useRef$2();\n    useEffect$1(function () {\n        ref.current = value;\n    });\n    return ref.current;\n}\nvar Recoil_usePrevious = usePrevious;\nvar useStoreRef$1 = Recoil_RecoilRoot_react.useStoreRef;\nvar SUSPENSE_TIMEOUT_MS$1 = Recoil_Retention.SUSPENSE_TIMEOUT_MS;\nvar updateRetainCount$2 = Recoil_Retention.updateRetainCount;\nvar RetentionZone$3 = Recoil_RetentionZone.RetentionZone;\nvar isSSR$2 = Recoil_Environment.isSSR;\nvar useEffect$2 = react.useEffect, useRef$3 = react.useRef; // I don\'t see a way to avoid the any type here because we want to accept readable\n// and writable values with any type parameter, but normally with writable ones\n// RecoilState<SomeT> is not a subtype of RecoilState<mixed>.\n// flowlint-line unclear-type:off\nfunction useRetain(toRetain) {\n    if (!Recoil_gkx_1(\'recoil_memory_managament_2020\')) {\n        return;\n    } // eslint-disable-next-line fb-www/react-hooks\n    return useRetain_ACTUAL(toRetain);\n}\nfunction useRetain_ACTUAL(toRetain) {\n    var array = Array.isArray(toRetain) ? toRetain : [toRetain];\n    var retainables = array.map(function (a) { return a instanceof RetentionZone$3 ? a : a.key; });\n    var storeRef = useStoreRef$1();\n    useEffect$2(function () {\n        if (!Recoil_gkx_1(\'recoil_memory_managament_2020\')) {\n            return;\n        }\n        var store = storeRef.current;\n        if (timeoutID.current && !isSSR$2) {\n            // Already performed a temporary retain on render, simply cancel the release\n            // of that temporary retain.\n            window.clearTimeout(timeoutID.current);\n            timeoutID.current = null;\n        }\n        else {\n            for (var _a = 0, retainables_3 = retainables; _a < retainables_3.length; _a++) {\n                var r = retainables_3[_a];\n                updateRetainCount$2(store, r, 1);\n            }\n        }\n        return function () {\n            for (var _a = 0, retainables_4 = retainables; _a < retainables_4.length; _a++) {\n                var r = retainables_4[_a];\n                updateRetainCount$2(store, r, -1);\n            }\n        }; // eslint-disable-next-line fb-www/react-hooks-deps\n    }, __spreadArray([storeRef], retainables, true)); // We want to retain if the component suspends. This is terrible but the Suspense\n    // API affords us no better option. If we suspend and never commit after some\n    // seconds, then release. The \'actual\' retain/release in the effect above\n    // cancels this.\n    var timeoutID = useRef$3();\n    var previousRetainables = Recoil_usePrevious(retainables);\n    if (!isSSR$2 && (previousRetainables === undefined || !Recoil_shallowArrayEqual(previousRetainables, retainables))) {\n        var store_1 = storeRef.current;\n        for (var _a = 0, retainables_2 = retainables; _a < retainables_2.length; _a++) {\n            var r = retainables_2[_a];\n            updateRetainCount$2(store_1, r, 1);\n        }\n        if (previousRetainables) {\n            for (var _b = 0, previousRetainables_1 = previousRetainables; _b < previousRetainables_1.length; _b++) {\n                var r = previousRetainables_1[_b];\n                updateRetainCount$2(store_1, r, -1);\n            }\n        }\n        if (timeoutID.current) {\n            window.clearTimeout(timeoutID.current);\n        }\n        timeoutID.current = window.setTimeout(function () {\n            timeoutID.current = null;\n            for (var _a = 0, retainables_5 = retainables; _a < retainables_5.length; _a++) {\n                var r = retainables_5[_a];\n                updateRetainCount$2(store_1, r, -1);\n            }\n        }, SUSPENSE_TIMEOUT_MS$1);\n    }\n}\nvar Recoil_useRetain = useRetain;\nvar batchUpdates$2 = Recoil_Batching.batchUpdates;\nvar DEFAULT_VALUE$2 = Recoil_Node.DEFAULT_VALUE;\nvar useRecoilMutableSource$1 = Recoil_RecoilRoot_react.useRecoilMutableSource, useStoreRef$2 = Recoil_RecoilRoot_react.useStoreRef;\nvar isRecoilValue$2 = Recoil_RecoilValue$1.isRecoilValue;\nvar AbstractRecoilValue$3 = Recoil_RecoilValueInterface.AbstractRecoilValue, getRecoilValueAsLoadable$2 = Recoil_RecoilValueInterface.getRecoilValueAsLoadable, setRecoilValue$2 = Recoil_RecoilValueInterface.setRecoilValue, setUnvalidatedRecoilValue$2 = Recoil_RecoilValueInterface.setUnvalidatedRecoilValue, subscribeToRecoilValue$1 = Recoil_RecoilValueInterface.subscribeToRecoilValue;\nvar setByAddingToSet$2 = Recoil_CopyOnWrite.setByAddingToSet;\nvar mutableSourceExists$2 = Recoil_mutableSource.mutableSourceExists, useMutableSource$1 = Recoil_mutableSource.useMutableSource;\nvar useCallback$1 = react.useCallback, useEffect$3 = react.useEffect, useMemo$1 = react.useMemo, useRef$4 = react.useRef, useState$1 = react.useState;\nfunction handleLoadable(loadable, recoilValue, storeRef) {\n    // We can\'t just throw the promise we are waiting on to Suspense.  If the\n    // upstream dependencies change it may produce a state in which the component\n    // can render, but it would still be suspended on a Promise that may never resolve.\n    if (loadable.state === \'hasValue\') {\n        return loadable.contents;\n    }\n    else if (loadable.state === \'loading\') {\n        var promise = new Promise(function (resolve) {\n            storeRef.current.getState().suspendedComponentResolvers.add(resolve);\n        }); // $FlowFixMe Flow(prop-missing) for integrating with tools that inspect thrown promises @fb-only\n        // @fb-only: promise.displayName = `Recoil State: ${recoilValue.key}`;\n        throw promise;\n    }\n    else if (loadable.state === \'hasError\') {\n        throw loadable.contents;\n    }\n    else {\n        throw Recoil_err("Invalid value of loadable atom \\"" + recoilValue.key + "\\"");\n    }\n}\nfunction validateRecoilValue(recoilValue, hookName) {\n    if (!isRecoilValue$2(recoilValue)) {\n        throw Recoil_err("Invalid argument to " + hookName + ": expected an atom or selector but got " + String(recoilValue));\n    }\n}\n/**\n * Various things are broken with useRecoilInterface, particularly concurrent mode\n * and memory management. They will not be fixed.\n * */\nfunction useRecoilInterface_DEPRECATED() {\n    var storeRef = useStoreRef$2();\n    var _a = useState$1([]), forceUpdate = _a[1];\n    var recoilValuesUsed = useRef$4(new Set());\n    recoilValuesUsed.current = new Set(); // Track the RecoilValues used just during this render\n    var previousSubscriptions = useRef$4(new Set());\n    var subscriptions = useRef$4(new Map());\n    var unsubscribeFrom = useCallback$1(function (key) {\n        var sub = subscriptions.current.get(key);\n        if (sub) {\n            sub.release();\n            subscriptions.current.delete(key);\n        }\n    }, [subscriptions]);\n    var componentName = Recoil_useComponentName();\n    useEffect$3(function () {\n        var store = storeRef.current;\n        function updateState(_state, key) {\n            if (!subscriptions.current.has(key)) {\n                return;\n            }\n            forceUpdate([]);\n        }\n        Recoil_differenceSets(recoilValuesUsed.current, previousSubscriptions.current).forEach(function (key) {\n            if (subscriptions.current.has(key)) {\n                Recoil_expectationViolation("Double subscription to RecoilValue \\"" + key + "\\"");\n                return;\n            }\n            var sub = subscribeToRecoilValue$1(store, new AbstractRecoilValue$3(key), function (state) {\n                updateState(state, key);\n            }, componentName);\n            subscriptions.current.set(key, sub);\n            /**\n             * Since we\'re subscribing in an effect we need to update to the latest\n             * value of the atom since it may have changed since we rendered. We can\n             * go ahead and do that now, unless we\'re in the middle of a batch --\n             * in which case we should do it at the end of the batch, due to the\n             * following edge case: Suppose an atom is updated in another useEffect\n             * of this same component. Then the following sequence of events occur:\n             * 1. Atom is updated and subs fired (but we may not be subscribed\n             *    yet depending on order of effects, so we miss this) Updated value\n             *    is now in nextTree, but not currentTree.\n             * 2. This effect happens. We subscribe and update.\n             * 3. From the update we re-render and read currentTree, with old value.\n             * 4. Batcher\'s effect sets currentTree to nextTree.\n             * In this sequence we miss the update. To avoid that, add the update\n             * to queuedComponentCallback if a batch is in progress.\n             */\n            // FIXME delete queuedComponentCallbacks_DEPRECATED when deleting useInterface.\n            var state = store.getState();\n            if (state.nextTree) {\n                store.getState().queuedComponentCallbacks_DEPRECATED.push(function () {\n                    updateState(store.getState(), key);\n                });\n            }\n            else {\n                updateState(store.getState(), key);\n            }\n        });\n        Recoil_differenceSets(previousSubscriptions.current, recoilValuesUsed.current).forEach(function (key) {\n            unsubscribeFrom(key);\n        });\n        previousSubscriptions.current = recoilValuesUsed.current;\n    });\n    useEffect$3(function () {\n        var subs = subscriptions.current;\n        return function () { return subs.forEach(function (_, key) { return unsubscribeFrom(key); }); };\n    }, [unsubscribeFrom]);\n    return useMemo$1(function () {\n        // eslint-disable-next-line no-shadow\n        function useSetRecoilState(recoilState) {\n            if (false) {}\n            return function (newValueOrUpdater) {\n                setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);\n            };\n        } // eslint-disable-next-line no-shadow\n        function useResetRecoilState(recoilState) {\n            if (false) {}\n            return function () { return setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2); };\n        } // eslint-disable-next-line no-shadow\n        function useRecoilValueLoadable(recoilValue) {\n            var _storeState$nextTree;\n            if (false) {}\n            if (!recoilValuesUsed.current.has(recoilValue.key)) {\n                recoilValuesUsed.current = setByAddingToSet$2(recoilValuesUsed.current, recoilValue.key);\n            } // TODO Restore optimization to memoize lookup\n            var storeState = storeRef.current.getState();\n            return getRecoilValueAsLoadable$2(storeRef.current, recoilValue, Recoil_gkx_1(\'recoil_early_rendering_2021\') ? (_storeState$nextTree = storeState.nextTree) !== null && _storeState$nextTree !== void 0 ? _storeState$nextTree : storeState.currentTree : storeState.currentTree);\n        } // eslint-disable-next-line no-shadow\n        function useRecoilValue(recoilValue) {\n            if (false) {}\n            var loadable = useRecoilValueLoadable(recoilValue);\n            return handleLoadable(loadable, recoilValue, storeRef);\n        } // eslint-disable-next-line no-shadow\n        function useRecoilState(recoilState) {\n            if (false) {}\n            return [useRecoilValue(recoilState), useSetRecoilState(recoilState)];\n        } // eslint-disable-next-line no-shadow\n        function useRecoilStateLoadable(recoilState) {\n            if (false) {}\n            return [useRecoilValueLoadable(recoilState), useSetRecoilState(recoilState)];\n        }\n        return {\n            getRecoilValue: useRecoilValue,\n            getRecoilValueLoadable: useRecoilValueLoadable,\n            getRecoilState: useRecoilState,\n            getRecoilStateLoadable: useRecoilStateLoadable,\n            getSetRecoilState: useSetRecoilState,\n            getResetRecoilState: useResetRecoilState\n        };\n    }, [recoilValuesUsed, storeRef]);\n}\nvar recoilComponentGetRecoilValueCount_FOR_TESTING = {\n    current: 0\n};\nfunction useRecoilValueLoadable_MUTABLESOURCE(recoilValue) {\n    if (false) {}\n    var storeRef = useStoreRef$2();\n    var getLoadable = useCallback$1(function () {\n        var _storeState$nextTree2;\n        var store = storeRef.current;\n        var storeState = store.getState();\n        var treeState = Recoil_gkx_1(\'recoil_early_rendering_2021\') ? (_storeState$nextTree2 = storeState.nextTree) !== null && _storeState$nextTree2 !== void 0 ? _storeState$nextTree2 : storeState.currentTree : storeState.currentTree;\n        return getRecoilValueAsLoadable$2(store, recoilValue, treeState);\n    }, [storeRef, recoilValue]);\n    var getLoadableWithTesting = useCallback$1(function () {\n        if (false) {}\n        return getLoadable();\n    }, [getLoadable]);\n    var componentName = Recoil_useComponentName();\n    var subscribe = useCallback$1(function (_storeState, callback) {\n        var store = storeRef.current;\n        var subscription = subscribeToRecoilValue$1(store, recoilValue, function () {\n            if (!Recoil_gkx_1(\'recoil_suppress_rerender_in_callback\')) {\n                return callback();\n            } // Only re-render if the value has changed.\n            // This will evaluate the atom/selector now as well as when the\n            // component renders, but that may help with prefetching.\n            var newLoadable = getLoadable();\n            if (!prevLoadableRef.current.is(newLoadable)) {\n                callback();\n            } // If the component is suspended then the effect setting prevLoadableRef\n            // will not run.  So, set the previous value here when its subscription\n            // is fired to wake it up.  We can\'t just rely on this, though, because\n            // this only executes when an atom/selector is dirty and the atom/selector\n            // passed to the hook can dynamically change.\n            prevLoadableRef.current = newLoadable;\n        }, componentName);\n        return subscription.release;\n    }, [storeRef, recoilValue, componentName, getLoadable]);\n    var source = useRecoilMutableSource$1();\n    var loadable = useMutableSource$1(source, getLoadableWithTesting, subscribe);\n    var prevLoadableRef = useRef$4(loadable);\n    useEffect$3(function () {\n        prevLoadableRef.current = loadable;\n    });\n    return loadable;\n}\nfunction useRecoilValueLoadable_LEGACY(recoilValue) {\n    if (false) {}\n    var storeRef = useStoreRef$2();\n    var _a = useState$1([]), _ = _a[0], forceUpdate = _a[1];\n    var componentName = Recoil_useComponentName();\n    useEffect$3(function () {\n        var store = storeRef.current;\n        var storeState = store.getState();\n        var subscription = subscribeToRecoilValue$1(store, recoilValue, function (_state) {\n            var _prevLoadableRef$curr;\n            if (!Recoil_gkx_1(\'recoil_suppress_rerender_in_callback\')) {\n                return forceUpdate([]);\n            }\n            var newLoadable = getRecoilValueAsLoadable$2(store, recoilValue, store.getState().currentTree);\n            if (!((_prevLoadableRef$curr = prevLoadableRef.current) === null || _prevLoadableRef$curr === void 0 ? void 0 : _prevLoadableRef$curr.is(newLoadable))) {\n                forceUpdate(newLoadable);\n            }\n            prevLoadableRef.current = newLoadable;\n        }, componentName);\n        /**\n         * Since we\'re subscribing in an effect we need to update to the latest\n         * value of the atom since it may have changed since we rendered. We can\n         * go ahead and do that now, unless we\'re in the middle of a batch --\n         * in which case we should do it at the end of the batch, due to the\n         * following edge case: Suppose an atom is updated in another useEffect\n         * of this same component. Then the following sequence of events occur:\n         * 1. Atom is updated and subs fired (but we may not be subscribed\n         *    yet depending on order of effects, so we miss this) Updated value\n         *    is now in nextTree, but not currentTree.\n         * 2. This effect happens. We subscribe and update.\n         * 3. From the update we re-render and read currentTree, with old value.\n         * 4. Batcher\'s effect sets currentTree to nextTree.\n         * In this sequence we miss the update. To avoid that, add the update\n         * to queuedComponentCallback if a batch is in progress.\n         */\n        if (storeState.nextTree) {\n            store.getState().queuedComponentCallbacks_DEPRECATED.push(function () {\n                prevLoadableRef.current = null;\n                forceUpdate([]);\n            });\n        }\n        else {\n            var _prevLoadableRef$curr2;\n            if (!Recoil_gkx_1(\'recoil_suppress_rerender_in_callback\')) {\n                return forceUpdate([]);\n            }\n            var newLoadable = getRecoilValueAsLoadable$2(store, recoilValue, store.getState().currentTree);\n            if (!((_prevLoadableRef$curr2 = prevLoadableRef.current) === null || _prevLoadableRef$curr2 === void 0 ? void 0 : _prevLoadableRef$curr2.is(newLoadable))) {\n                forceUpdate(newLoadable);\n            }\n            prevLoadableRef.current = newLoadable;\n        }\n        return subscription.release;\n    }, [componentName, recoilValue, storeRef]);\n    var loadable = getRecoilValueAsLoadable$2(storeRef.current, recoilValue);\n    var prevLoadableRef = useRef$4(loadable);\n    useEffect$3(function () {\n        prevLoadableRef.current = loadable;\n    });\n    return loadable;\n}\n/**\n  Like useRecoilValue(), but either returns the value if available or\n  just undefined if not available for any reason, such as pending or error.\n*/\nfunction useRecoilValueLoadable(recoilValue) {\n    if (Recoil_gkx_1(\'recoil_memory_managament_2020\')) {\n        // eslint-disable-next-line fb-www/react-hooks\n        Recoil_useRetain(recoilValue);\n    }\n    if (mutableSourceExists$2()) {\n        // eslint-disable-next-line fb-www/react-hooks\n        return useRecoilValueLoadable_MUTABLESOURCE(recoilValue);\n    }\n    else {\n        // eslint-disable-next-line fb-www/react-hooks\n        return useRecoilValueLoadable_LEGACY(recoilValue);\n    }\n}\n/**\n  Returns the value represented by the RecoilValue.\n  If the value is pending, it will throw a Promise to suspend the component,\n  if the value is an error it will throw it for the nearest React error boundary.\n  This will also subscribe the component for any updates in the value.\n  */\nfunction useRecoilValue(recoilValue) {\n    if (false) {}\n    var storeRef = useStoreRef$2();\n    var loadable = useRecoilValueLoadable(recoilValue);\n    return handleLoadable(loadable, recoilValue, storeRef);\n}\n/**\n  Returns a function that allows the value of a RecoilState to be updated, but does\n  not subscribe the component to changes to that RecoilState.\n*/\nfunction useSetRecoilState(recoilState) {\n    if (false) {}\n    var storeRef = useStoreRef$2();\n    return useCallback$1(function (newValueOrUpdater) {\n        setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);\n    }, [storeRef, recoilState]);\n}\n/**\n  Returns a function that will reset the value of a RecoilState to its default\n*/\nfunction useResetRecoilState(recoilState) {\n    if (false) {}\n    var storeRef = useStoreRef$2();\n    return useCallback$1(function () {\n        setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);\n    }, [storeRef, recoilState]);\n}\n/**\n  Equivalent to useState(). Allows the value of the RecoilState to be read and written.\n  Subsequent updates to the RecoilState will cause the component to re-render. If the\n  RecoilState is pending, this will suspend the component and initiate the\n  retrieval of the value. If evaluating the RecoilState resulted in an error, this will\n  throw the error so that the nearest React error boundary can catch it.\n*/\nfunction useRecoilState(recoilState) {\n    if (false) {}\n    return [useRecoilValue(recoilState), useSetRecoilState(recoilState)];\n}\n/**\n  Like useRecoilState(), but does not cause Suspense or React error handling. Returns\n  an object that indicates whether the RecoilState is available, pending, or\n  unavailable due to an error.\n*/\nfunction useRecoilStateLoadable(recoilState) {\n    if (false) {}\n    return [useRecoilValueLoadable(recoilState), useSetRecoilState(recoilState)];\n}\nfunction useSetUnvalidatedAtomValues() {\n    var storeRef = useStoreRef$2();\n    return function (values, transactionMetadata) {\n        if (transactionMetadata === void 0) { transactionMetadata = {}; }\n        batchUpdates$2(function () {\n            storeRef.current.addTransactionMetadata(transactionMetadata);\n            values.forEach(function (value, key) { return setUnvalidatedRecoilValue$2(storeRef.current, new AbstractRecoilValue$3(key), value); });\n        });\n    };\n}\nvar Recoil_Hooks = {\n    recoilComponentGetRecoilValueCount_FOR_TESTING: recoilComponentGetRecoilValueCount_FOR_TESTING,\n    useRecoilInterface: useRecoilInterface_DEPRECATED,\n    useRecoilState: useRecoilState,\n    useRecoilStateLoadable: useRecoilStateLoadable,\n    useRecoilValue: useRecoilValue,\n    useRecoilValueLoadable: useRecoilValueLoadable,\n    useResetRecoilState: useResetRecoilState,\n    useSetRecoilState: useSetRecoilState,\n    useSetUnvalidatedAtomValues: useSetUnvalidatedAtomValues\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\n/**\n * Returns a map containing all of the keys + values from the original map where\n * the given callback returned true.\n */\nfunction filterMap(map, callback) {\n    var result = new Map();\n    for (var _a = 0, map_1 = map; _a < map_1.length; _a++) {\n        var _b = map_1[_a], key = _b[0], value = _b[1];\n        if (callback(value, key)) {\n            result.set(key, value);\n        }\n    }\n    return result;\n}\nvar Recoil_filterMap = filterMap;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\n/**\n * Returns a set containing all of the values from the original set where\n * the given callback returned true.\n */\nfunction filterSet(set, callback) {\n    var result = new Set();\n    for (var _a = 0, set_3 = set; _a < set_3.length; _a++) {\n        var value = set_3[_a];\n        if (callback(value)) {\n            result.add(value);\n        }\n    }\n    return result;\n}\nvar Recoil_filterSet = filterSet;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nfunction mergeMaps() {\n    var maps = [];\n    for (var _a = 0; _a < arguments.length; _a++) {\n        maps[_a] = arguments[_a];\n    }\n    var result = new Map();\n    for (var i = 0; i < maps.length; i++) {\n        var iterator = maps[i].keys();\n        var nextKey = void 0;\n        while (!(nextKey = iterator.next()).done) {\n            // $FlowFixMe[incompatible-call] - map/iterator knows nothing about flow types\n            result.set(nextKey.value, maps[i].get(nextKey.value));\n        }\n    }\n    /* $FlowFixMe[incompatible-return] (>=0.66.0 site=www,mobile) This comment\n     * suppresses an error found when Flow v0.66 was deployed. To see the error\n     * delete this comment and run Flow. */\n    return result;\n}\nvar Recoil_mergeMaps = mergeMaps;\nvar batchUpdates$3 = Recoil_Batching.batchUpdates;\nvar DEFAULT_VALUE$3 = Recoil_Node.DEFAULT_VALUE, getNode$3 = Recoil_Node.getNode, nodes$1 = Recoil_Node.nodes;\nvar useStoreRef$3 = Recoil_RecoilRoot_react.useStoreRef;\nvar AbstractRecoilValue$4 = Recoil_RecoilValueInterface.AbstractRecoilValue, setRecoilValueLoadable$1 = Recoil_RecoilValueInterface.setRecoilValueLoadable;\nvar SUSPENSE_TIMEOUT_MS$2 = Recoil_Retention.SUSPENSE_TIMEOUT_MS;\nvar Snapshot$1 = Recoil_Snapshot$1.Snapshot, cloneSnapshot$1 = Recoil_Snapshot$1.cloneSnapshot;\nvar isSSR$3 = Recoil_Environment.isSSR;\nvar useCallback$2 = react.useCallback, useEffect$4 = react.useEffect, useRef$5 = react.useRef, useState$2 = react.useState;\nfunction useTransactionSubscription(callback) {\n    var storeRef = useStoreRef$3();\n    useEffect$4(function () {\n        var sub = storeRef.current.subscribeToTransactions(callback);\n        return sub.release;\n    }, [callback, storeRef]);\n}\nfunction externallyVisibleAtomValuesInState(state) {\n    var atomValues = state.atomValues.toMap();\n    var persistedAtomContentsValues = Recoil_mapMap(Recoil_filterMap(atomValues, function (v, k) {\n        var node = getNode$3(k);\n        var persistence = node.persistence_UNSTABLE;\n        return persistence != null && persistence.type !== \'none\' && v.state === \'hasValue\';\n    }), function (v) { return v.contents; }); // Merge in nonvalidated atoms; we may not have defs for them but they will\n    // all have persistence on or they wouldn\'t be there in the first place.\n    return Recoil_mergeMaps(state.nonvalidatedAtoms.toMap(), persistedAtomContentsValues);\n}\n/**\n  Calls the given callback after any atoms have been modified and the consequent\n  component re-renders have been committed. This is intended for persisting\n  the values of the atoms to storage. The stored values can then be restored\n  using the useSetUnvalidatedAtomValues hook.\n\n  The callback receives the following info:\n\n  atomValues: The current value of every atom that is both persistable (persistence\n              type not set to \'none\') and whose value is available (not in an\n              error or loading state).\n\n  previousAtomValues: The value of every persistable and available atom before\n               the transaction began.\n\n  atomInfo: A map containing the persistence settings for each atom. Every key\n            that exists in atomValues will also exist in atomInfo.\n\n  modifiedAtoms: The set of atoms that were written to during the transaction.\n\n  transactionMetadata: Arbitrary information that was added via the\n          useSetUnvalidatedAtomValues hook. Useful for ignoring the useSetUnvalidatedAtomValues\n          transaction, to avoid loops.\n*/\nfunction useTransactionObservation_DEPRECATED(callback) {\n    useTransactionSubscription(useCallback$2(function (store) {\n        var previousTree = store.getState().previousTree;\n        var currentTree = store.getState().currentTree;\n        if (!previousTree) {\n            Recoil_recoverableViolation(\'Transaction subscribers notified without a previous tree being present -- this is a bug in Recoil\');\n            previousTree = store.getState().currentTree; // attempt to trundle on\n        }\n        var atomValues = externallyVisibleAtomValuesInState(currentTree);\n        var previousAtomValues = externallyVisibleAtomValuesInState(previousTree);\n        var atomInfo = Recoil_mapMap(nodes$1, function (node) {\n            var _node$persistence_UNS, _node$persistence_UNS2, _node$persistence_UNS3, _node$persistence_UNS4;\n            return {\n                persistence_UNSTABLE: {\n                    type: (_node$persistence_UNS = (_node$persistence_UNS2 = node.persistence_UNSTABLE) === null || _node$persistence_UNS2 === void 0 ? void 0 : _node$persistence_UNS2.type) !== null && _node$persistence_UNS !== void 0 ? _node$persistence_UNS : \'none\',\n                    backButton: (_node$persistence_UNS3 = (_node$persistence_UNS4 = node.persistence_UNSTABLE) === null || _node$persistence_UNS4 === void 0 ? void 0 : _node$persistence_UNS4.backButton) !== null && _node$persistence_UNS3 !== void 0 ? _node$persistence_UNS3 : false\n                }\n            };\n        }); // Filter on existance in atomValues so that externally-visible rules\n        // are also applied to modified atoms (specifically exclude selectors):\n        var modifiedAtoms = Recoil_filterSet(currentTree.dirtyAtoms, function (k) { return atomValues.has(k) || previousAtomValues.has(k); });\n        callback({\n            atomValues: atomValues,\n            previousAtomValues: previousAtomValues,\n            atomInfo: atomInfo,\n            modifiedAtoms: modifiedAtoms,\n            transactionMetadata: __assign({}, currentTree.transactionMetadata)\n        });\n    }, [callback]));\n}\nfunction useRecoilTransactionObserver(callback) {\n    useTransactionSubscription(useCallback$2(function (store) {\n        var snapshot = cloneSnapshot$1(store, \'current\');\n        var previousSnapshot = cloneSnapshot$1(store, \'previous\');\n        callback({\n            snapshot: snapshot,\n            previousSnapshot: previousSnapshot\n        });\n    }, [callback]));\n} // Return a snapshot of the current state and subscribe to all state changes\nfunction useRecoilSnapshot() {\n    var storeRef = useStoreRef$3();\n    var _a = useState$2(function () { return cloneSnapshot$1(storeRef.current); }), snapshot = _a[0], setSnapshot = _a[1];\n    var previousSnapshot = Recoil_usePrevious(snapshot);\n    var timeoutID = useRef$5();\n    useEffect$4(function () {\n        if (timeoutID.current && !isSSR$3) {\n            window.clearTimeout(timeoutID.current);\n        }\n        return snapshot.retain();\n    }, [snapshot]);\n    useTransactionSubscription(useCallback$2(function (store) { return setSnapshot(cloneSnapshot$1(store)); }, []));\n    if (previousSnapshot !== snapshot && !isSSR$3) {\n        if (timeoutID.current) {\n            previousSnapshot === null || previousSnapshot === void 0 ? void 0 : previousSnapshot.release_INTERNAL();\n            window.clearTimeout(timeoutID.current);\n        }\n        snapshot.retain();\n        timeoutID.current = window.setTimeout(function () {\n            snapshot.release_INTERNAL();\n            timeoutID.current = null;\n        }, SUSPENSE_TIMEOUT_MS$2);\n    }\n    return snapshot;\n}\nfunction useGotoRecoilSnapshot() {\n    var storeRef = useStoreRef$3();\n    return useCallback$2(function (snapshot) {\n        var _storeState$nextTree;\n        var storeState = storeRef.current.getState();\n        var prev = (_storeState$nextTree = storeState.nextTree) !== null && _storeState$nextTree !== void 0 ? _storeState$nextTree : storeState.currentTree;\n        var next = snapshot.getStore_INTERNAL().getState().currentTree;\n        batchUpdates$3(function () {\n            var keysToUpdate = new Set();\n            for (var _a = 0, _b = [prev.atomValues.keys(), next.atomValues.keys()]; _a < _b.length; _a++) {\n                var keys = _b[_a];\n                for (var _c = 0, keys_1 = keys; _c < keys_1.length; _c++) {\n                    var key = keys_1[_c];\n                    var _prev$atomValues$get, _next$atomValues$get;\n                    if (((_prev$atomValues$get = prev.atomValues.get(key)) === null || _prev$atomValues$get === void 0 ? void 0 : _prev$atomValues$get.contents) !== ((_next$atomValues$get = next.atomValues.get(key)) === null || _next$atomValues$get === void 0 ? void 0 : _next$atomValues$get.contents) && getNode$3(key).shouldRestoreFromSnapshots) {\n                        keysToUpdate.add(key);\n                    }\n                }\n            }\n            keysToUpdate.forEach(function (key) {\n                setRecoilValueLoadable$1(storeRef.current, new AbstractRecoilValue$4(key), next.atomValues.has(key) ? Recoil_nullthrows(next.atomValues.get(key)) : DEFAULT_VALUE$3);\n            });\n            storeRef.current.replaceState(function (state) {\n                return __assign(__assign({}, state), { stateID: snapshot.getID_INTERNAL() });\n            });\n        });\n    }, [storeRef]);\n}\nvar Recoil_SnapshotHooks = {\n    useRecoilSnapshot: useRecoilSnapshot,\n    useGotoRecoilSnapshot: useGotoRecoilSnapshot,\n    useRecoilTransactionObserver: useRecoilTransactionObserver,\n    useTransactionObservation_DEPRECATED: useTransactionObservation_DEPRECATED,\n    useTransactionSubscription_DEPRECATED: useTransactionSubscription\n};\nvar peekNodeInfo$2 = Recoil_FunctionalCore.peekNodeInfo;\nvar useStoreRef$4 = Recoil_RecoilRoot_react.useStoreRef;\nfunction useGetRecoilValueInfo() {\n    var storeRef = useStoreRef$4();\n    return function (_a) {\n        var key = _a.key;\n        return peekNodeInfo$2(storeRef.current, storeRef.current.getState().currentTree, key);\n    };\n}\nvar Recoil_useGetRecoilValueInfo = useGetRecoilValueInfo;\nvar RecoilRoot$1 = Recoil_RecoilRoot_react.RecoilRoot, useStoreRef$5 = Recoil_RecoilRoot_react.useStoreRef;\nvar useMemo$2 = react.useMemo;\nfunction useRecoilBridgeAcrossReactRoots() {\n    var store = useStoreRef$5().current;\n    return useMemo$2(function () {\n        // eslint-disable-next-line no-shadow\n        function RecoilBridge(_a) {\n            var children = _a.children;\n            return /*#__PURE__*/ react.createElement(RecoilRoot$1, {\n                store_INTERNAL: store\n            }, children);\n        }\n        return RecoilBridge;\n    }, [store]);\n}\nvar Recoil_useRecoilBridgeAcrossReactRoots = useRecoilBridgeAcrossReactRoots;\nvar loadableWithValue$1 = Recoil_Loadable$1.loadableWithValue;\nvar DEFAULT_VALUE$4 = Recoil_Node.DEFAULT_VALUE, getNode$4 = Recoil_Node.getNode;\nvar copyTreeState$1 = Recoil_RecoilValueInterface.copyTreeState, getRecoilValueAsLoadable$3 = Recoil_RecoilValueInterface.getRecoilValueAsLoadable, invalidateDownstreams$1 = Recoil_RecoilValueInterface.invalidateDownstreams, writeLoadableToTreeState$1 = Recoil_RecoilValueInterface.writeLoadableToTreeState;\nfunction isAtom(recoilValue) {\n    return getNode$4(recoilValue.key).nodeType === \'atom\';\n}\nvar TransactionInterfaceImpl = /** @class */ (function () {\n    function TransactionInterfaceImpl(store, treeState) {\n        var _this = this;\n        _defineProperty(this, "_store", void 0);\n        _defineProperty(this, "_treeState", void 0);\n        _defineProperty(this, "_changes", void 0);\n        _defineProperty(this, "get", function (recoilValue) {\n            if (_this._changes.has(recoilValue.key)) {\n                // $FlowFixMe[incompatible-return]\n                return _this._changes.get(recoilValue.key);\n            }\n            if (!isAtom(recoilValue)) {\n                throw Recoil_err(\'Reading selectors within atomicUpdate is not supported\');\n            }\n            var loadable = getRecoilValueAsLoadable$3(_this._store, recoilValue, _this._treeState);\n            if (loadable.state === \'hasValue\') {\n                return loadable.contents;\n            }\n            else if (loadable.state === \'hasError\') {\n                throw loadable.contents;\n            }\n            else {\n                throw Recoil_err("Expected Recoil atom " + recoilValue.key + " to have a value, but it is in a loading state.");\n            }\n        });\n        _defineProperty(this, "set", function (recoilState, valueOrUpdater) {\n            if (!isAtom(recoilState)) {\n                throw Recoil_err(\'Setting selectors within atomicUpdate is not supported\');\n            }\n            if (typeof valueOrUpdater === \'function\') {\n                var current = _this.get(recoilState);\n                _this._changes.set(recoilState.key, valueOrUpdater(current)); // flowlint-line unclear-type:off\n            }\n            else {\n                _this._changes.set(recoilState.key, valueOrUpdater);\n            }\n        });\n        _defineProperty(this, "reset", function (recoilState) {\n            _this.set(recoilState, DEFAULT_VALUE$4);\n        });\n        this._store = store;\n        this._treeState = treeState;\n        this._changes = new Map();\n    } // Allow destructing\n    // eslint-disable-next-line fb-www/extra-arrow-initializer\n    TransactionInterfaceImpl.prototype.newTreeState_INTERNAL = function () {\n        if (this._changes.size === 0) {\n            return this._treeState;\n        }\n        var newState = copyTreeState$1(this._treeState);\n        for (var _a = 0, _b = this._changes; _a < _b.length; _a++) {\n            var _c = _b[_a], k = _c[0], v = _c[1];\n            writeLoadableToTreeState$1(newState, k, loadableWithValue$1(v));\n        }\n        invalidateDownstreams$1(this._store, newState);\n        return newState;\n    };\n    return TransactionInterfaceImpl;\n}());\nfunction atomicUpdater(store) {\n    return function (fn) {\n        store.replaceState(function (treeState) {\n            var changeset = new TransactionInterfaceImpl(store, treeState);\n            fn(changeset);\n            return changeset.newTreeState_INTERNAL();\n        });\n    };\n}\nvar Recoil_AtomicUpdates = {\n    atomicUpdater: atomicUpdater\n};\nvar Recoil_AtomicUpdates_1 = Recoil_AtomicUpdates.atomicUpdater;\nvar Recoil_AtomicUpdates$1 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    atomicUpdater: Recoil_AtomicUpdates_1\n});\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nfunction invariant(condition, message) {\n    if (!condition) {\n        throw new Error(message);\n    }\n}\nvar invariant_1 = invariant;\n// @oss-only\nvar Recoil_invariant = invariant_1;\nvar atomicUpdater$1 = Recoil_AtomicUpdates$1.atomicUpdater;\nvar batchUpdates$4 = Recoil_Batching.batchUpdates;\nvar DEFAULT_VALUE$5 = Recoil_Node.DEFAULT_VALUE;\nvar useStoreRef$6 = Recoil_RecoilRoot_react.useStoreRef;\nvar setRecoilValue$3 = Recoil_RecoilValueInterface.setRecoilValue;\nvar Snapshot$2 = Recoil_Snapshot$1.Snapshot, cloneSnapshot$2 = Recoil_Snapshot$1.cloneSnapshot;\nvar useGotoRecoilSnapshot$1 = Recoil_SnapshotHooks.useGotoRecoilSnapshot;\nvar useCallback$3 = react.useCallback;\nvar Sentinel = /** @class */ (function () {\n    function Sentinel() {\n    }\n    return Sentinel;\n}());\nvar SENTINEL = new Sentinel();\nfunction useRecoilCallback(fn, deps) {\n    var storeRef = useStoreRef$6();\n    var gotoSnapshot = useGotoRecoilSnapshot$1();\n    return useCallback$3(function () {\n        var args = [];\n        for (var _a = 0; _a < arguments.length; _a++) {\n            args[_a] = arguments[_a];\n        }\n        function set(recoilState, newValueOrUpdater) {\n            setRecoilValue$3(storeRef.current, recoilState, newValueOrUpdater);\n        }\n        function reset(recoilState) {\n            setRecoilValue$3(storeRef.current, recoilState, DEFAULT_VALUE$5);\n        } // Use currentTree for the snapshot to show the currently committed state\n        var snapshot = cloneSnapshot$2(storeRef.current); // FIXME massive gains from doing this lazily\n        var atomicUpdate = atomicUpdater$1(storeRef.current);\n        var ret = SENTINEL;\n        batchUpdates$4(function () {\n            var errMsg = \'useRecoilCallback expects a function that returns a function: \' + \'it accepts a function of the type (RecoilInterface) => T = R \' + \'and returns a callback function T => R, where RecoilInterface is an \' + \'object {snapshot, set, ...} and T and R are the argument and return \' + \'types of the callback you want to create.  Please see the docs \' + \'at recoiljs.org for details.\';\n            if (typeof fn !== \'function\') {\n                throw Recoil_err(errMsg);\n            } // flowlint-next-line unclear-type:off\n            var cb = fn({\n                set: set,\n                reset: reset,\n                snapshot: snapshot,\n                gotoSnapshot: gotoSnapshot,\n                transact_UNSTABLE: atomicUpdate\n            });\n            if (typeof cb !== \'function\') {\n                throw Recoil_err(errMsg);\n            }\n            ret = cb.apply(void 0, args);\n        });\n        !!(ret instanceof Sentinel) ?  false ? 0 : Recoil_invariant(false) : void 0;\n        return ret;\n    }, deps != null ? __spreadArray(__spreadArray([], deps, true), [storeRef], false) : undefined // eslint-disable-line fb-www/react-hooks-deps\n    );\n}\nvar Recoil_useRecoilCallback = useRecoilCallback;\nvar getNode$5 = Recoil_Node.getNode;\nvar useStoreRef$7 = Recoil_RecoilRoot_react.useStoreRef;\nvar useCallback$4 = react.useCallback;\nfunction useRecoilRefresher(recoilValue) {\n    var storeRef = useStoreRef$7();\n    return useCallback$4(function () {\n        var _node$clearCache;\n        var store = storeRef.current;\n        var currentTree = store.getState().currentTree;\n        var node = getNode$5(recoilValue.key);\n        (_node$clearCache = node.clearCache) === null || _node$clearCache === void 0 ? void 0 : _node$clearCache.call(node, store, currentTree);\n    }, [recoilValue, storeRef]);\n}\nvar Recoil_useRecoilRefresher = useRecoilRefresher;\nvar atomicUpdater$2 = Recoil_AtomicUpdates$1.atomicUpdater;\nvar useStoreRef$8 = Recoil_RecoilRoot_react.useStoreRef;\nvar useMemo$3 = react.useMemo;\nfunction useRecoilTransaction(fn, deps) {\n    var storeRef = useStoreRef$8();\n    return useMemo$3(function () { return function () {\n        var args = [];\n        for (var _a = 0; _a < arguments.length; _a++) {\n            args[_a] = arguments[_a];\n        }\n        var atomicUpdate = atomicUpdater$2(storeRef.current);\n        atomicUpdate(function (transactionInterface) {\n            fn(transactionInterface).apply(void 0, args);\n        });\n    }; }, deps != null ? __spreadArray(__spreadArray([], deps, true), [storeRef], false) : undefined // eslint-disable-line fb-www/react-hooks-deps\n    );\n}\nvar Recoil_useRecoilTransaction = useRecoilTransaction;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nfunction isNode(object) {\n    var _ownerDocument, _doc$defaultView;\n    if (typeof window === \'undefined\') {\n        return false;\n    }\n    var doc = object != null ? (_ownerDocument = object.ownerDocument) !== null && _ownerDocument !== void 0 ? _ownerDocument : object : document;\n    var defaultView = (_doc$defaultView = doc.defaultView) !== null && _doc$defaultView !== void 0 ? _doc$defaultView : window;\n    return !!(object != null && (typeof defaultView.Node === \'function\' ? object instanceof defaultView.Node : typeof object === \'object\' && typeof object.nodeType === \'number\' && typeof object.nodeName === \'string\'));\n}\nvar Recoil_isNode = (/* unused pure expression or super */ null && (isNode));\nvar isReactNative$1 = Recoil_Environment.isReactNative, isSSR$4 = Recoil_Environment.isSSR;\nfunction shouldNotBeFrozen(value) {\n    // Primitives and functions:\n    if (value === null || typeof value !== \'object\') {\n        return true;\n    } // React elements:\n    switch (typeof value.$$typeof) {\n        case \'symbol\':\n            return true;\n        case \'number\':\n            return true;\n    } // Immutable structures:\n    if (value[\'@@__IMMUTABLE_ITERABLE__@@\'] != null || value[\'@@__IMMUTABLE_KEYED__@@\'] != null || value[\'@@__IMMUTABLE_INDEXED__@@\'] != null || value[\'@@__IMMUTABLE_ORDERED__@@\'] != null || value[\'@@__IMMUTABLE_RECORD__@@\'] != null) {\n        return true;\n    } // DOM nodes:\n    if (Recoil_isNode(value)) {\n        return true;\n    }\n    if (Recoil_isPromise(value)) {\n        return true;\n    }\n    if (value instanceof Error) {\n        return true;\n    }\n    if (ArrayBuffer.isView(value)) {\n        return true;\n    } // Some environments, just as Jest, don\'t work with the instanceof check\n    if (!isSSR$4 && !isReactNative$1 && ( // $FlowFixMe(site=recoil) Window does not have a FlowType definition https://github.com/facebook/flow/issues/6709\n    value === window || value instanceof Window)) {\n        return true;\n    }\n    return false;\n} // Recursively freeze a value to enforce it is read-only.\n// This may also have minimal performance improvements for enumerating\n// objects (based on browser implementations, of course)\nfunction deepFreezeValue(value) {\n    if (typeof value !== \'object\' || shouldNotBeFrozen(value)) {\n        return;\n    }\n    Object.freeze(value); // Make all properties read-only\n    for (var key in value) {\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        if (Object.prototype.hasOwnProperty.call(value, key)) {\n            var prop = value[key]; // Prevent infinite recurssion for circular references.\n            if (typeof prop === \'object\' && prop != null && !Object.isFrozen(prop)) {\n                deepFreezeValue(prop);\n            }\n        }\n    }\n    Object.seal(value); // This also makes existing properties non-configurable.\n}\nvar Recoil_deepFreezeValue = (/* unused pure expression or super */ null && (deepFreezeValue));\nvar TIME_WARNING_THRESHOLD_MS = 15;\nfunction stringify(x, opt, key) {\n    // A optimization to avoid the more expensive JSON.stringify() for simple strings\n    // This may lose protection for u2028 and u2029, though.\n    if (typeof x === \'string\' && !x.includes(\'"\') && !x.includes(\'\\\\\')) {\n        return "\\"" + x + "\\"";\n    } // Handle primitive types\n    switch (typeof x) {\n        case \'undefined\':\n            return \'\';\n        // JSON.stringify(undefined) returns undefined, but we always want to return a string\n        case \'boolean\':\n            return x ? \'true\' : \'false\';\n        case \'number\':\n        case \'symbol\':\n            // case \'bigint\': // BigInt is not supported in www\n            return String(x);\n        case \'string\':\n            // Add surrounding quotes and escape internal quotes\n            return JSON.stringify(x);\n        case \'function\':\n            if ((opt === null || opt === void 0 ? void 0 : opt.allowFunctions) !== true) {\n                throw Recoil_err(\'Attempt to serialize function in a Recoil cache key\');\n            }\n            return "__FUNCTION(" + x.name + ")__";\n    }\n    if (x === null) {\n        return \'null\';\n    } // Fallback case for unknown types\n    if (typeof x !== \'object\') {\n        var _JSON$stringify;\n        return (_JSON$stringify = JSON.stringify(x)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : \'\';\n    } // Deal with all promises as equivalent for now.\n    if (Recoil_isPromise(x)) {\n        return \'__PROMISE__\';\n    } // Arrays handle recursive stringification\n    if (Array.isArray(x)) {\n        return "[" + x.map(function (v, i) { return stringify(v, opt, i.toString()); }) + "]";\n    } // If an object defines a toJSON() method, then use that to override the\n    // serialization.  This matches the behavior of JSON.stringify().\n    // Pass the key for compatibility.\n    // Immutable.js collections define this method to allow us to serialize them.\n    if (typeof x.toJSON === \'function\') {\n        // flowlint-next-line unclear-type: off\n        return stringify(x.toJSON(key), opt, key);\n    } // For built-in Maps, sort the keys in a stable order instead of the\n    // default insertion order.  Support non-string keys.\n    if (x instanceof Map) {\n        var obj = {};\n        for (var _a = 0, x_1 = x; _a < x_1.length; _a++) {\n            var _b = x_1[_a], k = _b[0], v = _b[1];\n            // Stringify will escape any nested quotes\n            obj[typeof k === \'string\' ? k : stringify(k, opt)] = v;\n        }\n        return stringify(obj, opt, key);\n    } // For built-in Sets, sort the keys in a stable order instead of the\n    // default insertion order.\n    if (x instanceof Set) {\n        return stringify(Array.from(x).sort(function (a, b) { return stringify(a, opt).localeCompare(stringify(b, opt)); }), opt, key);\n    } // Anything else that is iterable serialize as an Array.\n    if (Symbol !== undefined && x[Symbol.iterator] != null && typeof x[Symbol.iterator] === \'function\') {\n        // flowlint-next-line unclear-type: off\n        return stringify(Array.from(x), opt, key);\n    } // For all other Objects, sort the keys in a stable order.\n    return "{" + Object.keys(x).filter(function (k) { return x[k] !== undefined; }).sort() // stringify the key to add quotes and escape any nested slashes or quotes.\n        .map(function (k) { return stringify(k, opt) + ":" + stringify(x[k], opt, k); }).join(\',\') + "}";\n} // Utility similar to JSON.stringify() except:\n// * Serialize built-in Sets as an Array\n// * Serialize built-in Maps as an Object.  Supports non-string keys.\n// * Serialize other iterables as arrays\n// * Sort the keys of Objects and Maps to have a stable order based on string conversion.\n//    This overrides their default insertion order.\n// * Still uses toJSON() of any object to override serialization\n// * Support Symbols (though don\'t guarantee uniqueness)\n// * We could support BigInt, but Flow doesn\'t seem to like it.\n// See Recoil_stableStringify-test.js for examples\nfunction stableStringify(x, opt) {\n    if (opt === void 0) { opt = {\n        allowFunctions: false\n    }; }\n    if (false) { var endTime, str, startTime; }\n    return stringify(x, opt);\n}\nvar Recoil_stableStringify = stableStringify;\nvar TreeCache = /** @class */ (function () {\n    function TreeCache(options) {\n        var _options$onHit, _options$onSet, _options$mapNodeValue;\n        _defineProperty(this, "_numLeafs", void 0);\n        _defineProperty(this, "_root", void 0);\n        _defineProperty(this, "_onHit", void 0);\n        _defineProperty(this, "_onSet", void 0);\n        _defineProperty(this, "_mapNodeValue", void 0);\n        this._numLeafs = 0;\n        this._root = null;\n        this._onHit = (_options$onHit = options === null || options === void 0 ? void 0 : options.onHit) !== null && _options$onHit !== void 0 ? _options$onHit : function () { };\n        this._onSet = (_options$onSet = options === null || options === void 0 ? void 0 : options.onSet) !== null && _options$onSet !== void 0 ? _options$onSet : function () { };\n        this._mapNodeValue = (_options$mapNodeValue = options === null || options === void 0 ? void 0 : options.mapNodeValue) !== null && _options$mapNodeValue !== void 0 ? _options$mapNodeValue : function (val) { return val; };\n    }\n    TreeCache.prototype.size = function () {\n        return this._numLeafs;\n    }; // TODO: nodeCount(): number\n    TreeCache.prototype.root = function () {\n        return this._root;\n    };\n    TreeCache.prototype.get = function (getNodeValue, handlers) {\n        var _this$getLeafNode;\n        return (_this$getLeafNode = this.getLeafNode(getNodeValue, handlers)) === null || _this$getLeafNode === void 0 ? void 0 : _this$getLeafNode.value;\n    };\n    TreeCache.prototype.getLeafNode = function (getNodeValue, handlers) {\n        var _this = this;\n        return findLeaf(this.root(), function (nodeKey) { return _this._mapNodeValue(getNodeValue(nodeKey)); }, {\n            onNodeVisit: function (node) {\n                handlers === null || handlers === void 0 ? void 0 : handlers.onNodeVisit(node);\n                if (node.type === \'leaf\') {\n                    _this._onHit(node);\n                }\n            }\n        });\n    };\n    TreeCache.prototype.set = function (route, value, handlers) {\n        var _this = this;\n        var leafNode;\n        var newRoot = null;\n        var setRetryablePart = function () {\n            newRoot = addLeaf(_this.root(), route.map(function (_a) {\n                var nodeKey = _a[0], nodeValue = _a[1];\n                return [nodeKey, _this._mapNodeValue(nodeValue)];\n            }), null, value, null, {\n                onNodeVisit: function (node) {\n                    handlers === null || handlers === void 0 ? void 0 : handlers.onNodeVisit(node);\n                    if (node.type === \'leaf\') {\n                        leafNode = node;\n                    }\n                }\n            }, function () {\n                _this.clear();\n                setRetryablePart();\n            });\n        };\n        setRetryablePart();\n        if (!this.root()) {\n            this._root = newRoot;\n        }\n        this._numLeafs++;\n        this._onSet(Recoil_nullthrows(leafNode));\n    };\n    TreeCache.prototype.delete = function (node) {\n        if (!this.root()) {\n            return false;\n        }\n        var root = Recoil_nullthrows(this.root());\n        var existsInTree = pruneNodeFromTree(root, node, node.parent);\n        if (!existsInTree) {\n            return false;\n        }\n        if (node === root || root.type === \'branch\' && !root.branches.size) {\n            this._root = null;\n            this._numLeafs = 0;\n            return true;\n        }\n        this._numLeafs -= countDownstreamLeaves(node);\n        return true;\n    };\n    TreeCache.prototype.clear = function () {\n        this._numLeafs = 0;\n        this._root = null;\n    };\n    return TreeCache;\n}());\nvar findLeaf = function (root, getNodeValue, handlers) {\n    var _handlers$onNodeVisit;\n    if (root == null) {\n        return undefined;\n    }\n    handlers === null || handlers === void 0 ? void 0 : (_handlers$onNodeVisit = handlers.onNodeVisit) === null || _handlers$onNodeVisit === void 0 ? void 0 : _handlers$onNodeVisit.call(handlers, root);\n    if (root.type === \'leaf\') {\n        return root;\n    }\n    var nodeValue = getNodeValue(root.nodeKey);\n    return findLeaf(root.branches.get(nodeValue), getNodeValue, handlers);\n};\nvar addLeaf = function (root, route, parent, value, branchKey, handlers, onAbort) {\n    var _handlers$onNodeVisit2;\n    var node;\n    if (root == null) {\n        if (route.length === 0) {\n            node = {\n                type: \'leaf\',\n                value: value,\n                parent: parent,\n                branchKey: branchKey\n            };\n        }\n        else {\n            var path = route[0], rest = route.slice(1);\n            var nodeKey = path[0], nodeValue = path[1];\n            node = {\n                type: \'branch\',\n                nodeKey: nodeKey,\n                parent: parent,\n                branches: new Map(),\n                branchKey: branchKey\n            };\n            node.branches.set(nodeValue, addLeaf(null, rest, node, value, nodeValue, handlers, onAbort));\n        }\n    }\n    else {\n        node = root;\n        if (route.length) {\n            var path = route[0], rest = route.slice(1);\n            var nodeKey = path[0], nodeValue = path[1];\n            if (root.type !== \'branch\' || root.nodeKey !== nodeKey) {\n                Recoil_recoverableViolation(\'Existing cache must have a branch midway through the \' + \'route with matching node key. Resetting cache.\');\n                onAbort();\n                return node; // ignored\n            }\n            root.branches.set(nodeValue, addLeaf(root.branches.get(nodeValue), rest, root, value, nodeValue, handlers, onAbort));\n        }\n    }\n    handlers === null || handlers === void 0 ? void 0 : (_handlers$onNodeVisit2 = handlers.onNodeVisit) === null || _handlers$onNodeVisit2 === void 0 ? void 0 : _handlers$onNodeVisit2.call(handlers, node);\n    return node;\n};\nvar pruneNodeFromTree = function (root, node, parent) {\n    if (!parent) {\n        return root === node;\n    }\n    parent.branches.delete(node.branchKey);\n    return pruneUpstreamBranches(root, parent, parent.parent);\n};\nvar pruneUpstreamBranches = function (root, branchNode, parent) {\n    if (!parent) {\n        return root === branchNode;\n    }\n    if (branchNode.branches.size === 0) {\n        parent.branches.delete(branchNode.branchKey);\n    }\n    return pruneUpstreamBranches(root, parent, parent.parent);\n};\nvar countDownstreamLeaves = function (node) { return node.type === \'leaf\' ? 1 : Array.from(node.branches.values()).reduce(function (sum, currNode) { return sum + countDownstreamLeaves(currNode); }, 0); };\nvar Recoil_TreeCache = {\n    TreeCache: TreeCache\n};\nvar Recoil_TreeCache_1 = Recoil_TreeCache.TreeCache;\nvar Recoil_TreeCache$1 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    TreeCache: Recoil_TreeCache_1\n});\nvar LRUCache = /** @class */ (function () {\n    function LRUCache(options) {\n        var _options$mapKey;\n        _defineProperty(this, "_maxSize", void 0);\n        _defineProperty(this, "_size", void 0);\n        _defineProperty(this, "_head", void 0);\n        _defineProperty(this, "_tail", void 0);\n        _defineProperty(this, "_map", void 0);\n        _defineProperty(this, "_keyMapper", void 0);\n        this._maxSize = options.maxSize;\n        this._size = 0;\n        this._head = null;\n        this._tail = null;\n        this._map = new Map();\n        this._keyMapper = (_options$mapKey = options.mapKey) !== null && _options$mapKey !== void 0 ? _options$mapKey : function (v) { return v; };\n    }\n    LRUCache.prototype.head = function () {\n        return this._head;\n    };\n    LRUCache.prototype.tail = function () {\n        return this._tail;\n    };\n    LRUCache.prototype.size = function () {\n        return this._size;\n    };\n    LRUCache.prototype.maxSize = function () {\n        return this._maxSize;\n    };\n    LRUCache.prototype.has = function (key) {\n        return this._map.has(this._keyMapper(key));\n    };\n    LRUCache.prototype.get = function (key) {\n        var mappedKey = this._keyMapper(key);\n        var node = this._map.get(mappedKey);\n        if (!node) {\n            return undefined;\n        }\n        this.set(key, node.value);\n        return node.value;\n    };\n    LRUCache.prototype.set = function (key, val) {\n        var mappedKey = this._keyMapper(key);\n        var existingNode = this._map.get(mappedKey);\n        if (existingNode) {\n            this.delete(key);\n        }\n        var head = this.head();\n        var node = {\n            key: key,\n            right: head,\n            left: null,\n            value: val\n        };\n        if (head) {\n            head.left = node;\n        }\n        else {\n            this._tail = node;\n        }\n        this._map.set(mappedKey, node);\n        this._head = node;\n        this._size++;\n        this._maybeDeleteLRU();\n    };\n    LRUCache.prototype._maybeDeleteLRU = function () {\n        if (this.size() > this.maxSize()) {\n            this.deleteLru();\n        }\n    };\n    LRUCache.prototype.deleteLru = function () {\n        var tail = this.tail();\n        if (tail) {\n            this.delete(tail.key);\n        }\n    };\n    LRUCache.prototype.delete = function (key) {\n        var mappedKey = this._keyMapper(key);\n        if (!this._size || !this._map.has(mappedKey)) {\n            return;\n        }\n        var node = Recoil_nullthrows(this._map.get(mappedKey));\n        var right = node.right;\n        var left = node.left;\n        if (right) {\n            right.left = node.left;\n        }\n        if (left) {\n            left.right = node.right;\n        }\n        if (node === this.head()) {\n            this._head = right;\n        }\n        if (node === this.tail()) {\n            this._tail = left;\n        }\n        this._map.delete(mappedKey);\n        this._size--;\n    };\n    LRUCache.prototype.clear = function () {\n        this._size = 0;\n        this._head = null;\n        this._tail = null;\n        this._map = new Map();\n    };\n    return LRUCache;\n}());\nvar Recoil_LRUCache = {\n    LRUCache: LRUCache\n};\nvar Recoil_LRUCache_1 = Recoil_LRUCache.LRUCache;\nvar Recoil_LRUCache$1 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    LRUCache: Recoil_LRUCache_1\n});\nvar LRUCache$1 = Recoil_LRUCache$1.LRUCache;\nvar TreeCache$1 = Recoil_TreeCache$1.TreeCache;\nfunction treeCacheLRU(maxSize, mapNodeValue) {\n    if (mapNodeValue === void 0) { mapNodeValue = function (v) { return v; }; }\n    var lruCache = new LRUCache$1({\n        maxSize: maxSize\n    });\n    var cache = new TreeCache$1({\n        mapNodeValue: mapNodeValue,\n        onHit: function (node) {\n            lruCache.set(node, true);\n        },\n        onSet: function (node) {\n            var lruNode = lruCache.tail();\n            lruCache.set(node, true);\n            if (lruNode && cache.size() > maxSize) {\n                cache.delete(lruNode.key);\n            }\n        }\n    }); // $FlowFixMe[method-unbinding]\n    return cache;\n}\nvar Recoil_treeCacheLRU = treeCacheLRU;\nvar TreeCache$2 = Recoil_TreeCache$1.TreeCache;\nvar defaultPolicy = {\n    equality: \'reference\',\n    eviction: \'keep-all\',\n    maxSize: Infinity\n};\nfunction treeCacheFromPolicy(_a) {\n    var _b = _a === void 0 ? defaultPolicy : _a, _c = _b.equality, equality = _c === void 0 ? defaultPolicy.equality : _c, _d = _b.eviction, eviction = _d === void 0 ? defaultPolicy.eviction : _d, _e = _b.maxSize, maxSize = _e === void 0 ? defaultPolicy.maxSize : _e;\n    var valueMapper = getValueMapper(equality);\n    var treeCache = getTreeCache(eviction, maxSize, valueMapper);\n    return treeCache;\n}\nfunction getValueMapper(equality) {\n    switch (equality) {\n        case \'reference\':\n            return function (val) { return val; };\n        case \'value\':\n            return function (val) { return Recoil_stableStringify(val); };\n    }\n    throw Recoil_err("Unrecognized equality policy " + equality);\n}\nfunction getTreeCache(eviction, maxSize, mapNodeValue) {\n    switch (eviction) {\n        case \'keep-all\':\n            // $FlowFixMe[method-unbinding]\n            return new TreeCache$2({\n                mapNodeValue: mapNodeValue\n            });\n        case \'lru\':\n            return Recoil_treeCacheLRU(Recoil_nullthrows(maxSize), mapNodeValue);\n        case \'most-recent\':\n            return Recoil_treeCacheLRU(1, mapNodeValue);\n    }\n    throw Recoil_err("Unrecognized eviction policy " + eviction);\n}\nvar Recoil_treeCacheFromPolicy = treeCacheFromPolicy;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n *\n * This is a stub for some integration into FB internal stuff\n */\nfunction startPerfBlock(_id) {\n    return function () { return null; };\n}\nvar Recoil_PerformanceTimings = {\n    startPerfBlock: startPerfBlock\n};\nvar loadableWithError$1 = Recoil_Loadable$1.loadableWithError, loadableWithPromise$1 = Recoil_Loadable$1.loadableWithPromise, loadableWithValue$2 = Recoil_Loadable$1.loadableWithValue;\nvar getNodeLoadable$2 = Recoil_FunctionalCore.getNodeLoadable, peekNodeLoadable$1 = Recoil_FunctionalCore.peekNodeLoadable, setNodeValue$3 = Recoil_FunctionalCore.setNodeValue;\nvar saveDependencyMapToStore$1 = Recoil_Graph.saveDependencyMapToStore;\nvar DEFAULT_VALUE$6 = Recoil_Node.DEFAULT_VALUE, RecoilValueNotReady$2 = Recoil_Node.RecoilValueNotReady, getConfigDeletionHandler$1 = Recoil_Node.getConfigDeletionHandler, getNode$6 = Recoil_Node.getNode, registerNode$1 = Recoil_Node.registerNode;\nvar isRecoilValue$3 = Recoil_RecoilValue$1.isRecoilValue;\nvar AbstractRecoilValue$5 = Recoil_RecoilValue$1.AbstractRecoilValue;\nvar markRecoilValueModified$1 = Recoil_RecoilValueInterface.markRecoilValueModified, setRecoilValueLoadable$2 = Recoil_RecoilValueInterface.setRecoilValueLoadable;\nvar retainedByOptionWithDefault$1 = Recoil_Retention.retainedByOptionWithDefault;\nvar cloneSnapshot$3 = Recoil_Snapshot$1.cloneSnapshot;\nvar startPerfBlock$1 = Recoil_PerformanceTimings.startPerfBlock;\nvar Canceled = /** @class */ (function () {\n    function Canceled() {\n    }\n    return Canceled;\n}());\nvar CANCELED = new Canceled();\n/**\n * An ExecutionId is an arbitrary ID that lets us distinguish executions from\n * each other. This is necessary as we need a way of solving this problem:\n * "given 3 async executions, only update state for the \'latest\' execution when\n * it finishes running regardless of when the other 2 finish". ExecutionIds\n * provide a convenient way of identifying executions so that we can track and\n * manage them over time.\n */\nvar dependencyStack = []; // for detecting circular dependencies.\nvar waitingStores = new Map();\n/* eslint-disable no-redeclare */\nvar getNewExecutionId = (function () {\n    var executionId = 0;\n    return function () { return executionId++; };\n})();\nfunction getInitialExecutionInfo() {\n    return {\n        depValuesDiscoveredSoFarDuringAsyncWork: null,\n        latestLoadable: null,\n        latestExecutionId: null,\n        stateVersion: null\n    };\n}\nfunction selector(options) {\n    var recoilValue = null;\n    var key = options.key, get = options.get, cachePolicy = options.cachePolicy_UNSTABLE;\n    var set = options.set != null ? options.set : undefined; // flow\n    if (false) {} // This is every discovered dependency across executions\n    var discoveredDependencyNodeKeys = new Set();\n    var cache = Recoil_treeCacheFromPolicy(cachePolicy !== null && cachePolicy !== void 0 ? cachePolicy : {\n        equality: \'reference\',\n        eviction: \'keep-all\'\n    });\n    var retainedBy = retainedByOptionWithDefault$1(options.retainedBy_UNSTABLE);\n    var executionInfoMap = new Map();\n    var liveStoresCount = 0;\n    function selectorIsLive() {\n        return !Recoil_gkx_1(\'recoil_memory_managament_2020\') || liveStoresCount > 0;\n    }\n    function getExecutionInfo(store) {\n        if (!executionInfoMap.has(store)) {\n            executionInfoMap.set(store, getInitialExecutionInfo());\n        }\n        return Recoil_nullthrows(executionInfoMap.get(store));\n    }\n    function selectorInit(store) {\n        liveStoresCount++;\n        store.getState().knownSelectors.add(key); // FIXME remove knownSelectors?\n        return function () {\n            liveStoresCount--;\n            store.getState().knownSelectors.delete(key);\n            executionInfoMap.delete(store);\n        };\n    }\n    function selectorShouldDeleteConfigOnRelease() {\n        return getConfigDeletionHandler$1(key) !== undefined && !selectorIsLive();\n    }\n    function notifyStoreWhenAsyncSettles(store, loadable, executionId) {\n        if (loadable.state === \'loading\') {\n            var stores = waitingStores.get(executionId);\n            if (stores == null) {\n                waitingStores.set(executionId, stores = new Set());\n            }\n            stores.add(store);\n        }\n    }\n    function notifyStoresOfSettledAsync(newLoadable, executionId) {\n        var stores = waitingStores.get(executionId);\n        if (stores !== undefined) {\n            for (var _a = 0, stores_1 = stores; _a < stores_1.length; _a++) {\n                var store = stores_1[_a];\n                setRecoilValueLoadable$2(store, new AbstractRecoilValue$5(key), newLoadable);\n            }\n            waitingStores.delete(executionId);\n        }\n    }\n    function getCachedNodeLoadable(store, state, nodeKey) {\n        var isKeyPointingToSelector = store.getState().knownSelectors.has(nodeKey);\n        /**\n         * It\'s important that we don\'t bypass calling getNodeLoadable for atoms\n         * as getNodeLoadable has side effects in state\n         */\n        if (isKeyPointingToSelector && state.atomValues.has(nodeKey)) {\n            return Recoil_nullthrows(state.atomValues.get(nodeKey));\n        }\n        var loadable = getNodeLoadable$2(store, state, nodeKey);\n        if (loadable.state !== \'loading\' && isKeyPointingToSelector) {\n            state.atomValues.set(nodeKey, loadable);\n        }\n        return loadable;\n    }\n    /**\n     * This function attaches a then() and a catch() to a promise that was\n     * returned from a selector\'s get() (either explicitly or implicitly by\n     * running a function that uses the "async" keyword). If a selector\'s get()\n     * returns a promise, we have two possibilities:\n     *\n     * 1. The promise will resolve, in which case it will have completely finished\n     *    executing without any remaining pending dependencies. No more retries\n     *    are needed and we can proceed with updating the cache and notifying\n     *    subscribers (if it is the latest execution, otherwise only the cache\n     *    will be updated and subscriptions will not be fired). This is the case\n     *    handled by the attached then() handler.\n     *\n     * 2. The promise will throw because it either has an error or it came across\n     *    an async dependency that has not yet resolved, in which case we will\n     *    call wrapDepdencyPromise(), whose responsibility is to handle dependency\n     *    promises. This case is handled by the attached catch() handler.\n     *\n     * Both branches will eventually resolve to the final result of the selector\n     * (or an error if a real error occurred).\n     *\n     * The execution will run to completion even if it is stale, and its value\n     * will be cached. But stale executions will not update global state or update\n     * executionInfo as that is the responsibility of the \'latest\' execution.\n     *\n     * Note this function should not be passed a promise that was thrown--AKA a\n     * dependency promise. Dependency promises should be passed to\n     * wrapPendingDependencyPromise()).\n     */\n    function wrapPendingPromise(store, promise, state, depValues, executionId, loadingDepsState) {\n        return promise.then(function (value) {\n            if (!selectorIsLive()) {\n                // The selector was released since the request began; ignore the response.\n                clearExecutionInfo(store, executionId);\n                throw CANCELED;\n            }\n            var loadable = loadableWithValue$2(value);\n            maybeFreezeValue(value);\n            setCache(state, depValuesToDepRoute(depValues), loadable);\n            setDepsInStore(store, state, new Set(depValues.keys()), executionId);\n            setLoadableInStoreToNotifyDeps(store, loadable, executionId);\n            return value;\n        }).catch(function (errorOrPromise) {\n            if (!selectorIsLive()) {\n                // The selector was released since the request began; ignore the response.\n                clearExecutionInfo(store, executionId);\n                throw CANCELED;\n            }\n            if (isLatestExecution(store, executionId)) {\n                updateExecutionInfoDepValues(depValues, store, executionId);\n            }\n            if (Recoil_isPromise(errorOrPromise)) {\n                return wrapPendingDependencyPromise(store, errorOrPromise, state, depValues, executionId, loadingDepsState);\n            }\n            var loadable = loadableWithError$1(errorOrPromise);\n            maybeFreezeValue(errorOrPromise);\n            setCache(state, depValuesToDepRoute(depValues), loadable);\n            setDepsInStore(store, state, new Set(depValues.keys()), executionId);\n            setLoadableInStoreToNotifyDeps(store, loadable, executionId);\n            throw errorOrPromise;\n        });\n    }\n    /**\n     * This function attaches a then() and a catch() to a promise that was\n     * thrown from a selector\'s get(). If a selector\'s get() throws a promise,\n     * we have two possibilities:\n     *\n     * 1. The promise will resolve, meaning one of our selector\'s dependencies is\n     *    now available and we should "retry" our get() by running it again. This\n     *    is the case handled by the attached then() handler.\n     *\n     * 2. The promise will throw because something went wrong with the dependency\n     *    promise (in other words a real error occurred). This case is handled by\n     *    the attached catch() handler. If the dependency promise throws, it is\n     *    _always_ a real error and not another dependency promise (any dependency\n     *    promises would have been handled upstream).\n     *\n     * The then() branch will eventually resolve to the final result of the\n     * selector (or an error if a real error occurs), and the catch() will always\n     * resolve to an error because the dependency promise is a promise that was\n     * wrapped upstream, meaning it will only resolve to its real value or to a\n     * real error.\n     *\n     * The execution will run to completion even if it is stale, and its value\n     * will be cached. But stale executions will not update global state or update\n     * executionInfo as that is the responsibility of the \'latest\' execution.\n     *\n     * Note this function should not be passed a promise that was returned from\n     * get(). The intention is that this function is only passed promises that\n     * were thrown due to a pending dependency. Promises returned by get() should\n     * be passed to wrapPendingPromise() instead.\n     */\n    function wrapPendingDependencyPromise(store, promise, state, existingDeps, executionId, loadingDepsState) {\n        return promise.then(function (resolvedDep) {\n            if (!selectorIsLive()) {\n                // The selector was released since the request began; ignore the response.\n                clearExecutionInfo(store, executionId);\n                throw CANCELED;\n            } // Check if we are handling a pending Recoil dependency or if the user\n            // threw their own Promise to "suspend" a selector evaluation.  We need\n            // to check that the loadingDepPromise actually matches the promise that\n            // we caught in case the selector happened to catch the promise we threw\n            // for a pending Recoil dependency from `getRecoilValue()` and threw\n            // their own promise instead.\n            if (loadingDepsState.loadingDepKey != null && loadingDepsState.loadingDepPromise === promise) {\n                /**\n                 * Note for async atoms, this means we are changing the atom\'s value\n                 * in the store for the given version. This should be alright because\n                 * the version of state is now stale and a new version will have\n                 * already been triggered by the atom being resolved (see this logic\n                 * in Recoil_atom.js)\n                 */\n                state.atomValues.set(loadingDepsState.loadingDepKey, loadableWithValue$2(resolvedDep));\n            }\n            else {\n                /**\n                 * If resolvedDepKey is not defined, the promise was a user-thrown\n                 * promise. User-thrown promises are an advanced feature and they\n                 * should be avoided in almost all cases. Using `loadable.map()` inside\n                 * of selectors for loading loadables and then throwing that mapped\n                 * loadable\'s promise is an example of a user-thrown promise.\n                 *\n                 * When we hit a user-thrown promise, we have to bail out of an optimization\n                 * where we bypass calculating selector cache keys for selectors that\n                 * have been previously seen for a given state (these selectors are saved in\n                 * state.atomValues) to avoid stale state as we have no way of knowing\n                 * what state changes happened (if any) in result to the promise resolving.\n                 *\n                 * Ideally we would only bail out selectors that are in the chain of\n                 * dependencies for this selector, but there\'s currently no way to get\n                 * a full list of a selector\'s downstream nodes because the state that\n                 * is executing may be a discarded tree (so store.getGraph(state.version)\n                 * will be empty), and the full dep tree may not be in the selector\n                 * caches in the case where the selector\'s cache was cleared. To solve\n                 * for this we would have to keep track  of all running selector\n                 * executions and their downstream deps. Because this only covers edge\n                 * cases, that complexity might not be justifyable.\n                 */\n                store.getState().knownSelectors.forEach(function (nodeKey) {\n                    state.atomValues.delete(nodeKey);\n                });\n            }\n            /**\n             * Optimization: Now that the dependency has resolved, let\'s try hitting\n             * the cache in case the dep resolved to a value we have previously seen.\n             *\n             * TODO:\n             * Note this optimization is not perfect because it only prevents re-executions\n             * _after_ the point where an async dependency is found. Any code leading\n             * up to the async dependency may have run unnecessarily. The ideal case\n             * would be to wait for the async dependency to resolve first, check the\n             * cache, and prevent _any_ execution of the selector if the resulting\n             * value of the dependency leads to a path that is found in the cache.\n             * The ideal case is more difficult to implement as it would require that\n             * we capture and wait for the the async dependency right after checking\n             * the cache. The current approach takes advantage of the fact that running\n             * the selector already has a code path that lets us exit early when\n             * an async dep resolves.\n             */\n            var cachedLoadable = getValFromCacheAndUpdatedDownstreamDeps(store, state);\n            if (cachedLoadable && cachedLoadable.state === \'hasValue\') {\n                setExecutionInfo(cachedLoadable, store);\n                return cachedLoadable.contents;\n            }\n            /**\n             * If this execution is stale, let\'s check to see if there is some in\n             * progress execution with a matching state. If we find a match, then\n             * we can take the value from that in-progress execution. Note this may\n             * sound like an edge case, but may be very common in cases where a\n             * loading dependency resolves from loading to having a value (thus\n             * possibly triggering a re-render), and React re-renders before the\n             * chained .then() functions run, thus starting a new execution as the\n             * dep has changed value. Without this check we will run the selector\n             * twice (once in the new execution and once again in this .then(), so\n             * this check is necessary to keep unnecessary re-executions to a\n             * minimum).\n             *\n             * Also note this code does not check across all executions that may be\n             * running. It only optimizes for the _latest_ execution per store as\n             * we currently do not maintain a list of all currently running executions.\n             * This means in some cases we may run selectors more than strictly\n             * necessary when there are multiple executions running for the same\n             * selector. This may be a valid tradeoff as checking for dep changes\n             * across all in-progress executions may take longer than just\n             * re-running the selector. This will be app-dependent, and maybe in the\n             * future we can make the behavior configurable. An ideal fix may be\n             * to extend the tree cache to support caching loading states.\n             */\n            if (!isLatestExecution(store, executionId)) {\n                var _executionInfo$latest;\n                var executionInfo = getExecutionInfoOfInProgressExecution(state);\n                if ((executionInfo === null || executionInfo === void 0 ? void 0 : (_executionInfo$latest = executionInfo.latestLoadable) === null || _executionInfo$latest === void 0 ? void 0 : _executionInfo$latest.state) === \'loading\') {\n                    /**\n                     * Returning promise here without wrapping as the wrapper logic was\n                     * already done upstream when this promise was generated.\n                     */\n                    return executionInfo.latestLoadable.contents;\n                }\n            }\n            var _a = evaluateSelectorGetter(store, state, executionId), loadable = _a[0], depValues = _a[1];\n            if (isLatestExecution(store, executionId)) {\n                updateExecutionInfoDepValues(depValues, store, executionId);\n            }\n            if (loadable.state !== \'loading\') {\n                setCache(state, depValuesToDepRoute(depValues), loadable);\n                setDepsInStore(store, state, new Set(depValues.keys()), executionId);\n                setLoadableInStoreToNotifyDeps(store, loadable, executionId);\n            }\n            if (loadable.state === \'hasError\') {\n                throw loadable.contents;\n            }\n            /**\n             * Returning any promises here without wrapping as the wrapepr logic was\n             * already done when we called evaluateSelectorGetter() to get this\n             * loadable\n             */\n            return loadable.contents;\n        }).catch(function (error) {\n            if (error instanceof Canceled) {\n                Recoil_recoverableViolation(\'Selector was released while it had dependencies\');\n                throw CANCELED;\n            }\n            if (!selectorIsLive()) {\n                // The selector was released since the request began; ignore the response.\n                clearExecutionInfo(store, executionId);\n                throw CANCELED;\n            }\n            var loadable = loadableWithError$1(error);\n            maybeFreezeValue(error);\n            setCache(state, depValuesToDepRoute(existingDeps), loadableWithError$1(error));\n            setDepsInStore(store, state, new Set(existingDeps.keys()), executionId);\n            setLoadableInStoreToNotifyDeps(store, loadable, executionId);\n            throw error;\n        });\n    }\n    function setLoadableInStoreToNotifyDeps(store, loadable, executionId) {\n        if (isLatestExecution(store, executionId)) {\n            setExecutionInfo(loadable, store);\n            notifyStoresOfSettledAsync(loadable, executionId);\n        }\n    }\n    function setDepsInStore(store, state, deps, executionId) {\n        var _store$getState, _store$getState$curre, _store$getState2, _store$getState2$next;\n        if (isLatestExecution(store, executionId) || state.version === ((_store$getState = store.getState()) === null || _store$getState === void 0 ? void 0 : (_store$getState$curre = _store$getState.currentTree) === null || _store$getState$curre === void 0 ? void 0 : _store$getState$curre.version) || state.version === ((_store$getState2 = store.getState()) === null || _store$getState2 === void 0 ? void 0 : (_store$getState2$next = _store$getState2.nextTree) === null || _store$getState2$next === void 0 ? void 0 : _store$getState2$next.version)) {\n            var _store$getState$nextT, _store$getState3, _store$getState3$next;\n            saveDependencyMapToStore$1(new Map([[key, deps]]), store, (_store$getState$nextT = (_store$getState3 = store.getState()) === null || _store$getState3 === void 0 ? void 0 : (_store$getState3$next = _store$getState3.nextTree) === null || _store$getState3$next === void 0 ? void 0 : _store$getState3$next.version) !== null && _store$getState$nextT !== void 0 ? _store$getState$nextT : store.getState().currentTree.version);\n        }\n    }\n    function setNewDepInStore(store, state, deps, newDepKey, executionId) {\n        deps.add(newDepKey);\n        setDepsInStore(store, state, deps, executionId);\n    }\n    function evaluateSelectorGetter(store, state, executionId) {\n        var endPerfBlock = startPerfBlock$1(key); // TODO T63965866: use execution ID here\n        var result;\n        var resultIsError = false;\n        var loadable;\n        var loadingDepsState = {\n            loadingDepKey: null,\n            loadingDepPromise: null\n        };\n        var depValues = new Map();\n        /**\n         * Starting a fresh set of deps that we\'ll be using to update state. We\'re\n         * starting a new set versus adding it in existing state deps because\n         * the version of state that we update deps for may be a more recent version\n         * than the version the selector was called with. This is because the latest\n         * execution will update the deps of the current/latest version of state (\n         * this is safe to do because the fact that the selector is the latest\n         * execution means the deps we discover below are our best guess at the\n         * deps for the current/latest state in the store)\n         */\n        var deps = new Set();\n        setDepsInStore(store, state, deps, executionId);\n        function getRecoilValue(dep) {\n            var depKey = dep.key;\n            setNewDepInStore(store, state, deps, depKey, executionId);\n            var depLoadable = getCachedNodeLoadable(store, state, depKey);\n            depValues.set(depKey, depLoadable);\n            switch (depLoadable.state) {\n                case \'hasValue\':\n                    return depLoadable.contents;\n                case \'hasError\':\n                    throw depLoadable.contents;\n                case \'loading\':\n                    loadingDepsState.loadingDepKey = depKey;\n                    loadingDepsState.loadingDepPromise = depLoadable.contents;\n                    throw depLoadable.contents;\n            }\n            throw Recoil_err(\'Invalid Loadable state\');\n        }\n        var gateCallback = false;\n        var getCallback = function (fn) {\n            return function () {\n                var args = [];\n                for (var _a = 0; _a < arguments.length; _a++) {\n                    args[_a] = arguments[_a];\n                }\n                if (!gateCallback) {\n                    throw Recoil_err(\'getCallback() should only be called asynchronously after the selector is evalutated.  It can be used for selectors to return objects with callbacks that can obtain the current Recoil state without a subscription.\');\n                }\n                var snapshot = cloneSnapshot$3(store);\n                var cb = fn({\n                    snapshot: snapshot\n                });\n                if (typeof cb !== \'function\') {\n                    throw Recoil_err(\'getCallback() expects a function that returns a function.\');\n                }\n                return cb.apply(void 0, args);\n            };\n        };\n        try {\n            result = get({\n                get: getRecoilValue,\n                getCallback: getCallback\n            });\n            result = isRecoilValue$3(result) ? getRecoilValue(result) : result;\n            gateCallback = true;\n            if (Recoil_isPromise(result)) {\n                result = wrapPendingPromise(store, result, state, depValues, executionId, loadingDepsState).finally(endPerfBlock);\n            }\n            else {\n                endPerfBlock();\n            }\n        }\n        catch (errorOrDepPromise) {\n            result = errorOrDepPromise;\n            if (Recoil_isPromise(result)) {\n                result = wrapPendingDependencyPromise(store, result, state, depValues, executionId, loadingDepsState).finally(endPerfBlock);\n            }\n            else {\n                resultIsError = true;\n                endPerfBlock();\n            }\n        }\n        if (resultIsError) {\n            loadable = loadableWithError$1(result);\n        }\n        else if (Recoil_isPromise(result)) {\n            loadable = loadableWithPromise$1(result);\n        }\n        else {\n            loadable = loadableWithValue$2(result);\n        }\n        if (loadable.state !== \'loading\') {\n            maybeFreezeValue(loadable.contents);\n        }\n        return [loadable, depValues];\n    }\n    function getValFromCacheAndUpdatedDownstreamDeps(store, state) {\n        var depsAfterCacheDone = new Set();\n        var executionInfo = getExecutionInfo(store);\n        var cachedVal;\n        try {\n            cachedVal = cache.get(function (nodeKey) {\n                !(typeof nodeKey === \'string\') ?  false ? 0 : Recoil_invariant(false) : void 0;\n                var loadable = getCachedNodeLoadable(store, state, nodeKey);\n                return loadable.contents;\n            }, {\n                onNodeVisit: function (node) {\n                    if (node.type === \'branch\' && node.nodeKey !== key && typeof node.nodeKey === \'string\') {\n                        depsAfterCacheDone.add(node.nodeKey);\n                        discoveredDependencyNodeKeys.add(node.nodeKey);\n                    }\n                }\n            });\n        }\n        catch (error) {\n            throw Recoil_err("Problem with cache lookup for selector \\"" + key + "\\": " + error.message);\n        }\n        /**\n         * Ensure store contains correct dependencies if we hit the cache so that\n         * the store deps and cache are in sync for a given state. This is important\n         * because store deps are normally updated when new executions are created,\n         * but cache hits don\'t trigger new executions but they still _may_ signifiy\n         * a change in deps in the store if the store deps for this state are empty\n         * or stale.\n         */\n        if (cachedVal) {\n            setDepsInStore(store, state, depsAfterCacheDone, executionInfo.latestExecutionId);\n        }\n        return cachedVal;\n    }\n    /**\n     * FIXME: dep keys should take into account the state of the loadable to\n     * prevent the edge case where a loadable with an error and a loadable with\n     * an error as a value are treated as the same thing incorrectly. For example\n     * these two should be treated differently:\n     *\n     * selector({key: \'\', get: () => new Error(\'hi\')});\n     * selector({key: \'\', get () => {throw new Error(\'hi\')}});\n     *\n     * With current implementation they are treated the same\n     */\n    function depValuesToDepRoute(depValues) {\n        return Array.from(depValues.entries()).map(function (_a) {\n            var depKey = _a[0], valLoadable = _a[1];\n            return [depKey, valLoadable.contents];\n        });\n    }\n    function getValFromRunningNewExecutionAndUpdatedDeps(store, state) {\n        var newExecutionId = getNewExecutionId();\n        var _a = evaluateSelectorGetter(store, state, newExecutionId), loadable = _a[0], newDepValues = _a[1];\n        setExecutionInfo(loadable, store, newDepValues, newExecutionId, state);\n        maybeSetCacheWithLoadable(state, depValuesToDepRoute(newDepValues), loadable);\n        notifyStoreWhenAsyncSettles(store, loadable, newExecutionId);\n        return loadable;\n    }\n    /**\n     * Given a tree state, this function returns the "selector result", which is\n     * defined as a size-2 tuple of [DependencyMap, Loadable<T>].\n     *\n     * The selector\'s get() function will only be re-evaluated if _both_ of the\n     * following statements are true:\n     *\n     * 1. The current dep values from the given state produced a cache key that\n     *    was not found in the cache.\n     * 2. There is no currently running async execution OR there is an\n     *    async execution that is running, but after comparing the dep values in\n     *    the given state with the dep values that the execution has discovered so\n     *    far we find that at least one dep value has changed, in which case we\n     *    start a new execution (the previously running execution will continue to\n     *    run to completion, but only the new execution will be deemed the\n     *    \'latest\' execution, meaning it will be the only execution that will\n     *    update global state when it is finished. Any non-latest executions will\n     *    run to completion and update the selector cache but not global state).\n     */\n    function getSelectorValAndUpdatedDeps(store, state) {\n        var cachedVal = getValFromCacheAndUpdatedDownstreamDeps(store, state);\n        if (cachedVal != null) {\n            setExecutionInfo(cachedVal, store);\n            return cachedVal;\n        }\n        var inProgressExecutionInfo = getExecutionInfoOfInProgressExecution(state); // FIXME: this won\'t work with custom caching b/c it uses separate cache\n        if (inProgressExecutionInfo) {\n            var executionInfo = inProgressExecutionInfo;\n            notifyStoreWhenAsyncSettles(store, Recoil_nullthrows(executionInfo.latestLoadable), Recoil_nullthrows(executionInfo.latestExecutionId)); // FIXME: check after the fact to see if we made the right choice by waiting\n            return Recoil_nullthrows(executionInfo.latestLoadable);\n        }\n        return getValFromRunningNewExecutionAndUpdatedDeps(store, state);\n    }\n    /**\n     * Searches execution info across all stores to see if there is an in-progress\n     * execution whose dependency values match the values of the requesting store.\n     */\n    function getExecutionInfoOfInProgressExecution(state) {\n        var _Array$from$find;\n        var _a = (_Array$from$find = Array.from(executionInfoMap.entries()).find(function (_a) {\n            var store = _a[0], execInfo = _a[1];\n            return execInfo.latestLoadable != null && execInfo.latestExecutionId != null && !haveAsyncDepsChanged(store, state);\n        })) !== null && _Array$from$find !== void 0 ? _Array$from$find : [], executionInfo = _a[1];\n        return executionInfo;\n    }\n    var mapOfCheckedVersions = new Map();\n    function haveAsyncDepsChanged(store, state) {\n        var _executionInfo$depVal, _mapOfCheckedVersions;\n        var executionInfo = getExecutionInfo(store);\n        var oldDepValues = (_executionInfo$depVal = executionInfo.depValuesDiscoveredSoFarDuringAsyncWork) !== null && _executionInfo$depVal !== void 0 ? _executionInfo$depVal : new Map();\n        var cachedDepValuesCheckedForThisVersion = Array(((_mapOfCheckedVersions = mapOfCheckedVersions.get(state.version)) !== null && _mapOfCheckedVersions !== void 0 ? _mapOfCheckedVersions : new Map()).entries());\n        var isCachedVersionSame = mapOfCheckedVersions.has(state.version) && cachedDepValuesCheckedForThisVersion.length === oldDepValues.size && cachedDepValuesCheckedForThisVersion.every(function (_a) {\n            var nodeKey = _a[0], nodeVal = _a[1];\n            return oldDepValues.get(nodeKey) === nodeVal;\n        });\n        if (oldDepValues == null || state.version === executionInfo.stateVersion || isCachedVersionSame) {\n            return false;\n        }\n        mapOfCheckedVersions.set(state.version, new Map(oldDepValues));\n        return Array.from(oldDepValues).some(function (_a) {\n            var nodeKey = _a[0], oldVal = _a[1];\n            var loadable = getCachedNodeLoadable(store, state, nodeKey);\n            return loadable.contents !== oldVal.contents;\n        });\n    }\n    /**\n     * This function will update the selector\'s execution info when the selector\n     * has either finished running an execution or has started a new execution. If\n     * the given loadable is in a \'loading\' state, the intention is that a new\n     * execution has started. Otherwise, the intention is that an execution has\n     * just finished.\n     */\n    function setExecutionInfo(loadable, store, depValues, newExecutionId, state) {\n        var executionInfo = getExecutionInfo(store);\n        if (loadable.state === \'loading\') {\n            executionInfo.depValuesDiscoveredSoFarDuringAsyncWork = depValues;\n            executionInfo.latestExecutionId = newExecutionId;\n            executionInfo.latestLoadable = loadable;\n            executionInfo.stateVersion = state === null || state === void 0 ? void 0 : state.version;\n        }\n        else {\n            executionInfo.depValuesDiscoveredSoFarDuringAsyncWork = null;\n            executionInfo.latestExecutionId = null;\n            executionInfo.latestLoadable = null;\n            executionInfo.stateVersion = null;\n        }\n    }\n    /**\n     * Conditionally updates the cache with a given loadable.\n     *\n     * We only cache loadables that are not loading because our cache keys are\n     * based on dep values, which are in an unfinished state for loadables that\n     * have a \'loading\' state (new deps may be discovered while the selector\n     * runs its async code). We never want to cache partial dependencies b/c it\n     * could lead to errors, such as prematurely returning the result based on a\n     * partial list of deps-- we need the full list of deps to ensure that we\n     * are returning the correct result from cache.\n     */\n    function maybeSetCacheWithLoadable(state, depRoute, loadable) {\n        if (loadable.state !== \'loading\') {\n            setCache(state, depRoute, loadable);\n        }\n    }\n    function updateExecutionInfoDepValues(depValues, store, executionId) {\n        var executionInfo = getExecutionInfo(store);\n        if (isLatestExecution(store, executionId)) {\n            executionInfo.depValuesDiscoveredSoFarDuringAsyncWork = depValues;\n        }\n    }\n    function clearExecutionInfo(store, executionId) {\n        if (isLatestExecution(store, executionId)) {\n            executionInfoMap.delete(store);\n        }\n    }\n    function isLatestExecution(store, executionId) {\n        var executionInfo = getExecutionInfo(store);\n        return executionId === executionInfo.latestExecutionId;\n    }\n    function maybeFreezeValue(val) {\n        if (false) {}\n    }\n    function setCache(state, cacheRoute, loadable) {\n        state.atomValues.set(key, loadable);\n        try {\n            cache.set(cacheRoute, loadable);\n        }\n        catch (error) {\n            throw Recoil_err("Problem with setting cache for selector \\"" + key + "\\": " + error.message);\n        }\n    }\n    function detectCircularDependencies(fn) {\n        if (dependencyStack.includes(key)) {\n            var message = "Recoil selector has circular dependencies: " + dependencyStack.slice(dependencyStack.indexOf(key)).join(\' \\u2192 \');\n            return loadableWithError$1(Recoil_err(message));\n        }\n        dependencyStack.push(key);\n        try {\n            return fn();\n        }\n        finally {\n            dependencyStack.pop();\n        }\n    }\n    function selectorPeek(store, state) {\n        var cacheVal = cache.get(function (nodeKey) {\n            !(typeof nodeKey === \'string\') ?  false ? 0 : Recoil_invariant(false) : void 0;\n            var peek = peekNodeLoadable$1(store, state, nodeKey);\n            return peek === null || peek === void 0 ? void 0 : peek.contents;\n        });\n        return cacheVal;\n    }\n    function selectorGet(store, state) {\n        return detectCircularDependencies(function () { return getSelectorValAndUpdatedDeps(store, state); });\n    }\n    function invalidateSelector(state) {\n        state.atomValues.delete(key);\n    }\n    function clearSelectorCache(store, treeState) {\n        !(recoilValue != null) ?  false ? 0 : Recoil_invariant(false) : void 0;\n        for (var _a = 0, discoveredDependencyNodeKeys_1 = discoveredDependencyNodeKeys; _a < discoveredDependencyNodeKeys_1.length; _a++) {\n            var nodeKey = discoveredDependencyNodeKeys_1[_a];\n            var _node$clearCache;\n            var node = getNode$6(nodeKey);\n            (_node$clearCache = node.clearCache) === null || _node$clearCache === void 0 ? void 0 : _node$clearCache.call(node, store, treeState);\n        }\n        invalidateSelector(treeState);\n        cache.clear();\n        markRecoilValueModified$1(store, recoilValue);\n    }\n    if (set != null) {\n        /**\n         * ES5 strict mode prohibits defining non-top-level function declarations,\n         * so don\'t use function declaration syntax here\n         */\n        var selectorSet = function (store, state, newValue) {\n            var syncSelectorSetFinished = false;\n            var writes = new Map();\n            function getRecoilValue(_a) {\n                var depKey = _a.key;\n                if (syncSelectorSetFinished) {\n                    throw Recoil_err(\'Recoil: Async selector sets are not currently supported.\');\n                }\n                var loadable = getCachedNodeLoadable(store, state, depKey);\n                if (loadable.state === \'hasValue\') {\n                    return loadable.contents;\n                }\n                else if (loadable.state === \'loading\') {\n                    throw new RecoilValueNotReady$2(depKey);\n                }\n                else {\n                    throw loadable.contents;\n                }\n            }\n            function setRecoilState(recoilState, valueOrUpdater) {\n                if (syncSelectorSetFinished) {\n                    throw Recoil_err(\'Recoil: Async selector sets are not currently supported.\');\n                }\n                var setValue = typeof valueOrUpdater === \'function\' ? // cast to any because we can\'t restrict type S from being a function itself without losing support for opaque types\n                    // flowlint-next-line unclear-type:off\n                    valueOrUpdater(getRecoilValue(recoilState)) : valueOrUpdater;\n                var upstreamWrites = setNodeValue$3(store, state, recoilState.key, setValue);\n                upstreamWrites.forEach(function (v, k) { return writes.set(k, v); });\n            }\n            function resetRecoilState(recoilState) {\n                setRecoilState(recoilState, DEFAULT_VALUE$6);\n            }\n            var ret = set({\n                set: setRecoilState,\n                get: getRecoilValue,\n                reset: resetRecoilState\n            }, newValue); // set should be a void method, but if the user makes it `async`, then it\n            // will return a Promise, which we don\'t currently support.\n            if (ret !== undefined) {\n                throw Recoil_isPromise(ret) ? Recoil_err(\'Recoil: Async selector sets are not currently supported.\') : Recoil_err(\'Recoil: selector set should be a void function.\');\n            }\n            syncSelectorSetFinished = true;\n            return writes;\n        };\n        return recoilValue = registerNode$1({\n            key: key,\n            nodeType: \'selector\',\n            peek: selectorPeek,\n            get: selectorGet,\n            set: selectorSet,\n            init: selectorInit,\n            invalidate: invalidateSelector,\n            clearCache: clearSelectorCache,\n            shouldDeleteConfigOnRelease: selectorShouldDeleteConfigOnRelease,\n            dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n            shouldRestoreFromSnapshots: false,\n            retainedBy: retainedBy\n        });\n    }\n    else {\n        return recoilValue = registerNode$1({\n            key: key,\n            nodeType: \'selector\',\n            peek: selectorPeek,\n            get: selectorGet,\n            init: selectorInit,\n            invalidate: invalidateSelector,\n            clearCache: clearSelectorCache,\n            shouldDeleteConfigOnRelease: selectorShouldDeleteConfigOnRelease,\n            dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n            shouldRestoreFromSnapshots: false,\n            retainedBy: retainedBy\n        });\n    }\n}\n/* eslint-enable no-redeclare */\nvar Recoil_selector = selector;\n// @fb-only: const {scopedAtom} = require(\'Recoil_ScopedAtom\');\nvar loadableWithError$2 = Recoil_Loadable$1.loadableWithError, loadableWithPromise$2 = Recoil_Loadable$1.loadableWithPromise, loadableWithValue$3 = Recoil_Loadable$1.loadableWithValue;\nvar peekNodeInfo$3 = Recoil_FunctionalCore.peekNodeInfo;\nvar DEFAULT_VALUE$7 = Recoil_Node.DEFAULT_VALUE, DefaultValue$2 = Recoil_Node.DefaultValue, getConfigDeletionHandler$2 = Recoil_Node.getConfigDeletionHandler, registerNode$2 = Recoil_Node.registerNode, setConfigDeletionHandler$1 = Recoil_Node.setConfigDeletionHandler;\nvar isRecoilValue$4 = Recoil_RecoilValue$1.isRecoilValue;\nvar getRecoilValueAsLoadable$4 = Recoil_RecoilValueInterface.getRecoilValueAsLoadable, markRecoilValueModified$2 = Recoil_RecoilValueInterface.markRecoilValueModified, setRecoilValue$4 = Recoil_RecoilValueInterface.setRecoilValue, setRecoilValueLoadable$3 = Recoil_RecoilValueInterface.setRecoilValueLoadable;\nvar retainedByOptionWithDefault$2 = Recoil_Retention.retainedByOptionWithDefault;\nfunction baseAtom(options) {\n    var key = options.key, persistence = options.persistence_UNSTABLE;\n    var retainedBy = retainedByOptionWithDefault$2(options.retainedBy_UNSTABLE);\n    var liveStoresCount = 0;\n    var defaultLoadable = Recoil_isPromise(options.default) ? loadableWithPromise$2(options.default.then(function (value) {\n        defaultLoadable = loadableWithValue$3(value);\n        return value;\n    }).catch(function (error) {\n        defaultLoadable = loadableWithError$2(error);\n        throw error;\n    })) : loadableWithValue$3(options.default);\n    maybeFreezeValueOrPromise(options.default);\n    var cachedAnswerForUnvalidatedValue = undefined; // Cleanup handlers for this atom\n    // Rely on stable reference equality of the store to use it as a key per <RecoilRoot>\n    var cleanupEffectsByStore = new Map();\n    function maybeFreezeValueOrPromise(valueOrPromise) {\n        if (false) {}\n        return valueOrPromise;\n    }\n    function wrapPendingPromise(store, promise) {\n        var wrappedPromise = promise.then(function (value) {\n            var _store$getState$nextT, _state$atomValues$get;\n            var state = (_store$getState$nextT = store.getState().nextTree) !== null && _store$getState$nextT !== void 0 ? _store$getState$nextT : store.getState().currentTree;\n            if (((_state$atomValues$get = state.atomValues.get(key)) === null || _state$atomValues$get === void 0 ? void 0 : _state$atomValues$get.contents) === wrappedPromise) {\n                setRecoilValue$4(store, node, value);\n            }\n            return value;\n        }).catch(function (error) {\n            var _store$getState$nextT2, _state$atomValues$get2;\n            var state = (_store$getState$nextT2 = store.getState().nextTree) !== null && _store$getState$nextT2 !== void 0 ? _store$getState$nextT2 : store.getState().currentTree;\n            if (((_state$atomValues$get2 = state.atomValues.get(key)) === null || _state$atomValues$get2 === void 0 ? void 0 : _state$atomValues$get2.contents) === wrappedPromise) {\n                setRecoilValueLoadable$3(store, node, loadableWithError$2(error));\n            }\n            throw error;\n        });\n        return wrappedPromise;\n    }\n    function initAtom(store, initState, trigger) {\n        liveStoresCount++;\n        var alreadyKnown = store.getState().knownAtoms.has(key);\n        store.getState().knownAtoms.add(key); // Setup async defaults to notify subscribers when they resolve\n        if (defaultLoadable.state === \'loading\') {\n            var notifyDefaultSubscribers = function () {\n                var _store$getState$nextT3;\n                var state = (_store$getState$nextT3 = store.getState().nextTree) !== null && _store$getState$nextT3 !== void 0 ? _store$getState$nextT3 : store.getState().currentTree;\n                if (!state.atomValues.has(key)) {\n                    markRecoilValueModified$2(store, node);\n                }\n            };\n            defaultLoadable.contents.then(notifyDefaultSubscribers).catch(notifyDefaultSubscribers);\n        } // Run Atom Effects\n        // This state is scoped by Store, since this is in the initAtom() closure\n        var initValue = DEFAULT_VALUE$7;\n        var pendingSetSelf = null;\n        if (options.effects_UNSTABLE != null && !alreadyKnown) {\n            var duringInit_1 = true;\n            function getLoadable(recoilValue) {\n                // Normally we can just get the current value of another atom.\n                // But for our own value we need to check if there is a pending\n                // initialized value or get the fallback default value.\n                if (duringInit_1 && recoilValue.key === key && !(initValue instanceof DefaultValue$2)) {\n                    // Cast T to S\n                    var retValue = initValue; // flowlint-line unclear-type:off\n                    return retValue instanceof DefaultValue$2 ? defaultLoadable : // flowlint-line unclear-type:off\n                        Recoil_isPromise(retValue) ? loadableWithPromise$2(retValue.then(function (v) { return v instanceof DefaultValue$2 ? // Cast T to S\n                            defaultLoadable.toPromise() // flowlint-line unclear-type:off\n                            : v; })) : loadableWithValue$3(retValue);\n                }\n                return getRecoilValueAsLoadable$4(store, recoilValue);\n            }\n            function getPromise(recoilValue) {\n                return getLoadable(recoilValue).toPromise();\n            }\n            function getInfo_UNSTABLE(recoilValue) {\n                var _store$getState$nextT4;\n                var info = peekNodeInfo$3(store, (_store$getState$nextT4 = store.getState().nextTree) !== null && _store$getState$nextT4 !== void 0 ? _store$getState$nextT4 : store.getState().currentTree, recoilValue.key);\n                return duringInit_1 && recoilValue.key === key && !(initValue instanceof DefaultValue$2) ? __assign(__assign({}, info), { isSet: true, loadable: getLoadable(recoilValue) }) : info;\n            }\n            var setSelf_1 = function (effect) { return function (valueOrUpdater) {\n                if (duringInit_1) {\n                    var currentValue = initValue instanceof DefaultValue$2 || Recoil_isPromise(initValue) ? defaultLoadable.state === \'hasValue\' ? defaultLoadable.contents : DEFAULT_VALUE$7 : initValue;\n                    initValue = typeof valueOrUpdater === \'function\' ? // cast to any because we can\'t restrict T from being a function without losing support for opaque types\n                        valueOrUpdater(currentValue) // flowlint-line unclear-type:off\n                        : valueOrUpdater;\n                    if (Recoil_isPromise(initValue)) {\n                        initValue = initValue.then(function (value) {\n                            // Avoid calling onSet() when setSelf() initializes with a Promise\n                            pendingSetSelf = {\n                                effect: effect,\n                                value: value\n                            };\n                            return value;\n                        });\n                    }\n                }\n                else {\n                    if (Recoil_isPromise(valueOrUpdater)) {\n                        throw Recoil_err(\'Setting atoms to async values is not implemented.\');\n                    }\n                    if (typeof valueOrUpdater !== \'function\') {\n                        pendingSetSelf = {\n                            effect: effect,\n                            value: valueOrUpdater\n                        };\n                    }\n                    setRecoilValue$4(store, node, typeof valueOrUpdater === \'function\' ? function (currentValue) {\n                        var newValue = // cast to any because we can\'t restrict T from being a function without losing support for opaque types\n                         valueOrUpdater(currentValue); // flowlint-line unclear-type:off\n                        pendingSetSelf = {\n                            effect: effect,\n                            value: newValue\n                        };\n                        return newValue;\n                    } : valueOrUpdater);\n                }\n            }; };\n            var resetSelf = function (effect) { return function () { return setSelf_1(effect)(DEFAULT_VALUE$7); }; };\n            var onSet = function (effect) { return function (handler) {\n                store.subscribeToTransactions(function (currentStore) {\n                    var _currentTree$atomValu;\n                    // eslint-disable-next-line prefer-const\n                    var _a = currentStore.getState(), currentTree = _a.currentTree, previousTree = _a.previousTree;\n                    if (!previousTree) {\n                        Recoil_recoverableViolation(\'Transaction subscribers notified without a next tree being present -- this is a bug in Recoil\');\n                        previousTree = currentTree; // attempt to trundle on\n                    }\n                    var newLoadable = (_currentTree$atomValu = currentTree.atomValues.get(key)) !== null && _currentTree$atomValu !== void 0 ? _currentTree$atomValu : defaultLoadable;\n                    if (newLoadable.state === \'hasValue\') {\n                        var _previousTree$atomVal, _pendingSetSelf, _pendingSetSelf2, _pendingSetSelf3;\n                        var newValue = newLoadable.contents;\n                        var oldLoadable = (_previousTree$atomVal = previousTree.atomValues.get(key)) !== null && _previousTree$atomVal !== void 0 ? _previousTree$atomVal : defaultLoadable;\n                        var oldValue = oldLoadable.state === \'hasValue\' ? oldLoadable.contents : DEFAULT_VALUE$7; // TODO This isn\'t actually valid, use as a placeholder for now.\n                        // Ignore atom value changes that were set via setSelf() in the same effect.\n                        // We will still properly call the handler if there was a subsequent\n                        // set from something other than an atom effect which was batched\n                        // with the `setSelf()` call.  However, we may incorrectly ignore\n                        // the handler if the subsequent batched call happens to set the\n                        // atom to the exact same value as the `setSelf()`.   But, in that\n                        // case, it was kind of a noop, so the semantics are debatable..\n                        if (((_pendingSetSelf = pendingSetSelf) === null || _pendingSetSelf === void 0 ? void 0 : _pendingSetSelf.effect) !== effect || ((_pendingSetSelf2 = pendingSetSelf) === null || _pendingSetSelf2 === void 0 ? void 0 : _pendingSetSelf2.value) !== newValue) {\n                            handler(newValue, oldValue, !currentTree.atomValues.has(key));\n                        }\n                        else if (((_pendingSetSelf3 = pendingSetSelf) === null || _pendingSetSelf3 === void 0 ? void 0 : _pendingSetSelf3.effect) === effect) {\n                            pendingSetSelf = null;\n                        }\n                    }\n                }, key);\n            }; };\n            for (var _a = 0, _b = (_options$effects_UNST = options.effects_UNSTABLE) !== null && _options$effects_UNST !== void 0 ? _options$effects_UNST : []; _a < _b.length; _a++) {\n                var effect = _b[_a];\n                var _options$effects_UNST;\n                var cleanup = effect({\n                    node: node,\n                    trigger: trigger,\n                    setSelf: setSelf_1(effect),\n                    resetSelf: resetSelf(effect),\n                    onSet: onSet(effect),\n                    getPromise: getPromise,\n                    getLoadable: getLoadable,\n                    getInfo_UNSTABLE: getInfo_UNSTABLE\n                });\n                if (cleanup != null) {\n                    var _cleanupEffectsByStor;\n                    cleanupEffectsByStore.set(store, __spreadArray(__spreadArray([], ((_cleanupEffectsByStor = cleanupEffectsByStore.get(store)) !== null && _cleanupEffectsByStor !== void 0 ? _cleanupEffectsByStor : []), true), [cleanup], false));\n                }\n            }\n            duringInit_1 = false;\n        } // Mutate initial state in place since we know there are no other subscribers\n        // since we are the ones initializing on first use.\n        if (!(initValue instanceof DefaultValue$2)) {\n            var _store$getState$nextT5;\n            var frozenInitValue = maybeFreezeValueOrPromise(initValue);\n            var initLoadable = Recoil_isPromise(frozenInitValue) ? loadableWithPromise$2(wrapPendingPromise(store, frozenInitValue)) : loadableWithValue$3(frozenInitValue);\n            initState.atomValues.set(key, initLoadable); // If there is a pending transaction, then also mutate the next state tree.\n            // This could happen if the atom was first initialized in an action that\n            // also updated some other atom\'s state.\n            (_store$getState$nextT5 = store.getState().nextTree) === null || _store$getState$nextT5 === void 0 ? void 0 : _store$getState$nextT5.atomValues.set(key, initLoadable);\n        }\n        return function () {\n            var _cleanupEffectsByStor2;\n            liveStoresCount--;\n            (_cleanupEffectsByStor2 = cleanupEffectsByStore.get(store)) === null || _cleanupEffectsByStor2 === void 0 ? void 0 : _cleanupEffectsByStor2.forEach(function (cleanup) { return cleanup(); });\n            cleanupEffectsByStore.delete(store);\n            store.getState().knownAtoms.delete(key); // FIXME remove knownAtoms?\n        };\n    }\n    function peekAtom(_store, state) {\n        var _ref, _state$atomValues$get3;\n        return (_ref = (_state$atomValues$get3 = state.atomValues.get(key)) !== null && _state$atomValues$get3 !== void 0 ? _state$atomValues$get3 : cachedAnswerForUnvalidatedValue) !== null && _ref !== void 0 ? _ref : defaultLoadable;\n    }\n    function getAtom(_store, state) {\n        if (state.atomValues.has(key)) {\n            // Atom value is stored in state:\n            return Recoil_nullthrows(state.atomValues.get(key));\n        }\n        else if (state.nonvalidatedAtoms.has(key)) {\n            // Atom value is stored but needs validation before use.\n            // We might have already validated it and have a cached validated value:\n            if (cachedAnswerForUnvalidatedValue != null) {\n                return cachedAnswerForUnvalidatedValue;\n            }\n            if (persistence == null) {\n                Recoil_expectationViolation("Tried to restore a persisted value for atom " + key + " but it has no persistence settings.");\n                return defaultLoadable;\n            }\n            var nonvalidatedValue = state.nonvalidatedAtoms.get(key);\n            var validatorResult = persistence.validator(nonvalidatedValue, DEFAULT_VALUE$7);\n            var validatedValueLoadable = validatorResult instanceof DefaultValue$2 ? defaultLoadable : loadableWithValue$3(validatorResult);\n            cachedAnswerForUnvalidatedValue = validatedValueLoadable;\n            return cachedAnswerForUnvalidatedValue;\n        }\n        else {\n            return defaultLoadable;\n        }\n    }\n    function invalidateAtom() {\n        cachedAnswerForUnvalidatedValue = undefined;\n    }\n    function setAtom(_store, state, newValue) {\n        // Bail out if we\'re being set to the existing value, or if we\'re being\n        // reset but have no stored value (validated or unvalidated) to reset from:\n        if (state.atomValues.has(key)) {\n            var existing = Recoil_nullthrows(state.atomValues.get(key));\n            if (existing.state === \'hasValue\' && newValue === existing.contents) {\n                return new Map();\n            }\n        }\n        else if (!state.nonvalidatedAtoms.has(key) && newValue instanceof DefaultValue$2) {\n            return new Map();\n        }\n        maybeFreezeValueOrPromise(newValue);\n        cachedAnswerForUnvalidatedValue = undefined; // can be released now if it was previously in use\n        return new Map().set(key, loadableWithValue$3(newValue));\n    }\n    function shouldDeleteConfigOnReleaseAtom() {\n        return getConfigDeletionHandler$2(key) !== undefined && liveStoresCount <= 0;\n    }\n    var node = registerNode$2({\n        key: key,\n        nodeType: \'atom\',\n        peek: peekAtom,\n        get: getAtom,\n        set: setAtom,\n        init: initAtom,\n        invalidate: invalidateAtom,\n        shouldDeleteConfigOnRelease: shouldDeleteConfigOnReleaseAtom,\n        dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n        persistence_UNSTABLE: options.persistence_UNSTABLE ? {\n            type: options.persistence_UNSTABLE.type,\n            backButton: options.persistence_UNSTABLE.backButton\n        } : undefined,\n        shouldRestoreFromSnapshots: true,\n        retainedBy: retainedBy\n    });\n    return node;\n} // prettier-ignore\nfunction atom(options) {\n    if (false) {}\n    var optionsDefault = options.default, \n    // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n    restOptions = __rest(options, ["default"]);\n    if (isRecoilValue$4(optionsDefault) // Continue to use atomWithFallback for promise defaults for scoped atoms\n    // for now, since scoped atoms don\'t support async defaults\n    // @fb-only: || (isPromise(optionsDefault) && scopeRules_APPEND_ONLY_READ_THE_DOCS)\n    ) {\n        return atomWithFallback(__assign(__assign({}, restOptions), { default: optionsDefault // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n         })); // @fb-only: } else if (scopeRules_APPEND_ONLY_READ_THE_DOCS && !isPromise(optionsDefault)) {\n        // @fb-only: return scopedAtom<T>({\n        // @fb-only: ...restOptions,\n        // @fb-only: default: optionsDefault,\n        // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n        // @fb-only: });\n    }\n    else {\n        return baseAtom(__assign(__assign({}, restOptions), { default: optionsDefault }));\n    }\n}\nfunction atomWithFallback(options) {\n    var base = atom(__assign(__assign({}, options), { default: DEFAULT_VALUE$7, persistence_UNSTABLE: options.persistence_UNSTABLE === undefined ? undefined : __assign(__assign({}, options.persistence_UNSTABLE), { validator: function (storedValue) { return storedValue instanceof DefaultValue$2 ? storedValue : Recoil_nullthrows(options.persistence_UNSTABLE).validator(storedValue, DEFAULT_VALUE$7); } }), \n        // TODO Hack for now.\n        // flowlint-next-line unclear-type: off\n        effects_UNSTABLE: options.effects_UNSTABLE }));\n    var sel = Recoil_selector({\n        key: options.key + "__withFallback",\n        get: function (_a) {\n            var get = _a.get;\n            var baseValue = get(base);\n            return baseValue instanceof DefaultValue$2 ? options.default : baseValue;\n        },\n        set: function (_a, newValue) {\n            var set = _a.set;\n            return set(base, newValue);\n        },\n        dangerouslyAllowMutability: options.dangerouslyAllowMutability\n    });\n    setConfigDeletionHandler$1(sel.key, getConfigDeletionHandler$2(options.key));\n    return sel;\n}\nvar Recoil_atom = atom;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nvar MapCache = /** @class */ (function () {\n    function MapCache(options) {\n        var _options$mapKey;\n        _defineProperty(this, "_map", void 0);\n        _defineProperty(this, "_keyMapper", void 0);\n        this._map = new Map();\n        this._keyMapper = (_options$mapKey = options === null || options === void 0 ? void 0 : options.mapKey) !== null && _options$mapKey !== void 0 ? _options$mapKey : function (v) { return v; };\n    }\n    MapCache.prototype.size = function () {\n        return this._map.size;\n    };\n    MapCache.prototype.has = function (key) {\n        return this._map.has(this._keyMapper(key));\n    };\n    MapCache.prototype.get = function (key) {\n        return this._map.get(this._keyMapper(key));\n    };\n    MapCache.prototype.set = function (key, val) {\n        this._map.set(this._keyMapper(key), val);\n    };\n    MapCache.prototype.delete = function (key) {\n        this._map.delete(this._keyMapper(key));\n    };\n    MapCache.prototype.clear = function () {\n        this._map.clear();\n    };\n    return MapCache;\n}());\nvar Recoil_MapCache = {\n    MapCache: MapCache\n};\nvar Recoil_MapCache_1 = Recoil_MapCache.MapCache;\nvar Recoil_MapCache$1 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    MapCache: Recoil_MapCache_1\n});\nvar LRUCache$2 = Recoil_LRUCache$1.LRUCache;\nvar MapCache$1 = Recoil_MapCache$1.MapCache;\nvar defaultPolicy$1 = {\n    equality: \'reference\',\n    eviction: \'none\',\n    maxSize: Infinity\n};\nfunction cacheFromPolicy(_a) {\n    var _b = _a === void 0 ? defaultPolicy$1 : _a, _c = _b.equality, equality = _c === void 0 ? defaultPolicy$1.equality : _c, _d = _b.eviction, eviction = _d === void 0 ? defaultPolicy$1.eviction : _d, _e = _b.maxSize, maxSize = _e === void 0 ? defaultPolicy$1.maxSize : _e;\n    var valueMapper = getValueMapper$1(equality);\n    var cache = getCache(eviction, maxSize, valueMapper);\n    return cache;\n}\nfunction getValueMapper$1(equality) {\n    switch (equality) {\n        case \'reference\':\n            return function (val) { return val; };\n        case \'value\':\n            return function (val) { return Recoil_stableStringify(val); };\n    }\n    throw Recoil_err("Unrecognized equality policy " + equality);\n}\nfunction getCache(eviction, maxSize, mapKey) {\n    switch (eviction) {\n        case \'keep-all\':\n            // $FlowFixMe[method-unbinding]\n            return new MapCache$1({\n                mapKey: mapKey\n            });\n        case \'lru\':\n            // $FlowFixMe[method-unbinding]\n            return new LRUCache$2({\n                mapKey: mapKey,\n                maxSize: Recoil_nullthrows(maxSize)\n            });\n        case \'most-recent\':\n            // $FlowFixMe[method-unbinding]\n            return new LRUCache$2({\n                mapKey: mapKey,\n                maxSize: 1\n            });\n    }\n    throw Recoil_err("Unrecognized eviction policy " + eviction);\n}\nvar Recoil_cacheFromPolicy = cacheFromPolicy;\nvar setConfigDeletionHandler$2 = Recoil_Node.setConfigDeletionHandler;\n// Process scopeRules to handle any entries which are functions taking parameters\n// prettier-ignore\n// @fb-only: function mapScopeRules<P>(\n// @fb-only: scopeRules?: ParameterizedScopeRules<P>,\n// @fb-only: param: P,\n// @fb-only: ): ScopeRules | void {\n// @fb-only: return scopeRules?.map(rule =>\n// @fb-only: Array.isArray(rule)\n// @fb-only: ? rule.map(entry => (typeof entry === \'function\' ? entry(param) : entry))\n// @fb-only: : rule,\n// @fb-only: );\n// @fb-only: }\n/*\nA function which returns an atom based on the input parameter.\n\nEach unique parameter returns a unique atom. E.g.,\n\n  const f = atomFamily(...);\n  f({a: 1}) => an atom\n  f({a: 2}) => a different atom\n\nThis allows components to persist local, private state using atoms.  Each\ninstance of the component may have a different key, which it uses as the\nparameter for a family of atoms; in this way, each component will have\nits own atom not shared by other instances.  These state keys may be composed\ninto children\'s state keys as well.\n*/\nfunction atomFamily(options) {\n    var _options$cachePolicyF, _options$cachePolicyF2;\n    var atomCache = Recoil_cacheFromPolicy({\n        equality: (_options$cachePolicyF = (_options$cachePolicyF2 = options.cachePolicyForParams_UNSTABLE) === null || _options$cachePolicyF2 === void 0 ? void 0 : _options$cachePolicyF2.equality) !== null && _options$cachePolicyF !== void 0 ? _options$cachePolicyF : \'value\',\n        eviction: \'keep-all\'\n    }); // Simple atomFamily implementation to cache individual atoms based\n    // on the parameter value equality.\n    return function (params) {\n        var _stableStringify;\n        var cachedAtom = atomCache.get(params);\n        if (cachedAtom != null) {\n            return cachedAtom;\n        }\n        var cachePolicyForParams_UNSTABLE = options.cachePolicyForParams_UNSTABLE, atomOptions = __rest(options, ["cachePolicyForParams_UNSTABLE"]);\n        var newAtom = Recoil_atom(__assign(__assign({}, atomOptions), { key: options.key + "__" + ((_stableStringify = Recoil_stableStringify(params)) !== null && _stableStringify !== void 0 ? _stableStringify : \'void\'), default: typeof options.default === \'function\' ? // The default was parameterized\n                // Flow doesn\'t know that T isn\'t a function, so we need to case to any\n                options.default(params) // flowlint-line unclear-type:off\n                : // Default may be a static value, promise, or RecoilValue\n                    options.default, retainedBy_UNSTABLE: typeof options.retainedBy_UNSTABLE === \'function\' ? options.retainedBy_UNSTABLE(params) : options.retainedBy_UNSTABLE, effects_UNSTABLE: typeof options.effects_UNSTABLE === \'function\' ? options.effects_UNSTABLE(params) : options.effects_UNSTABLE // prettier-ignore\n         }));\n        atomCache.set(params, newAtom);\n        setConfigDeletionHandler$2(newAtom.key, function () {\n            atomCache.delete(params);\n        });\n        return newAtom;\n    };\n}\nvar Recoil_atomFamily = atomFamily;\nvar setConfigDeletionHandler$3 = Recoil_Node.setConfigDeletionHandler;\n// Keep in mind the parameter needs to be serializable as a cahche key\n// using Recoil_stableStringify\n// Add a unique index to each selector in case the cache implementation allows\n// duplicate keys based on equivalent stringified parameters\nvar nextIndex = 0;\n/* eslint-disable no-redeclare */\n// Return a function that returns members of a family of selectors of the same type\n// E.g.,\n//\n// const s = selectorFamily(...);\n// s({a: 1}) => a selector\n// s({a: 2}) => a different selector\n//\n// By default, the selectors are distinguished by distinct values of the\n// parameter based on value equality, not reference equality.  This allows using\n// object literals or other equivalent objects at callsites to not create\n// duplicate cache entries.  This behavior may be overridden with the\n// cacheImplementationForParams option.\nfunction selectorFamily(options) {\n    var _options$cachePolicyF, _options$cachePolicyF2;\n    var selectorCache = Recoil_cacheFromPolicy({\n        equality: (_options$cachePolicyF = (_options$cachePolicyF2 = options.cachePolicyForParams_UNSTABLE) === null || _options$cachePolicyF2 === void 0 ? void 0 : _options$cachePolicyF2.equality) !== null && _options$cachePolicyF !== void 0 ? _options$cachePolicyF : \'value\',\n        eviction: \'keep-all\'\n    });\n    return function (params) {\n        var _stableStringify;\n        var cachedSelector = selectorCache.get(params);\n        if (cachedSelector != null) {\n            return cachedSelector;\n        }\n        var myKey = options.key + "__selectorFamily/" + ((_stableStringify = Recoil_stableStringify(params, {\n            // It is possible to use functions in parameters if the user uses\n            // a cache with reference equality thanks to the incrementing index.\n            allowFunctions: true\n        })) !== null && _stableStringify !== void 0 ? _stableStringify : \'void\') + "/" + nextIndex++; // Append index in case values serialize to the same key string\n        var myGet = function (callbacks) { return options.get(params)(callbacks); };\n        var myCachePolicy = options.cachePolicy_UNSTABLE;\n        var retainedBy = typeof options.retainedBy_UNSTABLE === \'function\' ? options.retainedBy_UNSTABLE(params) : options.retainedBy_UNSTABLE;\n        var newSelector;\n        if (options.set != null) {\n            var set_4 = options.set;\n            var mySet = function (callbacks, newValue) { return set_4(params)(callbacks, newValue); };\n            newSelector = Recoil_selector({\n                key: myKey,\n                get: myGet,\n                set: mySet,\n                cachePolicy_UNSTABLE: myCachePolicy,\n                dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n                retainedBy_UNSTABLE: retainedBy\n            });\n        }\n        else {\n            newSelector = Recoil_selector({\n                key: myKey,\n                get: myGet,\n                cachePolicy_UNSTABLE: myCachePolicy,\n                dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n                retainedBy_UNSTABLE: retainedBy\n            });\n        }\n        selectorCache.set(params, newSelector);\n        setConfigDeletionHandler$3(newSelector.key, function () {\n            selectorCache.delete(params);\n        });\n        return newSelector;\n    };\n}\n/* eslint-enable no-redeclare */\nvar Recoil_selectorFamily = selectorFamily;\n// flowlint-next-line unclear-type:off\nvar constantSelector = Recoil_selectorFamily({\n    key: \'__constant\',\n    get: function (constant) { return function () { return constant; }; },\n    cachePolicyForParams_UNSTABLE: {\n        equality: \'reference\'\n    }\n}); // Function that returns a selector which always produces the\n// same constant value.  It may be called multiple times with the\n// same value, based on reference equality, and will provide the\n// same selector.\nfunction constSelector(constant) {\n    return constantSelector(constant);\n}\nvar Recoil_constSelector = constSelector;\n// flowlint-next-line unclear-type:off\nvar throwingSelector = Recoil_selectorFamily({\n    key: \'__error\',\n    get: function (message) { return function () {\n        throw Recoil_err(message);\n    }; },\n    // TODO Why?\n    cachePolicyForParams_UNSTABLE: {\n        equality: \'reference\'\n    }\n}); // Function that returns a selector which always throws an error\n// with the provided message.\nfunction errorSelector(message) {\n    return throwingSelector(message);\n}\nvar Recoil_errorSelector = errorSelector;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Wraps another recoil value and prevents writing to it.\n *\n * @emails oncall+recoil\n *\n * @format\n */\nfunction readOnlySelector(atom) {\n    // flowlint-next-line unclear-type: off\n    return atom;\n}\nvar Recoil_readOnlySelector = readOnlySelector;\nvar loadableWithError$3 = Recoil_Loadable$1.loadableWithError, loadableWithPromise$3 = Recoil_Loadable$1.loadableWithPromise, loadableWithValue$4 = Recoil_Loadable$1.loadableWithValue;\n/////////////////\n//  TRUTH TABLE\n/////////////////\n// Dependencies        waitForNone         waitForAny        waitForAll       waitForAllSettled\n//  [loading, loading]  [Promise, Promise]  Promise           Promise         Promise\n//  [value, loading]    [value, Promise]    [value, Promise]  Promise         Promise\n//  [value, value]      [value, value]      [value, value]    [value, value]  [value, value]\n//\n//  [error, loading]    [Error, Promise]    [Error, Promise]  Error           Promise\n//  [error, error]      [Error, Error]      [Error, Error]    Error           [error, error]\n//  [value, error]      [value, Error]      [value, Error]    Error           [value, error]\n// Issue parallel requests for all dependencies and return the current\n// status if they have results, have some error, or are still pending.\nfunction concurrentRequests(getRecoilValue, deps) {\n    var results = Array(deps.length).fill(undefined);\n    var exceptions = Array(deps.length).fill(undefined);\n    for (var _a = 0, _b = deps.entries(); _a < _b.length; _a++) {\n        var _c = _b[_a], i = _c[0], dep = _c[1];\n        try {\n            results[i] = getRecoilValue(dep);\n        }\n        catch (e) {\n            // exceptions can either be Promises of pending results or real errors\n            exceptions[i] = e;\n        }\n    }\n    return [results, exceptions];\n}\nfunction isError(exp) {\n    return exp != null && !Recoil_isPromise(exp);\n}\nfunction unwrapDependencies(dependencies) {\n    return Array.isArray(dependencies) ? dependencies : Object.getOwnPropertyNames(dependencies).map(function (key) { return dependencies[key]; });\n}\nfunction wrapResults(dependencies, results) {\n    return Array.isArray(dependencies) ? results : // Object.getOwnPropertyNames() has consistent key ordering with ES6\n        Object.getOwnPropertyNames(dependencies).reduce(function (out, key, idx) {\n            var _a;\n            return (__assign(__assign({}, out), (_a = {}, _a[key] = results[idx], _a)));\n        }, {});\n}\nfunction wrapLoadables(dependencies, results, exceptions) {\n    var output = exceptions.map(function (exception, idx) { return exception == null ? loadableWithValue$4(results[idx]) : Recoil_isPromise(exception) ? loadableWithPromise$3(exception) : loadableWithError$3(exception); });\n    return wrapResults(dependencies, output);\n}\nfunction combineAsyncResultsWithSyncResults(syncResults, asyncResults) {\n    return asyncResults.map(function (result, idx) {\n        /**\n         * it\'s important we use === undefined as opposed to == null, because the\n         * resolved value of the async promise could be `null`, in which case we\n         * don\'t want to use syncResults[idx], which would be undefined. If async\n         * promise resolves to `undefined`, that\'s ok because `syncResults[idx]`\n         * will also be `undefined`. That\'s a little hacky, but it works.\n         */\n        return result === undefined ? syncResults[idx] : result;\n    });\n} // Selector that requests all dependencies in parallel and immediately returns\n// current results without waiting.\nvar waitForNone = Recoil_selectorFamily({\n    key: \'__waitForNone\',\n    get: function (dependencies) { return function (_a) {\n        var get = _a.get;\n        // Issue requests for all dependencies in parallel.\n        var deps = unwrapDependencies(dependencies);\n        var _b = concurrentRequests(get, deps), results = _b[0], exceptions = _b[1]; // Always return the current status of the results; never block.\n        return wrapLoadables(dependencies, results, exceptions);\n    }; },\n    dangerouslyAllowMutability: true\n}); // Selector that requests all dependencies in parallel and waits for at least\n// one to be available before returning results.  It will only error if all\n// dependencies have errors.\nvar waitForAny = Recoil_selectorFamily({\n    key: \'__waitForAny\',\n    get: function (dependencies) { return function (_a) {\n        var get = _a.get;\n        // Issue requests for all dependencies in parallel.\n        // Exceptions can either be Promises of pending results or real errors\n        var deps = unwrapDependencies(dependencies);\n        var _b = concurrentRequests(get, deps), results = _b[0], exceptions = _b[1]; // If any results are available, value or error, return the current status\n        if (exceptions.some(function (exp) { return !Recoil_isPromise(exp); })) {\n            return wrapLoadables(dependencies, results, exceptions);\n        } // Otherwise, return a promise that will resolve when the next result is\n        // available, whichever one happens to be next.  But, if all pending\n        // dependencies end up with errors, then reject the promise.\n        return new Promise(function (resolve) {\n            var _loop_1 = function (i, exp) {\n                if (Recoil_isPromise(exp)) {\n                    exp.then(function (result) {\n                        results[i] = result;\n                        exceptions[i] = undefined;\n                        resolve(wrapLoadables(dependencies, results, exceptions));\n                    }).catch(function (error) {\n                        exceptions[i] = error;\n                        resolve(wrapLoadables(dependencies, results, exceptions));\n                    });\n                }\n            };\n            for (var _a = 0, _b = exceptions.entries(); _a < _b.length; _a++) {\n                var _c = _b[_a], i = _c[0], exp = _c[1];\n                _loop_1(i, exp);\n            }\n        });\n    }; },\n    dangerouslyAllowMutability: true\n}); // Selector that requests all dependencies in parallel and waits for all to be\n// available before returning a value.  It will error if any dependencies error.\nvar waitForAll = Recoil_selectorFamily({\n    key: \'__waitForAll\',\n    get: function (dependencies) { return function (_a) {\n        var get = _a.get;\n        // Issue requests for all dependencies in parallel.\n        // Exceptions can either be Promises of pending results or real errors\n        var deps = unwrapDependencies(dependencies);\n        var _b = concurrentRequests(get, deps), results = _b[0], exceptions = _b[1]; // If all results are available, return the results\n        if (exceptions.every(function (exp) { return exp == null; })) {\n            return wrapResults(dependencies, results);\n        } // If we have any errors, throw the first error\n        var error = exceptions.find(isError);\n        if (error != null) {\n            throw error;\n        } // Otherwise, return a promise that will resolve when all results are available\n        return Promise.all(exceptions).then(function (exceptionResults) { return wrapResults(dependencies, combineAsyncResultsWithSyncResults(results, exceptionResults)); });\n    }; },\n    dangerouslyAllowMutability: true\n});\nvar waitForAllSettled = Recoil_selectorFamily({\n    key: \'__waitForAllSettled\',\n    get: function (dependencies) { return function (_a) {\n        var get = _a.get;\n        // Issue requests for all dependencies in parallel.\n        // Exceptions can either be Promises of pending results or real errors\n        var deps = unwrapDependencies(dependencies);\n        var _b = concurrentRequests(get, deps), results = _b[0], exceptions = _b[1]; // If all results are available, return the results\n        if (exceptions.every(function (exp) { return !Recoil_isPromise(exp); })) {\n            return wrapLoadables(dependencies, results, exceptions);\n        } // Wait for all results to settle\n        return Promise.all(exceptions.map(function (exp, i) { return Recoil_isPromise(exp) ? exp.then(function (result) {\n            results[i] = result;\n            exceptions[i] = undefined;\n        }).catch(function (error) {\n            results[i] = undefined;\n            exceptions[i] = error;\n        }) : null; })) // Then wrap them as loadables\n            .then(function () { return wrapLoadables(dependencies, results, exceptions); });\n    }; },\n    dangerouslyAllowMutability: true\n});\nvar noWait = Recoil_selectorFamily({\n    key: \'__noWait\',\n    get: function (dependency) { return function (_a) {\n        var get = _a.get;\n        try {\n            return loadableWithValue$4(get(dependency));\n        }\n        catch (exception) {\n            return Recoil_isPromise(exception) ? loadableWithPromise$3(exception) : loadableWithError$3(exception);\n        }\n    }; },\n    dangerouslyAllowMutability: true\n});\nvar Recoil_WaitFor = {\n    waitForNone: waitForNone,\n    waitForAny: waitForAny,\n    waitForAll: waitForAll,\n    waitForAllSettled: waitForAllSettled,\n    noWait: noWait\n};\nvar RecoilLoadable = Recoil_Loadable$1.RecoilLoadable;\nvar DefaultValue$3 = Recoil_Node.DefaultValue;\nvar RecoilRoot$2 = Recoil_RecoilRoot_react.RecoilRoot;\nvar isRecoilValue$5 = Recoil_RecoilValue$1.isRecoilValue;\nvar retentionZone$1 = Recoil_RetentionZone.retentionZone;\nvar freshSnapshot$2 = Recoil_Snapshot$1.freshSnapshot;\nvar useRecoilState$1 = Recoil_Hooks.useRecoilState, useRecoilStateLoadable$1 = Recoil_Hooks.useRecoilStateLoadable, useRecoilValue$1 = Recoil_Hooks.useRecoilValue, useRecoilValueLoadable$1 = Recoil_Hooks.useRecoilValueLoadable, useResetRecoilState$1 = Recoil_Hooks.useResetRecoilState, useSetRecoilState$1 = Recoil_Hooks.useSetRecoilState, useSetUnvalidatedAtomValues$1 = Recoil_Hooks.useSetUnvalidatedAtomValues;\nvar useGotoRecoilSnapshot$2 = Recoil_SnapshotHooks.useGotoRecoilSnapshot, useRecoilSnapshot$1 = Recoil_SnapshotHooks.useRecoilSnapshot, useRecoilTransactionObserver$1 = Recoil_SnapshotHooks.useRecoilTransactionObserver, useTransactionObservation_DEPRECATED$1 = Recoil_SnapshotHooks.useTransactionObservation_DEPRECATED;\nvar noWait$1 = Recoil_WaitFor.noWait, waitForAll$1 = Recoil_WaitFor.waitForAll, waitForAllSettled$1 = Recoil_WaitFor.waitForAllSettled, waitForAny$1 = Recoil_WaitFor.waitForAny, waitForNone$1 = Recoil_WaitFor.waitForNone;\nvar Recoil_index = {\n    // Types\n    DefaultValue: DefaultValue$3,\n    isRecoilValue: isRecoilValue$5,\n    RecoilLoadable: RecoilLoadable,\n    // Recoil Root\n    RecoilRoot: RecoilRoot$2,\n    useRecoilBridgeAcrossReactRoots_UNSTABLE: Recoil_useRecoilBridgeAcrossReactRoots,\n    // Atoms/Selectors\n    atom: Recoil_atom,\n    selector: Recoil_selector,\n    // Convenience Atoms/Selectors\n    atomFamily: Recoil_atomFamily,\n    selectorFamily: Recoil_selectorFamily,\n    constSelector: Recoil_constSelector,\n    errorSelector: Recoil_errorSelector,\n    readOnlySelector: Recoil_readOnlySelector,\n    // Concurrency Helpers for Atoms/Selectors\n    noWait: noWait$1,\n    waitForNone: waitForNone$1,\n    waitForAny: waitForAny$1,\n    waitForAll: waitForAll$1,\n    waitForAllSettled: waitForAllSettled$1,\n    // Hooks for Atoms/Selectors\n    useRecoilValue: useRecoilValue$1,\n    useRecoilValueLoadable: useRecoilValueLoadable$1,\n    useRecoilState: useRecoilState$1,\n    useRecoilStateLoadable: useRecoilStateLoadable$1,\n    useSetRecoilState: useSetRecoilState$1,\n    useResetRecoilState: useResetRecoilState$1,\n    useGetRecoilValueInfo_UNSTABLE: Recoil_useGetRecoilValueInfo,\n    useRecoilRefresher_UNSTABLE: Recoil_useRecoilRefresher,\n    // Hooks for complex operations\n    useRecoilCallback: Recoil_useRecoilCallback,\n    useRecoilTransaction_UNSTABLE: Recoil_useRecoilTransaction,\n    // Snapshots\n    useGotoRecoilSnapshot: useGotoRecoilSnapshot$2,\n    useRecoilSnapshot: useRecoilSnapshot$1,\n    useRecoilTransactionObserver_UNSTABLE: useRecoilTransactionObserver$1,\n    useTransactionObservation_UNSTABLE: useTransactionObservation_DEPRECATED$1,\n    useSetUnvalidatedAtomValues_UNSTABLE: useSetUnvalidatedAtomValues$1,\n    snapshot_UNSTABLE: freshSnapshot$2,\n    // Memory Management\n    useRetain: Recoil_useRetain,\n    retentionZone: retentionZone$1\n};\nvar Recoil_index_1 = Recoil_index.DefaultValue;\nvar Recoil_index_2 = Recoil_index.isRecoilValue;\nvar Recoil_index_3 = Recoil_index.RecoilLoadable;\nvar Recoil_index_4 = Recoil_index.RecoilRoot;\nvar Recoil_index_5 = Recoil_index.useRecoilBridgeAcrossReactRoots_UNSTABLE;\nvar Recoil_index_6 = Recoil_index.atom;\nvar Recoil_index_7 = Recoil_index.selector;\nvar Recoil_index_8 = Recoil_index.atomFamily;\nvar Recoil_index_9 = Recoil_index.selectorFamily;\nvar Recoil_index_10 = Recoil_index.constSelector;\nvar Recoil_index_11 = Recoil_index.errorSelector;\nvar Recoil_index_12 = Recoil_index.readOnlySelector;\nvar Recoil_index_13 = Recoil_index.noWait;\nvar Recoil_index_14 = Recoil_index.waitForNone;\nvar Recoil_index_15 = Recoil_index.waitForAny;\nvar Recoil_index_16 = Recoil_index.waitForAll;\nvar Recoil_index_17 = Recoil_index.waitForAllSettled;\nvar Recoil_index_18 = Recoil_index.useRecoilValue;\nvar Recoil_index_19 = Recoil_index.useRecoilValueLoadable;\nvar Recoil_index_20 = Recoil_index.useRecoilState;\nvar Recoil_index_21 = Recoil_index.useRecoilStateLoadable;\nvar Recoil_index_22 = Recoil_index.useSetRecoilState;\nvar Recoil_index_23 = Recoil_index.useResetRecoilState;\nvar Recoil_index_24 = Recoil_index.useGetRecoilValueInfo_UNSTABLE;\nvar Recoil_index_25 = Recoil_index.useRecoilRefresher_UNSTABLE;\nvar Recoil_index_26 = Recoil_index.useRecoilCallback;\nvar Recoil_index_27 = Recoil_index.useRecoilTransaction_UNSTABLE;\nvar Recoil_index_28 = Recoil_index.useGotoRecoilSnapshot;\nvar Recoil_index_29 = Recoil_index.useRecoilSnapshot;\nvar Recoil_index_30 = Recoil_index.useRecoilTransactionObserver_UNSTABLE;\nvar Recoil_index_31 = Recoil_index.useTransactionObservation_UNSTABLE;\nvar Recoil_index_32 = Recoil_index.useSetUnvalidatedAtomValues_UNSTABLE;\nvar Recoil_index_33 = Recoil_index.snapshot_UNSTABLE;\nvar Recoil_index_34 = Recoil_index.useRetain;\nvar Recoil_index_35 = Recoil_index.retentionZone;\n/* harmony default export */ const recoil = (Recoil_index);\n\n\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nfunction extends_extends() {\n    extends_extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n            for (var key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return extends_extends.apply(this, arguments);\n}\n\n;// CONCATENATED MODULE: ./node_modules/history/index.js\n\nvar r, B = r || (r = {});\nB.Pop = "POP";\nB.Push = "PUSH";\nB.Replace = "REPLACE";\nvar C =  false ? 0 : function (b) { return b; };\nfunction D(b, h) { if (!b) {\n    "undefined" !== typeof console && console.warn(h);\n    try {\n        throw Error(h);\n    }\n    catch (k) { }\n} }\nfunction E(b) { b.preventDefault(); b.returnValue = ""; }\nfunction F() { var b = []; return { get length() { return b.length; }, push: function (h) { b.push(h); return function () { b = b.filter(function (k) { return k !== h; }); }; }, call: function (h) { b.forEach(function (k) { return k && k(h); }); } }; }\nfunction H() { return Math.random().toString(36).substr(2, 8); }\nfunction I(b) { var h = b.pathname, k = b.search; b = b.hash; return (void 0 === h ? "/" : h) + (void 0 === k ? "" : k) + (void 0 === b ? "" : b); }\nfunction J(b) { var h = {}; if (b) {\n    var k = b.indexOf("#");\n    0 <= k && (h.hash = b.substr(k), b = b.substr(0, k));\n    k = b.indexOf("?");\n    0 <= k && (h.search = b.substr(k), b = b.substr(0, k));\n    b && (h.pathname = b);\n} return h; }\nfunction createBrowserHistory(b) {\n    function h() { var c = p.location, a = m.state || {}; return [a.idx, C({ pathname: c.pathname, search: c.search, hash: c.hash, state: a.usr || null, key: a.key || "default" })]; }\n    function k(c) { return "string" === typeof c ? c : I(c); }\n    function x(c, a) { void 0 === a && (a = null); return C(extends_extends({ pathname: q.pathname, hash: "", search: "" }, "string" === typeof c ? J(c) : c, { state: a, key: H() })); }\n    function z(c) { t = c; c = h(); v = c[0]; q = c[1]; d.call({ action: t, location: q }); }\n    function A(c, a) {\n        function e() { A(c, a); }\n        var l = r.Push, g = x(c, a);\n        if (!f.length || (f.call({ action: l, location: g, retry: e }), !1)) {\n            var n = [{ usr: g.state, key: g.key, idx: v + 1 }, k(g)];\n            g = n[0];\n            n = n[1];\n            try {\n                m.pushState(g, "", n);\n            }\n            catch (G) {\n                p.location.assign(n);\n            }\n            z(l);\n        }\n    }\n    function y(c, a) { function e() { y(c, a); } var l = r.Replace, g = x(c, a); f.length && (f.call({ action: l, location: g, retry: e }), 1) || (g = [{ usr: g.state, key: g.key, idx: v }, k(g)], m.replaceState(g[0], "", g[1]), z(l)); }\n    function w(c) { m.go(c); }\n    void 0 === b && (b = {});\n    b = b.window;\n    var p = void 0 === b ? document.defaultView : b, m = p.history, u = null;\n    p.addEventListener("popstate", function () {\n        if (u)\n            f.call(u), u = null;\n        else {\n            var c = r.Pop, a = h(), e = a[0];\n            a = a[1];\n            if (f.length)\n                if (null != e) {\n                    var l = v - e;\n                    l && (u = { action: c, location: a, retry: function () { w(-1 * l); } }, w(l));\n                }\n                else\n                     false ? 0 :\n                        void 0;\n            else\n                z(c);\n        }\n    });\n    var t = r.Pop;\n    b = h();\n    var v = b[0], q = b[1], d = F(), f = F();\n    null == v && (v = 0, m.replaceState(extends_extends({}, m.state, { idx: v }), ""));\n    return { get action() { return t; }, get location() { return q; }, createHref: k, push: A, replace: y, go: w, back: function () { w(-1); }, forward: function () { w(1); }, listen: function (c) { return d.push(c); }, block: function (c) { var a = f.push(c); 1 === f.length && p.addEventListener("beforeunload", E); return function () { a(); f.length || p.removeEventListener("beforeunload", E); }; } };\n}\n;\nfunction history_createHashHistory(b) {\n    function h() { var a = J(m.location.hash.substr(1)), e = a.pathname, l = a.search; a = a.hash; var g = u.state || {}; return [g.idx, C({ pathname: void 0 === e ? "/" : e, search: void 0 === l ? "" : l, hash: void 0 === a ? "" : a, state: g.usr || null, key: g.key || "default" })]; }\n    function k() {\n        if (t)\n            c.call(t), t = null;\n        else {\n            var a = r.Pop, e = h(), l = e[0];\n            e = e[1];\n            if (c.length)\n                if (null != l) {\n                    var g = q - l;\n                    g && (t = { action: a, location: e, retry: function () { p(-1 * g); } }, p(g));\n                }\n                else\n                     false ? 0 :\n                        void 0;\n            else\n                A(a);\n        }\n    }\n    function x(a) { var e = document.querySelector("base"), l = ""; e && e.getAttribute("href") && (e = m.location.href, l = e.indexOf("#"), l = -1 === l ? e : e.slice(0, l)); return l + "#" + ("string" === typeof a ? a : I(a)); }\n    function z(a, e) { void 0 === e && (e = null); return C(_extends({ pathname: d.pathname, hash: "", search: "" }, "string" === typeof a ? J(a) : a, { state: e, key: H() })); }\n    function A(a) { v = a; a = h(); q = a[0]; d = a[1]; f.call({ action: v, location: d }); }\n    function y(a, e) {\n        function l() { y(a, e); }\n        var g = r.Push, n = z(a, e);\n         false ?\n            0 : void 0;\n        if (!c.length || (c.call({ action: g, location: n, retry: l }), !1)) {\n            var G = [{ usr: n.state, key: n.key, idx: q + 1 }, x(n)];\n            n = G[0];\n            G = G[1];\n            try {\n                u.pushState(n, "", G);\n            }\n            catch (K) {\n                m.location.assign(G);\n            }\n            A(g);\n        }\n    }\n    function w(a, e) {\n        function l() { w(a, e); }\n        var g = r.Replace, n = z(a, e);\n         false ? 0 : void 0;\n        c.length && (c.call({ action: g, location: n, retry: l }), 1) || (n = [{ usr: n.state, key: n.key, idx: q }, x(n)], u.replaceState(n[0], "", n[1]), A(g));\n    }\n    function p(a) { u.go(a); }\n    void 0 === b && (b = {});\n    b = b.window;\n    var m = void 0 === b ? document.defaultView : b, u = m.history, t = null;\n    m.addEventListener("popstate", k);\n    m.addEventListener("hashchange", function () { var a = h()[1]; I(a) !== I(d) && k(); });\n    var v = r.Pop;\n    b = h();\n    var q = b[0], d = b[1], f = F(), c = F();\n    null == q && (q = 0, u.replaceState(_extends({}, u.state, { idx: q }), ""));\n    return { get action() { return v; }, get location() { return d; },\n        createHref: x, push: y, replace: w, go: p, back: function () { p(-1); }, forward: function () { p(1); }, listen: function (a) { return f.push(a); }, block: function (a) { var e = c.push(a); 1 === c.length && m.addEventListener("beforeunload", E); return function () { e(); c.length || m.removeEventListener("beforeunload", E); }; } };\n}\n;\nfunction history_createMemoryHistory(b) {\n    function h(d, f) { void 0 === f && (f = null); return C(_extends({ pathname: t.pathname, search: "", hash: "" }, "string" === typeof d ? J(d) : d, { state: f, key: H() })); }\n    function k(d, f, c) { return !q.length || (q.call({ action: d, location: f, retry: c }), !1); }\n    function x(d, f) { u = d; t = f; v.call({ action: u, location: t }); }\n    function z(d, f) {\n        var c = r.Push, a = h(d, f);\n         false ? 0 :\n            void 0;\n        k(c, a, function () { z(d, f); }) && (m += 1, p.splice(m, p.length, a), x(c, a));\n    }\n    function A(d, f) { var c = r.Replace, a = h(d, f);  false ? 0 : void 0; k(c, a, function () { A(d, f); }) && (p[m] = a, x(c, a)); }\n    function y(d) { var f = Math.min(Math.max(m + d, 0), p.length - 1), c = r.Pop, a = p[f]; k(c, a, function () { y(d); }) && (m = f, x(c, a)); }\n    void 0 === b && (b = {});\n    var w = b;\n    b = w.initialEntries;\n    w = w.initialIndex;\n    var p = (void 0 ===\n        b ? ["/"] : b).map(function (d) { var f = C(_extends({ pathname: "/", search: "", hash: "", state: null, key: H() }, "string" === typeof d ? J(d) : d));  false ? 0 : void 0; return f; }), m = Math.min(Math.max(null == w ? p.length - 1 : w, 0), p.length - 1), u = r.Pop, t = p[m], v = F(), q = F();\n    return { get index() { return m; }, get action() { return u; }, get location() { return t; }, createHref: function (d) {\n            return "string" ===\n                typeof d ? d : I(d);\n        }, push: z, replace: A, go: y, back: function () { y(-1); }, forward: function () { y(1); }, listen: function (d) { return v.push(d); }, block: function (d) { return q.push(d); } };\n}\n;\n\n//# sourceMappingURL=index.js.map\n\n;// CONCATENATED MODULE: ./node_modules/react-router/index.js\n/**\n * React Router v6.0.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\n\nfunction react_router_invariant(cond, message) {\n    if (!cond)\n        throw new Error(message);\n}\nfunction warning(cond, message) {\n    if (!cond) {\n        // eslint-disable-next-line no-console\n        if (typeof console !== "undefined")\n            console.warn(message);\n        try {\n            // Welcome to debugging React Router!\n            //\n            // This error is thrown as a convenience so you can more easily\n            // find the source for a warning that appears in the console by\n            // enabling "pause on exceptions" in your JavaScript debugger.\n            throw new Error(message); // eslint-disable-next-line no-empty\n        }\n        catch (e) { }\n    }\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n    if (!cond && !alreadyWarned[key]) {\n        alreadyWarned[key] = true;\n         false ? 0 : void 0;\n    }\n} ///////////////////////////////////////////////////////////////////////////////\n// CONTEXT\n///////////////////////////////////////////////////////////////////////////////\n/**\n * A Navigator is a "location changer"; it\'s how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid "tearing" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nvar NavigationContext = /*#__PURE__*/ (0,react.createContext)(null);\nif (false) {}\nvar LocationContext = /*#__PURE__*/ (0,react.createContext)(null);\nif (false) {}\nvar RouteContext = /*#__PURE__*/ (0,react.createContext)({\n    outlet: null,\n    matches: []\n});\nif (false) {} ///////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n///////////////////////////////////////////////////////////////////////////////\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/api/MemoryRouter\n */\nfunction MemoryRouter(_ref) {\n    var basename = _ref.basename, children = _ref.children, initialEntries = _ref.initialEntries, initialIndex = _ref.initialIndex;\n    var historyRef = useRef();\n    if (historyRef.current == null) {\n        historyRef.current = createMemoryHistory({\n            initialEntries: initialEntries,\n            initialIndex: initialIndex\n        });\n    }\n    var history = historyRef.current;\n    var _a = useState({\n        action: history.action,\n        location: history.location\n    }), state = _a[0], setState = _a[1];\n    useLayoutEffect(function () { return history.listen(setState); }, [history]);\n    return /*#__PURE__*/ createElement(react_router_Router, {\n        basename: basename,\n        children: children,\n        location: state.location,\n        navigationType: state.action,\n        navigator: history\n    });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/api/Navigate\n */\nfunction Navigate(_ref2) {\n    var to = _ref2.to, replace = _ref2.replace, state = _ref2.state;\n    !useInRouterContext() ?  false ? 0 : react_router_invariant(false) : void 0;\n     false ? 0 : void 0;\n    var navigate = react_router_useNavigate();\n    useEffect(function () {\n        navigate(to, {\n            replace: replace,\n            state: state\n        });\n    });\n    return null;\n}\n/**\n * Renders the child route\'s element, if there is one.\n *\n * @see https://reactrouter.com/api/Outlet\n */\nfunction Outlet(_props) {\n    return useOutlet();\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/api/Route\n */\nfunction Route(_props) {\n     false ? 0 : react_router_invariant(false);\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won\'t render a <Router> directly. Instead, you\'ll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/api/Router\n */\nfunction react_router_Router(_ref3) {\n    var _a = _ref3.basename, basenameProp = _a === void 0 ? "/" : _a, _b = _ref3.children, children = _b === void 0 ? null : _b, locationProp = _ref3.location, _c = _ref3.navigationType, navigationType = _c === void 0 ? r.Pop : _c, navigator = _ref3.navigator, _d = _ref3.static, staticProp = _d === void 0 ? false : _d;\n    !!useInRouterContext() ?  false ? 0 : react_router_invariant(false) : void 0;\n    var basename = normalizePathname(basenameProp);\n    var navigationContext = (0,react.useMemo)(function () { return ({\n        basename: basename,\n        navigator: navigator,\n        static: staticProp\n    }); }, [basename, navigator, staticProp]);\n    if (typeof locationProp === "string") {\n        locationProp = J(locationProp);\n    }\n    var _e = locationProp.pathname, pathname = _e === void 0 ? "/" : _e, _f = locationProp.search, search = _f === void 0 ? "" : _f, _g = locationProp.hash, hash = _g === void 0 ? "" : _g, _h = locationProp.state, state = _h === void 0 ? null : _h, _j = locationProp.key, key = _j === void 0 ? "default" : _j;\n    var location = (0,react.useMemo)(function () {\n        var trailingPathname = stripBasename(pathname, basename);\n        if (trailingPathname == null) {\n            return null;\n        }\n        return {\n            pathname: trailingPathname,\n            search: search,\n            hash: hash,\n            state: state,\n            key: key\n        };\n    }, [basename, pathname, search, hash, state, key]);\n     false ? 0 : void 0;\n    if (location == null) {\n        return null;\n    }\n    return /*#__PURE__*/ (0,react.createElement)(NavigationContext.Provider, {\n        value: navigationContext\n    }, /*#__PURE__*/ (0,react.createElement)(LocationContext.Provider, {\n        children: children,\n        value: {\n            location: location,\n            navigationType: navigationType\n        }\n    }));\n}\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/api/Routes\n */\nfunction Routes(_ref4) {\n    var children = _ref4.children, location = _ref4.location;\n    return useRoutes(createRoutesFromChildren(children), location);\n} ///////////////////////////////////////////////////////////////////////////////\n// HOOKS\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Returns the full href for the given "to" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/api/useHref\n */\nfunction react_router_useHref(to) {\n    !useInRouterContext() ?  false ? 0 : react_router_invariant(false) : void 0;\n    var _a = useContext(NavigationContext), basename = _a.basename, navigator = _a.navigator;\n    var _b = react_router_useResolvedPath(to), hash = _b.hash, pathname = _b.pathname, search = _b.search;\n    var joinedPathname = pathname;\n    if (basename !== "/") {\n        var toPathname = getToPathname(to);\n        var endsWithSlash = toPathname != null && toPathname.endsWith("/");\n        joinedPathname = pathname === "/" ? basename + (endsWithSlash ? "/" : "") : joinPaths([basename, pathname]);\n    }\n    return navigator.createHref({\n        pathname: joinedPathname,\n        search: search,\n        hash: hash\n    });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/api/useInRouterContext\n */\nfunction useInRouterContext() {\n    return (0,react.useContext)(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you\'re using this it may mean you\'re doing some of your own\n * "routing" in your app, and we\'d like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/api/useLocation\n */\nfunction react_router_useLocation() {\n    !useInRouterContext() ?  false ? 0 : react_router_invariant(false) : void 0;\n    return (0,react.useContext)(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/api/useNavigationType\n */\nfunction useNavigationType() {\n    return useContext(LocationContext).navigationType;\n}\n/**\n * Returns true if the URL for the given "to" value matches the current URL.\n * This is useful for components that need to know "active" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/api/useMatch\n */\nfunction useMatch(pattern) {\n    !useInRouterContext() ?  false ? 0 : react_router_invariant(false) : void 0;\n    return matchPath(pattern, react_router_useLocation().pathname);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/api/useNavigate\n */\nfunction react_router_useNavigate() {\n    !useInRouterContext() ?  false ? 0 : react_router_invariant(false) : void 0;\n    var _a = useContext(NavigationContext), basename = _a.basename, navigator = _a.navigator;\n    var matches = useContext(RouteContext).matches;\n    var locationPathname = react_router_useLocation().pathname;\n    var routePathnamesJson = JSON.stringify(matches.map(function (match) { return match.pathnameBase; }));\n    var activeRef = useRef(false);\n    useEffect(function () {\n        activeRef.current = true;\n    });\n    var navigate = useCallback(function (to, options) {\n        if (options === void 0) {\n            options = {};\n        }\n         false ? 0 : void 0;\n        if (!activeRef.current)\n            return;\n        if (typeof to === "number") {\n            navigator.go(to);\n            return;\n        }\n        var path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);\n        if (basename !== "/") {\n            path.pathname = joinPaths([basename, path.pathname]);\n        }\n        (!!options.replace ? navigator.replace : navigator.push)(path, options.state);\n    }, [basename, navigator, routePathnamesJson, locationPathname]);\n    return navigate;\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/api/useOutlet\n */\nfunction useOutlet() {\n    return (0,react.useContext)(RouteContext).outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/api/useParams\n */\nfunction useParams() {\n    var matches = useContext(RouteContext).matches;\n    var routeMatch = matches[matches.length - 1];\n    return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/api/useResolvedPath\n */\nfunction react_router_useResolvedPath(to) {\n    var matches = useContext(RouteContext).matches;\n    var locationPathname = react_router_useLocation().pathname;\n    var routePathnamesJson = JSON.stringify(matches.map(function (match) { return match.pathnameBase; }));\n    return useMemo(function () { return resolveTo(to, JSON.parse(routePathnamesJson), locationPathname); }, [to, routePathnamesJson, locationPathname]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route\'s\n * element.\n *\n * @see https://reactrouter.com/api/useRoutes\n */\nfunction useRoutes(routes, locationArg) {\n    !useInRouterContext() ?  false ? 0 : react_router_invariant(false) : void 0;\n    var parentMatches = (0,react.useContext)(RouteContext).matches;\n    var routeMatch = parentMatches[parentMatches.length - 1];\n    var parentParams = routeMatch ? routeMatch.params : {};\n    var parentPathname = routeMatch ? routeMatch.pathname : "/";\n    var parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";\n    var parentRoute = routeMatch && routeMatch.route;\n    if (false) { var parentPath; }\n    var locationFromContext = react_router_useLocation();\n    var location;\n    if (locationArg) {\n        var _parsedLocationArg$pa;\n        var parsedLocationArg = typeof locationArg === "string" ? J(locationArg) : locationArg;\n        !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ?  false ? 0 : react_router_invariant(false) : void 0;\n        location = parsedLocationArg;\n    }\n    else {\n        location = locationFromContext;\n    }\n    var pathname = location.pathname || "/";\n    var remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/";\n    var matches = matchRoutes(routes, {\n        pathname: remainingPathname\n    });\n    if (false) {}\n    return _renderMatches(matches && matches.map(function (match) { return Object.assign({}, match, {\n        params: Object.assign({}, parentParams, match.params),\n        pathname: joinPaths([parentPathnameBase, match.pathname]),\n        pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])\n    }); }), parentMatches);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Creates a route config from a React "children" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/api/createRoutesFromChildren\n */\nfunction createRoutesFromChildren(children) {\n    var routes = [];\n    react.Children.forEach(children, function (element) {\n        if (!(0,react.isValidElement)(element)) {\n            // Ignore non-elements. This allows people to more easily inline\n            // conditionals in their route config.\n            return;\n        }\n        if (element.type === react.Fragment) {\n            // Transparently support React.Fragment and its children.\n            routes.push.apply(routes, createRoutesFromChildren(element.props.children));\n            return;\n        }\n        var route = {\n            caseSensitive: element.props.caseSensitive,\n            element: element.props.element,\n            index: element.props.index,\n            path: element.props.path\n        };\n        if (element.props.children) {\n            route.children = createRoutesFromChildren(element.props.children);\n        }\n        routes.push(route);\n    });\n    return routes;\n}\n/**\n * The parameters that were parsed from the URL path.\n */\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/api/generatePath\n */\nfunction generatePath(path, params) {\n    if (params === void 0) {\n        params = {};\n    }\n    return path.replace(/:(\\w+)/g, function (_, key) {\n        !(params[key] != null) ?  false ? 0 : react_router_invariant(false) : void 0;\n        return params[key];\n    }).replace(/\\/*\\*$/, function (_) { return params["*"] == null ? "" : params["*"].replace(/^\\/*/, "/"); });\n}\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/api/matchRoutes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n    if (basename === void 0) {\n        basename = "/";\n    }\n    var location = typeof locationArg === "string" ? J(locationArg) : locationArg;\n    var pathname = stripBasename(location.pathname || "/", basename);\n    if (pathname == null) {\n        return null;\n    }\n    var branches = flattenRoutes(routes);\n    rankRouteBranches(branches);\n    var matches = null;\n    for (var i = 0; matches == null && i < branches.length; ++i) {\n        matches = matchRouteBranch(branches[i], routes, pathname);\n    }\n    return matches;\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n    if (branches === void 0) {\n        branches = [];\n    }\n    if (parentsMeta === void 0) {\n        parentsMeta = [];\n    }\n    if (parentPath === void 0) {\n        parentPath = "";\n    }\n    routes.forEach(function (route, index) {\n        var meta = {\n            relativePath: route.path || "",\n            caseSensitive: route.caseSensitive === true,\n            childrenIndex: index\n        };\n        if (meta.relativePath.startsWith("/")) {\n            !meta.relativePath.startsWith(parentPath) ?  false ? 0 : react_router_invariant(false) : void 0;\n            meta.relativePath = meta.relativePath.slice(parentPath.length);\n        }\n        var path = joinPaths([parentPath, meta.relativePath]);\n        var routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n        // route tree depth-first and child routes appear before their parents in\n        // the "flattened" version.\n        if (route.children && route.children.length > 0) {\n            !(route.index !== true) ?  false ? 0 : react_router_invariant(false) : void 0;\n            flattenRoutes(route.children, branches, routesMeta, path);\n        } // Routes without a path shouldn\'t ever match by themselves unless they are\n        // index routes, so don\'t add them to the list of possible branches.\n        if (route.path == null && !route.index) {\n            return;\n        }\n        branches.push({\n            path: path,\n            score: computeScore(path, route.index),\n            routesMeta: routesMeta\n        });\n    });\n    return branches;\n}\nfunction rankRouteBranches(branches) {\n    branches.sort(function (a, b) { return a.score !== b.score ? b.score - a.score // Higher score first\n        : compareIndexes(a.routesMeta.map(function (meta) { return meta.childrenIndex; }), b.routesMeta.map(function (meta) { return meta.childrenIndex; })); });\n}\nvar paramRe = /^:\\w+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = function (s) { return s === "*"; };\nfunction computeScore(path, index) {\n    var segments = path.split("/");\n    var initialScore = segments.length;\n    if (segments.some(isSplat)) {\n        initialScore += splatPenalty;\n    }\n    if (index) {\n        initialScore += indexRouteValue;\n    }\n    return segments.filter(function (s) { return !isSplat(s); }).reduce(function (score, segment) { return score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue); }, initialScore);\n}\nfunction compareIndexes(a, b) {\n    var siblings = a.length === b.length && a.slice(0, -1).every(function (n, i) { return n === b[i]; });\n    return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n        // first. This allows people to have fine-grained control over the matching\n        // behavior by simply putting routes with identical paths in the order they\n        // want them tried.\n        a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn\'t really make sense to rank non-siblings by index,\n        // so they sort equally.\n        0;\n}\nfunction matchRouteBranch(branch, // TODO: attach original route object inside routesMeta so we don\'t need this arg\nroutesArg, pathname) {\n    var routes = routesArg;\n    var routesMeta = branch.routesMeta;\n    var matchedParams = {};\n    var matchedPathname = "/";\n    var matches = [];\n    for (var i = 0; i < routesMeta.length; ++i) {\n        var meta = routesMeta[i];\n        var end = i === routesMeta.length - 1;\n        var remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";\n        var match = matchPath({\n            path: meta.relativePath,\n            caseSensitive: meta.caseSensitive,\n            end: end\n        }, remainingPathname);\n        if (!match)\n            return null;\n        Object.assign(matchedParams, match.params);\n        var route = routes[meta.childrenIndex];\n        matches.push({\n            params: matchedParams,\n            pathname: joinPaths([matchedPathname, match.pathname]),\n            pathnameBase: joinPaths([matchedPathname, match.pathnameBase]),\n            route: route\n        });\n        if (match.pathnameBase !== "/") {\n            matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n        }\n        routes = route.children;\n    }\n    return matches;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n    return _renderMatches(matches);\n}\nfunction _renderMatches(matches, parentMatches) {\n    if (parentMatches === void 0) {\n        parentMatches = [];\n    }\n    if (matches == null)\n        return null;\n    return matches.reduceRight(function (outlet, match, index) {\n        return /*#__PURE__*/ (0,react.createElement)(RouteContext.Provider, {\n            children: match.route.element !== undefined ? match.route.element : /*#__PURE__*/ (0,react.createElement)(Outlet, null),\n            value: {\n                outlet: outlet,\n                matches: parentMatches.concat(matches.slice(0, index + 1))\n            }\n        });\n    }, null);\n}\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/api/matchPath\n */\nfunction matchPath(pattern, pathname) {\n    if (typeof pattern === "string") {\n        pattern = {\n            path: pattern,\n            caseSensitive: false,\n            end: true\n        };\n    }\n    var _a = compilePath(pattern.path, pattern.caseSensitive, pattern.end), matcher = _a[0], paramNames = _a[1];\n    var match = pathname.match(matcher);\n    if (!match)\n        return null;\n    var matchedPathname = match[0];\n    var pathnameBase = matchedPathname.replace(/(.)\\/+$/, "$1");\n    var captureGroups = match.slice(1);\n    var params = paramNames.reduce(function (memo, paramName, index) {\n        // We need to compute the pathnameBase here using the raw splat value\n        // instead of using params["*"] later because it will be decoded then\n        if (paramName === "*") {\n            var splatValue = captureGroups[index] || "";\n            pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, "$1");\n        }\n        memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || "", paramName);\n        return memo;\n    }, {});\n    return {\n        params: params,\n        pathname: matchedPathname,\n        pathnameBase: pathnameBase,\n        pattern: pattern\n    };\n}\nfunction compilePath(path, caseSensitive, end) {\n    if (caseSensitive === void 0) {\n        caseSensitive = false;\n    }\n    if (end === void 0) {\n        end = true;\n    }\n     false ? 0 : void 0;\n    var paramNames = [];\n    var regexpSource = "^" + path.replace(/\\/*\\*?$/, "") // Ignore trailing / and /*, we\'ll handle it below\n        .replace(/^\\/*/, "/") // Make sure it has a leading /\n        .replace(/[\\\\.*+^$?{}|()[\\]]/g, "\\\\$&") // Escape special regex chars\n        .replace(/:(\\w+)/g, function (_, paramName) {\n        paramNames.push(paramName);\n        return "([^\\\\/]+)";\n    });\n    if (path.endsWith("*")) {\n        paramNames.push("*");\n        regexpSource += path === "*" || path === "/*" ? "(.*)$" // Already matched the initial /, just match the rest\n            : "(?:\\\\/(.+)|\\\\/*)$"; // Don\'t include the / in params["*"]\n    }\n    else {\n        regexpSource += end ? "\\\\/*$" // When matching to the end, ignore trailing slashes\n            : // Otherwise, at least match a word boundary. This restricts parent\n                // routes to matching only their own words and nothing more, e.g. parent\n                // route "/home" should not match "/home2".\n                "(?:\\\\b|$)";\n    }\n    var matcher = new RegExp(regexpSource, caseSensitive ? undefined : "i");\n    return [matcher, paramNames];\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n    try {\n        return decodeURIComponent(value);\n    }\n    catch (error) {\n         false ? 0 : void 0;\n        return value;\n    }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/api/resolvePath\n */\nfunction resolvePath(to, fromPathname) {\n    if (fromPathname === void 0) {\n        fromPathname = "/";\n    }\n    var _a = typeof to === "string" ? parsePath(to) : to, toPathname = _a.pathname, _b = _a.search, search = _b === void 0 ? "" : _b, _c = _a.hash, hash = _c === void 0 ? "" : _c;\n    var pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n    return {\n        pathname: pathname,\n        search: normalizeSearch(search),\n        hash: normalizeHash(hash)\n    };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n    var segments = fromPathname.replace(/\\/+$/, "").split("/");\n    var relativeSegments = relativePath.split("/");\n    relativeSegments.forEach(function (segment) {\n        if (segment === "..") {\n            // Keep the root "" segment so the pathname starts at /\n            if (segments.length > 1)\n                segments.pop();\n        }\n        else if (segment !== ".") {\n            segments.push(segment);\n        }\n    });\n    return segments.length > 1 ? segments.join("/") : "/";\n}\nfunction resolveTo(toArg, routePathnames, locationPathname) {\n    var to = typeof toArg === "string" ? parsePath(toArg) : toArg;\n    var toPathname = toArg === "" || to.pathname === "" ? "/" : to.pathname; // If a pathname is explicitly provided in `to`, it should be relative to the\n    // route context. This is explained in `Note on `<Link to>` values` in our\n    // migration guide from v5 as a means of disambiguation between `to` values\n    // that begin with `/` and those that do not. However, this is problematic for\n    // `to` values that do not provide a pathname. `to` can simply be a search or\n    // hash string, in which case we should assume that the navigation is relative\n    // to the current location\'s pathname and *not* the route pathname.\n    var from;\n    if (toPathname == null) {\n        from = locationPathname;\n    }\n    else {\n        var routePathnameIndex = routePathnames.length - 1;\n        if (toPathname.startsWith("..")) {\n            var toSegments = toPathname.split("/"); // Each leading .. segment means "go up one route" instead of "go up one\n            // URL segment".  This is a key difference from how <a href> works and a\n            // major reason we call this a "to" value instead of a "href".\n            while (toSegments[0] === "..") {\n                toSegments.shift();\n                routePathnameIndex -= 1;\n            }\n            to.pathname = toSegments.join("/");\n        } // If there are more ".." segments than parent routes, resolve relative to\n        // the root / URL.\n        from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";\n    }\n    var path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original to value had one.\n    if (toPathname && toPathname !== "/" && toPathname.endsWith("/") && !path.pathname.endsWith("/")) {\n        path.pathname += "/";\n    }\n    return path;\n}\nfunction getToPathname(to) {\n    // Empty strings should be treated the same as / paths\n    return to === "" || to.pathname === "" ? "/" : typeof to === "string" ? parsePath(to).pathname : to.pathname;\n}\nfunction stripBasename(pathname, basename) {\n    if (basename === "/")\n        return pathname;\n    if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n        return null;\n    }\n    var nextChar = pathname.charAt(basename.length);\n    if (nextChar && nextChar !== "/") {\n        // pathname does not start with basename/\n        return null;\n    }\n    return pathname.slice(basename.length) || "/";\n}\nvar joinPaths = function (paths) { return paths.join("/").replace(/\\/\\/+/g, "/"); };\nvar normalizePathname = function (pathname) { return pathname.replace(/\\/+$/, "").replace(/^\\/*/, "/"); };\nvar normalizeSearch = function (search) { return !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search; };\nvar normalizeHash = function (hash) { return !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash; }; ///////////////////////////////////////////////////////////////////////////////\n\n//# sourceMappingURL=index.js.map\n\n;// CONCATENATED MODULE: ./node_modules/react-router-dom/index.js\n/**\n * React Router DOM v6.0.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\n\n\n\nfunction react_router_dom_extends() {\n    react_router_dom_extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n            for (var key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return react_router_dom_extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null)\n        return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0; i < sourceKeys.length; i++) {\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0)\n            continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nvar _excluded = (/* unused pure expression or super */ null && (["onClick", "replace", "state", "target", "to"])), _excluded2 = (/* unused pure expression or super */ null && (["aria-current", "caseSensitive", "className", "end", "style", "to"]));\nfunction react_router_dom_warning(cond, message) {\n    if (!cond) {\n        // eslint-disable-next-line no-console\n        if (typeof console !== "undefined")\n            console.warn(message);\n        try {\n            // Welcome to debugging React Router!\n            //\n            // This error is thrown as a convenience so you can more easily\n            // find the source for a warning that appears in the console by\n            // enabling "pause on exceptions" in your JavaScript debugger.\n            throw new Error(message); // eslint-disable-next-line no-empty\n        }\n        catch (e) { }\n    }\n} ////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n/**\n * A <Router> for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref) {\n    var basename = _ref.basename, children = _ref.children, window = _ref.window;\n    var historyRef = (0,react.useRef)();\n    if (historyRef.current == null) {\n        historyRef.current = createBrowserHistory({\n            window: window\n        });\n    }\n    var history = historyRef.current;\n    var _a = (0,react.useState)({\n        action: history.action,\n        location: history.location\n    }), state = _a[0], setState = _a[1];\n    (0,react.useLayoutEffect)(function () { return history.listen(setState); }, [history]);\n    return /*#__PURE__*/ (0,react.createElement)(react_router_Router, {\n        basename: basename,\n        children: children,\n        location: state.location,\n        navigationType: state.action,\n        navigator: history\n    });\n}\n/**\n * A <Router> for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref2) {\n    var basename = _ref2.basename, children = _ref2.children, window = _ref2.window;\n    var historyRef = useRef();\n    if (historyRef.current == null) {\n        historyRef.current = createHashHistory({\n            window: window\n        });\n    }\n    var history = historyRef.current;\n    var _a = useState({\n        action: history.action,\n        location: history.location\n    }), state = _a[0], setState = _a[1];\n    useLayoutEffect(function () { return history.listen(setState); }, [history]);\n    return /*#__PURE__*/ createElement(Router, {\n        basename: basename,\n        children: children,\n        location: state.location,\n        navigationType: state.action,\n        navigator: history\n    });\n}\nfunction isModifiedEvent(event) {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\nvar Link = /*#__PURE__*/ (/* unused pure expression or super */ null && (forwardRef(function LinkWithRef(_ref3, ref) {\n    var onClick = _ref3.onClick, _a = _ref3.replace, replace = _a === void 0 ? false : _a, state = _ref3.state, target = _ref3.target, to = _ref3.to, rest = _objectWithoutPropertiesLoose(_ref3, _excluded);\n    var href = useHref(to);\n    var internalOnClick = useLinkClickHandler(to, {\n        replace: replace,\n        state: state,\n        target: target\n    });\n    function handleClick(event) {\n        if (onClick)\n            onClick(event);\n        if (!event.defaultPrevented) {\n            internalOnClick(event);\n        }\n    }\n    return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    createElement("a", react_router_dom_extends({}, rest, {\n        href: href,\n        onClick: handleClick,\n        ref: ref,\n        target: target\n    })));\n})));\nif (false) {}\n/**\n * A <Link> wrapper that knows if it\'s "active" or not.\n */\nvar NavLink = /*#__PURE__*/ (/* unused pure expression or super */ null && (forwardRef(function NavLinkWithRef(_ref4, ref) {\n    var _a = _ref4["aria-current"], ariaCurrentProp = _a === void 0 ? "page" : _a, _b = _ref4.caseSensitive, caseSensitive = _b === void 0 ? false : _b, _c = _ref4.className, classNameProp = _c === void 0 ? "" : _c, _d = _ref4.end, end = _d === void 0 ? false : _d, styleProp = _ref4.style, to = _ref4.to, rest = _objectWithoutPropertiesLoose(_ref4, _excluded2);\n    var location = useLocation();\n    var path = useResolvedPath(to);\n    var locationPathname = location.pathname;\n    var toPathname = path.pathname;\n    if (!caseSensitive) {\n        locationPathname = locationPathname.toLowerCase();\n        toPathname = toPathname.toLowerCase();\n    }\n    var isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === "/";\n    var ariaCurrent = isActive ? ariaCurrentProp : undefined;\n    var className;\n    if (typeof classNameProp === "function") {\n        className = classNameProp({\n            isActive: isActive\n        });\n    }\n    else {\n        // If the className prop is not a function, we use a default `active`\n        // class for <NavLink />s that are active. In v5 `active` was the default\n        // value for `activeClassName`, but we are removing that API and can still\n        // use the old default behavior for a cleaner upgrade path and keep the\n        // simple styling rules working as they currently do.\n        className = [classNameProp, isActive ? "active" : null].filter(Boolean).join(" ");\n    }\n    var style = typeof styleProp === "function" ? styleProp({\n        isActive: isActive\n    }) : styleProp;\n    return /*#__PURE__*/ createElement(Link, react_router_dom_extends({}, rest, {\n        "aria-current": ariaCurrent,\n        className: className,\n        ref: ref,\n        style: style,\n        to: to\n    }));\n})));\nif (false) {} ////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` compoments with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n    var _a = _temp === void 0 ? {} : _temp, target = _a.target, replaceProp = _a.replace, state = _a.state;\n    var navigate = useNavigate();\n    var location = useLocation();\n    var path = useResolvedPath(to);\n    return useCallback(function (event) {\n        if (event.button === 0 && ( // Ignore everything but left clicks\n        !target || target === "_self") && // Let browser handle "target=_blank" etc.\n            !isModifiedEvent(event) // Ignore clicks with modifier keys\n        ) {\n            event.preventDefault(); // If the URL hasn\'t changed, a regular <a> will do a replace instead of\n            // a push, so do the same here.\n            var replace = !!replaceProp || createPath(location) === createPath(path);\n            navigate(to, {\n                replace: replace,\n                state: state\n            });\n        }\n    }, [location, navigate, path, replaceProp, state, target, to]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n     false ? 0 : void 0;\n    var defaultSearchParamsRef = useRef(createSearchParams(defaultInit));\n    var location = useLocation();\n    var searchParams = useMemo(function () {\n        var searchParams = createSearchParams(location.search);\n        var _loop_1 = function (key) {\n            if (!searchParams.has(key)) {\n                defaultSearchParamsRef.current.getAll(key).forEach(function (value) {\n                    searchParams.append(key, value);\n                });\n            }\n        };\n        for (var _i = 0, _a = defaultSearchParamsRef.current.keys(); _i < _a.length; _i++) {\n            var key = _a[_i];\n            _loop_1(key);\n        }\n        return searchParams;\n    }, [location.search]);\n    var navigate = useNavigate();\n    var setSearchParams = useCallback(function (nextInit, navigateOptions) {\n        navigate("?" + createSearchParams(nextInit), navigateOptions);\n    }, [navigate]);\n    return [searchParams, setSearchParams];\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don\'t want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     [\'sort\', \'name\'],\n *     [\'sort\', \'price\']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: [\'name\', \'price\']\n *   });\n */\nfunction createSearchParams(init) {\n    if (init === void 0) {\n        init = "";\n    }\n    return new URLSearchParams(typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n        var value = init[key];\n        return memo.concat(Array.isArray(value) ? value.map(function (v) { return [key, v]; }) : [[key, value]]);\n    }, []));\n}\n\n//# sourceMappingURL=index.js.map\n\n;// CONCATENATED MODULE: ./src/pages/Index.tsx\n\nvar Index = function () {\n    return react.createElement("div", null, "Index");\n};\n/* harmony default export */ const pages_Index = (Index);\n\n;// CONCATENATED MODULE: ./src/pages/404.tsx\n\nvar _404 = function () {\n    return react.createElement("div", null, "404 page");\n};\n/* harmony default export */ const pages_404 = (_404);\n\n;// CONCATENATED MODULE: ./src/App.tsx\n\n\n\n\nvar App = function () { return react.createElement(BrowserRouter, null,\n    react.createElement(Routes, null,\n        react.createElement(Route, { path: "/", element: react.createElement(pages_Index, null) }),\n        react.createElement(Route, { path: "404", element: react.createElement(pages_404, null) }))); };\n/* harmony default export */ const src_App = (App);\n\n;// CONCATENATED MODULE: ./src/index.tsx\nvar src_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== "function" && b !== null)\n            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar redirectWithPrams = function () {\n    var history = window.history;\n    var location = new URL(window.location.href);\n    var prams = location.searchParams;\n    var path = prams.get("path");\n    if (path != null) {\n        var route = path.replace(/\\.[^/.]+$/, "");\n        var url = new URL(location.origin + route);\n        history.pushState({}, "", url);\n    }\n};\nvar Root = /** @class */ (function (_super) {\n    src_extends(Root, _super);\n    function Root(props) {\n        var _this = _super.call(this, props) || this;\n        redirectWithPrams();\n        return _this;\n    }\n    Root.prototype.render = function () {\n        return (react.createElement(react.StrictMode, null,\n            react.createElement(recoil.RecoilRoot, null,\n                react.createElement(src_App, null))));\n    };\n    return Root;\n}(react.Component));\nreact_dom.render(react.createElement(Root, null), document.getElementById("root"));\n\n\n//# sourceURL=webpack://segu-g.github.io/./src/index.tsx_+_8_modules?')}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}var __webpack_exports__=__webpack_require__(255)})();